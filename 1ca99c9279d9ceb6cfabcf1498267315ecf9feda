{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "dd3ecb4d_16bf5dce",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1002751
      },
      "writtenOn": "2021-09-07T21:59:05Z",
      "side": 1,
      "message": "There are a couple ugly hacks in here (the fts.h symlink so we can export just fts.h, having to #define parts of sys/cdefs.h), but I didn\u0027t find any better solutions.",
      "revId": "1ca99c9279d9ceb6cfabcf1498267315ecf9feda",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "dfa4a801_724c14e3",
        "filename": "libc/bionic/fts.c",
        "patchSetId": 1
      },
      "lineNbr": 47,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2021-09-08T01:17:10Z",
      "side": 1,
      "message": "should we have all of this stuff in a musl-compat.h somewhere and -include that instead?",
      "revId": "1ca99c9279d9ceb6cfabcf1498267315ecf9feda",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "dcdea5e9_0ce8831d",
        "filename": "libc/bionic/fts.c",
        "patchSetId": 1
      },
      "lineNbr": 47,
      "author": {
        "id": 1002751
      },
      "writtenOn": "2021-09-08T19:10:52Z",
      "side": 1,
      "message": "Do you mean a local -include or global -include for all files that compile against musl?  \n\nThis one could be in a locally -included musl-compat.h that is used when compiling fts.o, but __INTRODUCED_IN is needed by clients of libfts that include fts.h, so it would have to be in a global -include.  It would only be needed when including the one bionic header, so a global -include seems like overkill.",
      "parentUuid": "dfa4a801_724c14e3",
      "revId": "1ca99c9279d9ceb6cfabcf1498267315ecf9feda",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "edac404a_5289bf7d",
        "filename": "libc/bionic/fts.c",
        "patchSetId": 1
      },
      "lineNbr": 47,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2021-09-08T19:22:10Z",
      "side": 1,
      "message": "we can\u0027t export cflags as part of a cc_library, just includes?\n\nshould we instead link our fts into musl, and #include_next the bionic header in a musl header? that would be the most transparent option.\n\ni\u0027m wondering how many of these we\u0027ll end up with in the long run. and it always was a PITA with glibc that you couldn\u0027t __unused/__packed/etc --- i don\u0027t have much of an opinion on whether we should have the -include in the global musl cflags, but i do think we\u0027d probably be better off with a global musl-compat.h file (even if we only explicitly pull it in in those places where it\u0027s actually needed). (the counterargument to that being the education one --- we\u0027d probably still end up with people reinventing the wheel with these things because they don\u0027t realize they can just `-include` to make them go away.) (the counter-counterargument probably being \"doesn\u0027t help macOS\", though i\u0027m assuming that should be _less_ of a problem going forward, and if it matters we could always do similar there.)",
      "parentUuid": "dcdea5e9_0ce8831d",
      "revId": "1ca99c9279d9ceb6cfabcf1498267315ecf9feda",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4444bdc9_f68c38ca",
        "filename": "libc/bionic/fts.c",
        "patchSetId": 1
      },
      "lineNbr": 47,
      "author": {
        "id": 1002751
      },
      "writtenOn": "2021-09-08T19:39:10Z",
      "side": 1,
      "message": "IIRC Soong supports exported cflags, but doesn\u0027t expose it to Android.bp files on the assumption that the resulting spooky action at a distance would be hard to debug.\n\nI could add it to musl, but it is so rarely used (just elfutils and libabigail) that it seemed like a separate add-on library made more sense.\n\nIt turns out we can\u0027t -include a header with __unused, locally or globally, because musl\u0027s bits/stats.h has \"long __unused[3];\" in a structure definition.  It has to be in fts.c somewhere after the standard includes.\n\nAlternatively, it\u0027s only used once this file, I could just expand it to __attribute__((__unused__)).",
      "parentUuid": "edac404a_5289bf7d",
      "revId": "1ca99c9279d9ceb6cfabcf1498267315ecf9feda",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c5cb19c6_8cb063a9",
        "filename": "libc/bionic/fts.c",
        "patchSetId": 1
      },
      "lineNbr": 47,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2021-09-08T19:55:17Z",
      "side": 1,
      "message": "\u003e I could add it to musl, but it is so rarely used (just elfutils and libabigail) that it seemed like a separate add-on library made more sense.\n\nfor the \"build what we have\" goal, yes. but i\u0027m thinking ahead to the \"minimize the pain of writing code for device _and_ host\" goal :-)\n\n\u003e Alternatively, it\u0027s only used once this file, I could just expand it to __attribute__((__unused__)).\n\nyeah, sgtm. probably the least worst option here then. (one of these days i\u0027m hoping C will get the C++ [[blah]] syntax and we can try to remove a lot of this stuff with no damage to readability or portability. i\u0027ll not be holding my breath though.)",
      "parentUuid": "4444bdc9_f68c38ca",
      "revId": "1ca99c9279d9ceb6cfabcf1498267315ecf9feda",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "01a3b9b5_48d8448d",
        "filename": "libc/bionic/fts.c",
        "patchSetId": 1
      },
      "lineNbr": 47,
      "author": {
        "id": 1002751
      },
      "writtenOn": "2021-09-08T20:31:36Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "c5cb19c6_8cb063a9",
      "revId": "1ca99c9279d9ceb6cfabcf1498267315ecf9feda",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9e4b6f98_00fc0877",
        "filename": "libc/bionic/fts.c",
        "patchSetId": 1
      },
      "lineNbr": 68,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2021-09-08T19:55:17Z",
      "side": 1,
      "message": "actually, can we just delete this cruft completely? it\u0027s not upstream (http://cvsweb.openbsd.org/cgi-bin/cvsweb/src/lib/libc/gen/fts.c?rev\u003d1.60\u0026content-type\u003dtext/x-cvsweb-markup), and i think we get the DEF_WEAK we want from the openbsd-compat.h file anyway? or am i missing something?",
      "range": {
        "startLine": 65,
        "startChar": 0,
        "endLine": 68,
        "endChar": 6
      },
      "revId": "1ca99c9279d9ceb6cfabcf1498267315ecf9feda",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ef2320e2_64781482",
        "filename": "libc/bionic/fts.c",
        "patchSetId": 1
      },
      "lineNbr": 68,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2021-09-08T19:57:12Z",
      "side": 1,
      "message": "(not the #include --- i think we need that. i meant to select the DEF_WEAK bit.)",
      "parentUuid": "9e4b6f98_00fc0877",
      "range": {
        "startLine": 65,
        "startChar": 0,
        "endLine": 68,
        "endChar": 6
      },
      "revId": "1ca99c9279d9ceb6cfabcf1498267315ecf9feda",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e60e1742_b4895df2",
        "filename": "libc/bionic/fts.c",
        "patchSetId": 1
      },
      "lineNbr": 68,
      "author": {
        "id": 1002751
      },
      "writtenOn": "2021-09-08T20:02:21Z",
      "side": 1,
      "message": "When building bionic fts.c is built as part of libc_common, not libc_openbsd_ndk, and so it doesn\u0027t get -include upstream-openbsd/android/include/openbsd-compat.h that defines DEF_WEAK.  I have to #ifndef it here because I _do_ -include openbsd-compat.h when compiling libfts because I need it for recallocarray.c.  This whole compatibility block could be dropped if fts.c were moved into libc_openbsd_ndk.",
      "parentUuid": "ef2320e2_64781482",
      "range": {
        "startLine": 65,
        "startChar": 0,
        "endLine": 68,
        "endChar": 6
      },
      "revId": "1ca99c9279d9ceb6cfabcf1498267315ecf9feda",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5841073d_2924bead",
        "filename": "libc/bionic/fts.c",
        "patchSetId": 1
      },
      "lineNbr": 68,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2021-09-08T20:16:34Z",
      "side": 1,
      "message": "\u003e This whole compatibility block could be dropped if fts.c were moved into libc_openbsd_ndk.\n\nsgtm. i think the idea was probably \"libc_openbsd_ndk is \u0027pure\u0027 openbsd source\", but i don\u0027t think that\u0027s a useful distinction (other than that it was easy to divide by source directory when writing the build rules!), and there\u0027s clearly benefit to building this \"mostly openbsd\" source with its siblings, so...\n\n(/me wonders how many other mistakes we have like this where we\u0027re just making our own lives more difficult and adding useless diffs!)",
      "parentUuid": "e60e1742_b4895df2",
      "range": {
        "startLine": 65,
        "startChar": 0,
        "endLine": 68,
        "endChar": 6
      },
      "revId": "1ca99c9279d9ceb6cfabcf1498267315ecf9feda",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "2483e03a_51828c4e",
        "filename": "libc/bionic/fts.c",
        "patchSetId": 1
      },
      "lineNbr": 68,
      "author": {
        "id": 1002751
      },
      "writtenOn": "2021-09-08T20:31:36Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "5841073d_2924bead",
      "range": {
        "startLine": 65,
        "startChar": 0,
        "endLine": 68,
        "endChar": 6
      },
      "revId": "1ca99c9279d9ceb6cfabcf1498267315ecf9feda",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c704735b_7ca40ea7",
        "filename": "libc/include/fts.h",
        "patchSetId": 1
      },
      "lineNbr": 121,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2021-09-08T01:17:10Z",
      "side": 1,
      "message": "can we #include_next this in libfts instead? this header gets exported in the NDK...",
      "revId": "1ca99c9279d9ceb6cfabcf1498267315ecf9feda",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "342ba1a8_cc27e0c2",
        "filename": "libc/include/fts.h",
        "patchSetId": 1
      },
      "lineNbr": 121,
      "author": {
        "id": 1002751
      },
      "writtenOn": "2021-09-08T19:10:52Z",
      "side": 1,
      "message": "I can look at that, but it will require libfts to export two include directories that each contain an fts.h, one for use by libfts clients, and then one that is a symlink to the bionic one.  Do you have any opinion on where I should put those?  All inside bionic/libc, or should I be trying to move it to bionic/libfts?",
      "parentUuid": "c704735b_7ca40ea7",
      "revId": "1ca99c9279d9ceb6cfabcf1498267315ecf9feda",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a11540ae_90240d9a",
        "filename": "libc/include/fts.h",
        "patchSetId": 1
      },
      "lineNbr": 121,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2021-09-08T19:22:10Z",
      "side": 1,
      "message": "there are already a few `bionic/libc/*/include/`s. oddly they\u0027re all called `foo` rather than `libfoo`, so probably just bionic/libc/bionic_fts/include? (he says, realizing we never actually checked the bionic_regex stuff in...)\n\n(or in external/musl, as mentioned in the other comment.)",
      "parentUuid": "342ba1a8_cc27e0c2",
      "revId": "1ca99c9279d9ceb6cfabcf1498267315ecf9feda",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d2973044_5209182e",
        "filename": "libc/include/fts.h",
        "patchSetId": 1
      },
      "lineNbr": 121,
      "author": {
        "id": 1002751
      },
      "writtenOn": "2021-09-08T20:31:36Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "a11540ae_90240d9a",
      "revId": "1ca99c9279d9ceb6cfabcf1498267315ecf9feda",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}