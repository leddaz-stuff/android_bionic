{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "18260242_921bfcd0",
        "filename": "libc/include/locale.h",
        "patchSetId": 1
      },
      "lineNbr": 73,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2023-03-13T17:01:24Z",
      "side": 1,
      "message": "is this true? my reading of POSIX\u0027s language around the empty string implied to me that null _isn\u0027t_ acceptable and an implementation should use \"\" instead?",
      "range": {
        "startLine": 73,
        "startChar": 8,
        "endLine": 73,
        "endChar": 17
      },
      "revId": "1d9d4525083b53d327c46e156bc159aaaf2bb276",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e852ff95_4740ee13",
        "filename": "libc/include/locale.h",
        "patchSetId": 1
      },
      "lineNbr": 73,
      "author": {
        "id": 1890456
      },
      "writtenOn": "2023-03-16T02:03:58Z",
      "side": 1,
      "message": "From https://man7.org/linux/man-pages/man3/localeconv.3p.html\nThe members of the structure with type char * are pointers to strings, any of which (`except decimal_point`) can point to \"\", to indicate that the value is not available in the current locale or is of zero length.\n\nI think this can be null and others should be nonnull?",
      "parentUuid": "18260242_921bfcd0",
      "range": {
        "startLine": 73,
        "startChar": 8,
        "endLine": 73,
        "endChar": 17
      },
      "revId": "1d9d4525083b53d327c46e156bc159aaaf2bb276",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8c4cd9aa_0d44fc86",
        "filename": "libc/include/locale.h",
        "patchSetId": 1
      },
      "lineNbr": 73,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2023-03-16T17:59:19Z",
      "side": 1,
      "message": "yeah, the POSIX language is \"The members of the structure with type char * are pointers to strings, any of which (except decimal_point) can point to \"\", to indicate that the value is not available in the current locale or is of zero length. The members with type char are non-negative numbers, any of which can be {CHAR_MAX} to indicate that the value is not available in the current locale.\"\n\nsince nullptr _isn\u0027t_ a string, and they explicitly call out \"\" as the way to represent missing elements (and the word \"null\" does not appear in the POSIX documentation, except when referring to \u0027\\0\u0027), i don\u0027t think null is allowed here.",
      "parentUuid": "e852ff95_4740ee13",
      "range": {
        "startLine": 73,
        "startChar": 8,
        "endLine": 73,
        "endChar": 17
      },
      "revId": "1d9d4525083b53d327c46e156bc159aaaf2bb276",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "bb45803b_51168c96",
        "filename": "libc/include/locale.h",
        "patchSetId": 1
      },
      "lineNbr": 73,
      "author": {
        "id": 1890456
      },
      "writtenOn": "2023-03-16T18:22:19Z",
      "side": 1,
      "message": "I see. I will mark them all nonnull.",
      "parentUuid": "8c4cd9aa_0d44fc86",
      "range": {
        "startLine": 73,
        "startChar": 8,
        "endLine": 73,
        "endChar": 17
      },
      "revId": "1d9d4525083b53d327c46e156bc159aaaf2bb276",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6c83c9bc_a20dde6d",
        "filename": "libc/include/locale.h",
        "patchSetId": 1
      },
      "lineNbr": 101,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2023-03-13T17:01:24Z",
      "side": 1,
      "message": "how does this function report failure?",
      "range": {
        "startLine": 101,
        "startChar": 9,
        "endLine": 101,
        "endChar": 17
      },
      "revId": "1d9d4525083b53d327c46e156bc159aaaf2bb276",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e83a9cda_c7eb72ae",
        "filename": "libc/include/locale.h",
        "patchSetId": 1
      },
      "lineNbr": 101,
      "author": {
        "id": 1890456
      },
      "writtenOn": "2023-03-13T19:57:30Z",
      "side": 1,
      "message": "ohh it can be null",
      "parentUuid": "6c83c9bc_a20dde6d",
      "range": {
        "startLine": 101,
        "startChar": 9,
        "endLine": 101,
        "endChar": 17
      },
      "revId": "1d9d4525083b53d327c46e156bc159aaaf2bb276",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "681e5d1e_cc22e712",
        "filename": "libc/include/locale.h",
        "patchSetId": 1
      },
      "lineNbr": 103,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2023-03-13T17:01:24Z",
      "side": 1,
      "message": "how does this function report failure?",
      "range": {
        "startLine": 103,
        "startChar": 9,
        "endLine": 103,
        "endChar": 17
      },
      "revId": "1d9d4525083b53d327c46e156bc159aaaf2bb276",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ae585594_4b784595",
        "filename": "libc/include/locale.h",
        "patchSetId": 1
      },
      "lineNbr": 103,
      "author": {
        "id": 1890456
      },
      "writtenOn": "2023-03-13T19:57:30Z",
      "side": 1,
      "message": "ohh it can be null",
      "parentUuid": "681e5d1e_cc22e712",
      "range": {
        "startLine": 103,
        "startChar": 9,
        "endLine": 103,
        "endChar": 17
      },
      "revId": "1d9d4525083b53d327c46e156bc159aaaf2bb276",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "675e938f_d1e1c03c",
        "filename": "libc/include/locale.h",
        "patchSetId": 1
      },
      "lineNbr": 105,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2023-03-13T17:01:24Z",
      "side": 1,
      "message": "how does this function report failure?",
      "range": {
        "startLine": 105,
        "startChar": 9,
        "endLine": 105,
        "endChar": 17
      },
      "revId": "1d9d4525083b53d327c46e156bc159aaaf2bb276",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7574cc18_feeb16c1",
        "filename": "libc/include/locale.h",
        "patchSetId": 1
      },
      "lineNbr": 105,
      "author": {
        "id": 1890456
      },
      "writtenOn": "2023-03-13T19:57:30Z",
      "side": 1,
      "message": "From http://cs/android/bionic/libc/bionic/locale.cpp;l\u003d190;rcl\u003d7f9c6c4b716874a461c1a35ad91951d3ca3182f5, it will return a nonnull pointer?",
      "parentUuid": "675e938f_d1e1c03c",
      "range": {
        "startLine": 105,
        "startChar": 9,
        "endLine": 105,
        "endChar": 17
      },
      "revId": "1d9d4525083b53d327c46e156bc159aaaf2bb276",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2e1303c1_03a7fa4e",
        "filename": "libc/include/locale.h",
        "patchSetId": 1
      },
      "lineNbr": 105,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2023-03-14T00:24:32Z",
      "side": 1,
      "message": "_our_ implementation can\u0027t fail, but _an_ implementation is allowed to fail: https://pubs.opengroup.org/onlinepubs/9699919799/functions/uselocale.html\n\n(see the \"RETURN VALUE\" section. and, yes, on the face of it that does just look like a bad spec --- i don\u0027t see how you\u0027d actually recognize that situation.)",
      "parentUuid": "7574cc18_feeb16c1",
      "range": {
        "startLine": 105,
        "startChar": 9,
        "endLine": 105,
        "endChar": 17
      },
      "revId": "1d9d4525083b53d327c46e156bc159aaaf2bb276",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}