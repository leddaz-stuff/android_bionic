{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "8b68902e_6a278e48",
        "filename": "libc/Android.bp",
        "patchSetId": 1
      },
      "lineNbr": 1303,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2021-12-06T17:51:50Z",
      "side": 1,
      "message": "renaming the *file* seems the wrong way round? (i mean, adding a .gen. is fine, but then it\u0027s just bizarre that the *rule* has a name that doesn\u0027t include that.)\n\nwhat\u0027s the usual pattern in google3?",
      "revId": "7c0d5c43414be3f3fade44b959443085c73cc061",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1d47bd55_ff97dd93",
        "filename": "libc/Android.bp",
        "patchSetId": 1
      },
      "lineNbr": 1303,
      "author": {
        "id": 1514900
      },
      "writtenOn": "2021-12-07T00:58:03Z",
      "side": 1,
      "message": "Yep, realized this wouldn\u0027t work as Liz also pointed this out in the linked CL where these files are included on their basenames.\n\ngoogle3 generally handles this without any convention-- folks just name their genrule rule name and output name differently based on the context. I think it makes more sense here to rename the module name, and also add guardrails to Soong to prevent backsliding.",
      "parentUuid": "8b68902e_6a278e48",
      "revId": "7c0d5c43414be3f3fade44b959443085c73cc061",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7a458438_f330fa71",
        "filename": "libc/Android.bp",
        "patchSetId": 1
      },
      "lineNbr": 1303,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2021-12-07T01:57:47Z",
      "side": 1,
      "message": "are spaces allowed in bazel genrule names? can we just have the module name be the plain english \"generate syscalls-arm.S\"? (since the current name is the obvious good name --- that\u0027s why i was asking about google3 practice.)",
      "parentUuid": "1d47bd55_ff97dd93",
      "revId": "7c0d5c43414be3f3fade44b959443085c73cc061",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8475b033_c6caee90",
        "filename": "libc/Android.bp",
        "patchSetId": 1
      },
      "lineNbr": 1303,
      "author": {
        "id": 1514900
      },
      "writtenOn": "2021-12-07T02:19:45Z",
      "side": 1,
      "message": "No, spaces are not allowed in Bazel target labels for a variety of reasons, of which, ease of shell parsing is one.\n\nTo be precise, callers of the Bazel genrule can still use `//bionic/libc:syscalls-arm.S` in their dependency declarations even if the genrule *rule* name is renamed to say, `gen-syscalls-arm`. That\u0027s because Bazel can figure out that `//bionic/libc:syscalls-arm.S` is an output of the `gen-syscalls-arm` rule target.\n\ne.g. this would work:\n\n  genrule(\n    name \u003d \"gen-syscalls-arm\",\n    outs \u003d [\"syscalls-arm.S\"],\n    cmd \u003d \"some cmd..\",\n    ...\n  ) \n\n  cc_library(\n    name \u003d \"lib\",\n    srcs \u003d [\"syscalls-arm.S\"],\n    ...\n  )\n\nhttps://docs.bazel.build/versions/main/build-ref.html#targets has some docs about this.",
      "parentUuid": "7a458438_f330fa71",
      "revId": "7c0d5c43414be3f3fade44b959443085c73cc061",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}