{
  "comments": [
    {
      "key": {
        "uuid": "395a060d_1127a318",
        "filename": "libc/bionic/bionic_allocator.cpp",
        "patchSetId": 1
      },
      "lineNbr": 385,
      "author": {
        "id": 1631819
      },
      "writtenOn": "2020-07-14T22:10:20Z",
      "side": 1,
      "message": "[From previous review] \nenh : \"Why is this missing?\"\n\nvyng: \"On a second thought, maybe this is redundant? The thread_exit_callback would have been enough. (It\u0027s called before a thread\u0027s DTLS is freed)\nI had originally thought this on_destruction_cb should be called when a chunk of DTLS is freed, even when its thread is not dying yet, but now I don\u0027t think it\u0027s possible to find that point (because the memory is lazily allocated and freed).\nWDYT?\n\"",
      "range": {
        "startLine": 385,
        "startChar": 3,
        "endLine": 385,
        "endChar": 12
      },
      "revId": "db1457604969c3d6e4c0828ce71843991473e4a3",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "20baf02b_e91ac972",
        "filename": "libc/bionic/bionic_allocator.cpp",
        "patchSetId": 1
      },
      "lineNbr": 385,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2020-07-14T23:16:21Z",
      "side": 1,
      "message": "yeah, that makes sense to me (and we should just remove the TODO) unless rprichard knows better...",
      "parentUuid": "395a060d_1127a318",
      "range": {
        "startLine": 385,
        "startChar": 3,
        "endLine": 385,
        "endChar": 12
      },
      "revId": "db1457604969c3d6e4c0828ce71843991473e4a3",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1501a094_cc8e8d39",
        "filename": "libc/bionic/bionic_allocator.cpp",
        "patchSetId": 1
      },
      "lineNbr": 385,
      "author": {
        "id": 1631819
      },
      "writtenOn": "2020-07-15T01:28:38Z",
      "side": 1,
      "message": "Removed the TODO.\n\nBut keeping this open in case rprichard has a comment",
      "parentUuid": "20baf02b_e91ac972",
      "range": {
        "startLine": 385,
        "startChar": 3,
        "endLine": 385,
        "endChar": 12
      },
      "revId": "db1457604969c3d6e4c0828ce71843991473e4a3",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c6f42655_77e8870b",
        "filename": "libc/bionic/bionic_allocator.cpp",
        "patchSetId": 1
      },
      "lineNbr": 385,
      "author": {
        "id": 1229339
      },
      "writtenOn": "2020-07-16T07:44:40Z",
      "side": 1,
      "message": "All remaining DTLS memory is freed at thread-exit, but memory for unloaded modules is freed on the next call to __tls_get_addr. (Lazy freeing happens in update_tls_dtv, where it calls allocator.free).\n\nI think we can remove this TODO, though. We\u0027d want to call the callback from update_tls_dtv rather than here.",
      "parentUuid": "1501a094_cc8e8d39",
      "range": {
        "startLine": 385,
        "startChar": 3,
        "endLine": 385,
        "endChar": 12
      },
      "revId": "db1457604969c3d6e4c0828ce71843991473e4a3",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "79f10c8c_b513ab1b",
        "filename": "libc/bionic/bionic_allocator.cpp",
        "patchSetId": 1
      },
      "lineNbr": 385,
      "author": {
        "id": 1631819
      },
      "writtenOn": "2020-07-16T21:15:16Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "c6f42655_77e8870b",
      "range": {
        "startLine": 385,
        "startChar": 3,
        "endLine": 385,
        "endChar": 12
      },
      "revId": "db1457604969c3d6e4c0828ce71843991473e4a3",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e8c58288_ce64efd0",
        "filename": "libc/bionic/sys_thread_properties.cpp",
        "patchSetId": 1
      },
      "lineNbr": 55,
      "author": {
        "id": 1631819
      },
      "writtenOn": "2020-07-14T22:10:20Z",
      "side": 1,
      "message": "[from previous review]\nenh: \"why an array rather than a linked list?\nwhat do we see at the moment in practice, one callback per sanitizer? (because there\u0027s a separate array per .so aiui?)\"\n\nvyng: \"Sorry, I\u0027m not sure if you comment was literally about making this a linkedlist or if it was about bounded vs unbounded?\nThe original proposal suggested 8, which I assumed was because we don\u0027t want this to grow unchecked.\n\"",
      "range": {
        "startLine": 55,
        "startChar": 1,
        "endLine": 55,
        "endChar": 86
      },
      "revId": "db1457604969c3d6e4c0828ce71843991473e4a3",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "58a19b45_e65bf1c3",
        "filename": "libc/bionic/sys_thread_properties.cpp",
        "patchSetId": 1
      },
      "lineNbr": 55,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2020-07-14T23:16:21Z",
      "side": 1,
      "message": "both, plus space used in practice :-)\n\ni\u0027m assuming the normal case is 0, the sanitizer case is 1, and that there was no good reason behind the magic number 8? are we assuming that allocation is difficult/impossible when this is called?",
      "parentUuid": "e8c58288_ce64efd0",
      "range": {
        "startLine": 55,
        "startChar": 1,
        "endLine": 55,
        "endChar": 86
      },
      "revId": "db1457604969c3d6e4c0828ce71843991473e4a3",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a1d78141_847b85b0",
        "filename": "libc/bionic/sys_thread_properties.cpp",
        "patchSetId": 1
      },
      "lineNbr": 55,
      "author": {
        "id": 1631819
      },
      "writtenOn": "2020-07-15T01:28:38Z",
      "side": 1,
      "message": "Changed it to a linkedlist but have some concern ... \n\n\u003e there was no good reason behind the magic number 8?\n\nTBH, I don\u0027t know about the rationale behind \u00278\u0027. (I would guess it\u0027s 1 for each sanitizer ...)\n\n\u003e are we assuming that allocation is difficult/impossible when this is called?\nYea, this is supposed to be called before the thread is created, not sure that dynamic alloc would be ok ...",
      "parentUuid": "58a19b45_e65bf1c3",
      "range": {
        "startLine": 55,
        "startChar": 1,
        "endLine": 55,
        "endChar": 86
      },
      "revId": "db1457604969c3d6e4c0828ce71843991473e4a3",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4087a100_dc8b704a",
        "filename": "tests/sys_thread_properties_test.cpp",
        "patchSetId": 1
      },
      "lineNbr": 6,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2020-07-14T23:16:21Z",
      "side": 1,
      "message": "(add the usual `// TODO: \"x\" lost in CTS, b/34945607` because this is non-obvious.)",
      "revId": "db1457604969c3d6e4c0828ce71843991473e4a3",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b39ea471_36adb5eb",
        "filename": "tests/sys_thread_properties_test.cpp",
        "patchSetId": 1
      },
      "lineNbr": 6,
      "author": {
        "id": 1631819
      },
      "writtenOn": "2020-07-15T01:28:38Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "4087a100_dc8b704a",
      "revId": "db1457604969c3d6e4c0828ce71843991473e4a3",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}