{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "01f8d888_1a5460a1",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2024-03-14T20:10:06Z",
      "side": 1,
      "message": "(this is better than what\u0027s checked in, so although i think one of us should try the \"can\u0027t we just exit earlier?\" path, i\u0027m fine with that (a) being later and (b) being me instead of you. just as long as you say what your plan is so we don\u0027t just both assume the other\u0027s doing it.)",
      "revId": "6c2469154d318ea351404e48f622411bd7ddf57b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e97e547b_0ffaa8a9",
        "filename": "linker/linker_main.cpp",
        "patchSetId": 3
      },
      "lineNbr": 506,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2024-03-14T16:08:17Z",
      "side": 1,
      "message": "probably worth a comment explaining why you\u0027re _not_ skipping the tls/main thread initialization above?",
      "revId": "6c2469154d318ea351404e48f622411bd7ddf57b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "30c45c3e_3274c054",
        "filename": "linker/linker_main.cpp",
        "patchSetId": 3
      },
      "lineNbr": 506,
      "author": {
        "id": 1229339
      },
      "writtenOn": "2024-03-14T19:26:50Z",
      "side": 1,
      "message": "It\u0027s an attempt to avoid changing the linker/libc behavior more than necessary. AFAIK the TLS setup isn\u0027t necessary, but disabling it would mean a bunch of code running with the temporary TLS configuration when it normally runs with the finalized one.\n\nMaybe an alternative is:\n * Call _exit immediately after find_libraries, before MTE.\n * Add a comment to that _exit call listing the important things that are skipped by calling _exit -- constructor calls, the __cfi_init call.\n * Then clean up by removing the g_is_ldd check from call_*_constructors.\n\nI suppose the \"LINKER TIME\" measurement below *could* be useful for ldd, but probably not. I think TIMING has to be defined manually anyway.",
      "parentUuid": "e97e547b_0ffaa8a9",
      "revId": "6c2469154d318ea351404e48f622411bd7ddf57b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ff78fccd_46601544",
        "filename": "linker/linker_main.cpp",
        "patchSetId": 3
      },
      "lineNbr": 506,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2024-03-14T20:10:06Z",
      "side": 1,
      "message": "yeah, i think the \"early _exit()\" option is the thing i\u0027m still struggling to explain \"why didn\u0027t we just do that already?\" :-)\n\n(and i agree that stuff like the \"LINKER TIME\" stuff makes no sense for ldd, not least because we know full well from that rprichard guy\u0027s systrace stuff that \"all the time went to the constructors\" :-) but also because \"this is currently compiled out anyway\". i might fix that if/when i ever get round to http://b/309528372 \"accept glibc LD_DEBUG options\", but even then i don\u0027t think it makes sense.)",
      "parentUuid": "30c45c3e_3274c054",
      "revId": "6c2469154d318ea351404e48f622411bd7ddf57b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4f51d149_240d98ec",
        "filename": "linker/linker_main.cpp",
        "patchSetId": 3
      },
      "lineNbr": 512,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2024-03-14T16:08:17Z",
      "side": 1,
      "message": "do we want to skip the constructors too?",
      "revId": "6c2469154d318ea351404e48f622411bd7ddf57b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "998f344e_fb69c26d",
        "filename": "linker/linker_main.cpp",
        "patchSetId": 3
      },
      "lineNbr": 512,
      "author": {
        "id": 1229339
      },
      "writtenOn": "2024-03-14T19:26:50Z",
      "side": 1,
      "message": "Those are skipped in the call_constructors and call_pre_init_constructors functions themselves.",
      "parentUuid": "4f51d149_240d98ec",
      "revId": "6c2469154d318ea351404e48f622411bd7ddf57b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "5a66f34f_00f8a5e9",
        "filename": "linker/linker_main.cpp",
        "patchSetId": 3
      },
      "lineNbr": 512,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2024-03-14T20:10:06Z",
      "side": 1,
      "message": "yeah, but i feel like -- even though that was my fault! -- that\u0027s a mistake? (or at very least \"if i did that on purpose, i really should have left a comment!\"...)",
      "parentUuid": "998f344e_fb69c26d",
      "revId": "6c2469154d318ea351404e48f622411bd7ddf57b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "75d37a6e_566effc5",
        "filename": "linker/linker_relocate.cpp",
        "patchSetId": 3
      },
      "lineNbr": 589,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2024-03-14T16:08:17Z",
      "side": 1,
      "message": "\"care about\"? (since i don\u0027t think we\u0027re stating a strong opinion here, right? we\u0027re just saying \"we have no reason to believe this is useful\" rather than \"we explicitly don\u0027t want to do this\"?)",
      "range": {
        "startLine": 589,
        "startChar": 55,
        "endLine": 589,
        "endChar": 62
      },
      "revId": "6c2469154d318ea351404e48f622411bd7ddf57b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a22adda4_2e23fddc",
        "filename": "linker/linker_relocate.cpp",
        "patchSetId": 3
      },
      "lineNbr": 589,
      "author": {
        "id": 1229339
      },
      "writtenOn": "2024-03-14T21:04:05Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "75d37a6e_566effc5",
      "range": {
        "startLine": 589,
        "startChar": 55,
        "endLine": 589,
        "endChar": 62
      },
      "revId": "6c2469154d318ea351404e48f622411bd7ddf57b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4e8a6427_49fb0993",
        "filename": "linker/linker_tls.cpp",
        "patchSetId": 3
      },
      "lineNbr": 142,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2024-03-14T16:08:17Z",
      "side": 1,
      "message": "where?",
      "range": {
        "startLine": 141,
        "startChar": 46,
        "endLine": 142,
        "endChar": 48
      },
      "revId": "6c2469154d318ea351404e48f622411bd7ddf57b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d699cf61_3520dade",
        "filename": "linker/linker_tls.cpp",
        "patchSetId": 3
      },
      "lineNbr": 142,
      "author": {
        "id": 1229339
      },
      "writtenOn": "2024-03-14T19:26:50Z",
      "side": 1,
      "message": "Should I mention the `linker_setup_exe_static_tls` function in this comment? I tend not to mention other function names because they tend not to be updated when functions are renamed. I\u0027m not sure that\u0027s a good practice, though.\n\nI don\u0027t think it\u0027s actually hard to find what this comment is referring to?",
      "parentUuid": "4e8a6427_49fb0993",
      "range": {
        "startLine": 141,
        "startChar": 46,
        "endLine": 142,
        "endChar": 48
      },
      "revId": "6c2469154d318ea351404e48f622411bd7ddf57b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d194102b_6bc28a66",
        "filename": "linker/linker_tls.cpp",
        "patchSetId": 3
      },
      "lineNbr": 142,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2024-03-14T20:10:06Z",
      "side": 1,
      "message": "despite having just read this change in isolation, i didn\u0027t realize that\u0027s what you were saying,. i actually thought you knew something about L146 or L150 that i didn\u0027t that meant that they will catch the executable.\n\n(i know what you mean about not copy \u0026 pasting function names, because they do tend to go stale[1], so in this case i\u0027d be tempted to just rely on the comment that\u0027s already in the other function being enough for anyone who cares? if there _is_ something subtle you\u0027re trying to tell me here that i\u0027m too dense to have got so far, my follow up will be \"in that case shouldn\u0027t the other function\u0027s comment also be telling me about _this_ function\u0027s half of the deal?\" :-) )",
      "parentUuid": "d699cf61_3520dade",
      "range": {
        "startLine": 141,
        "startChar": 46,
        "endLine": 142,
        "endChar": 48
      },
      "revId": "6c2469154d318ea351404e48f622411bd7ddf57b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "aa5302f4_32e768fb",
        "filename": "linker/linker_tls.cpp",
        "patchSetId": 3
      },
      "lineNbr": 142,
      "author": {
        "id": 1229339
      },
      "writtenOn": "2024-03-14T21:04:05Z",
      "side": 1,
      "message": "I considered changing the comment to:\n```\n// For ldd, don\u0027t register TLS modules for any shared objects.\n```\n... but then that raises the question of \"well, why not?\". The answer is that the function is being consistent with the executable. That way, all of the soinfo objects lack a module ID, rather than making the first one special.\n\nI also considered removing the whole comment, but then it\u0027s unclear why g_is_ldd is disabling this function.\n\nMaybe a rewording is OK?",
      "parentUuid": "d194102b_6bc28a66",
      "range": {
        "startLine": 141,
        "startChar": 46,
        "endLine": 142,
        "endChar": 48
      },
      "revId": "6c2469154d318ea351404e48f622411bd7ddf57b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1a095687_eae772c8",
        "filename": "linker/linker_tls.cpp",
        "patchSetId": 3
      },
      "lineNbr": 143,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2024-03-14T21:11:31Z",
      "side": 1,
      "message": "not needed any more?",
      "revId": "6c2469154d318ea351404e48f622411bd7ddf57b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b898c52b_7a4cbe14",
        "filename": "linker/linker_tls.cpp",
        "patchSetId": 3
      },
      "lineNbr": 143,
      "author": {
        "id": 1229339
      },
      "writtenOn": "2024-03-14T21:32:21Z",
      "side": 1,
      "message": "I went back and decided to add back a comment. The bail-out in register_soinfo_tls is for consistency with executables, so not strictly needed.\n\nThis CL produces a valid StaticTlsLayout containing `bionic_tls` and `bionic_tcb` objects, and nothing from the loaded ELF modules. I believe this StaticTlsLayout isn\u0027t actually used, because ldd exits early.",
      "parentUuid": "1a095687_eae772c8",
      "revId": "6c2469154d318ea351404e48f622411bd7ddf57b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c7bb07e7_45c196f3",
        "filename": "linker/linker_tls.cpp",
        "patchSetId": 3
      },
      "lineNbr": 143,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2024-03-14T23:04:54Z",
      "side": 1,
      "message": "(yeah, i think the bit i was missing was that this is called from find_library(), so definitely still called even with the early exit.)",
      "parentUuid": "b898c52b_7a4cbe14",
      "revId": "6c2469154d318ea351404e48f622411bd7ddf57b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}