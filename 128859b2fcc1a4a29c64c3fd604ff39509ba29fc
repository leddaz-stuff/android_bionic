{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "e7d6dff3_8ea7fa5d",
        "filename": "libc/include/stdatomic.h",
        "patchSetId": 2
      },
      "lineNbr": 32,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2024-06-17T14:41:48Z",
      "side": 1,
      "message": "we want to keep this? llvm doesn\u0027t offer the C \u003cstdatomic.h\u003e? should this be in a `__cplusplus`-guarded section? shouldn\u0027t there still be a redirect to \u003catomic\u003e?",
      "revId": "128859b2fcc1a4a29c64c3fd604ff39509ba29fc",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c7a775cb_31fc36b5",
        "filename": "libc/include/stdatomic.h",
        "patchSetId": 2
      },
      "lineNbr": 32,
      "author": {
        "id": 1229339
      },
      "writtenOn": "2024-06-17T20:12:19Z",
      "side": 1,
      "message": "If we can enable libc++\u0027s redirection for all C++ versions (https://github.com/llvm/llvm-project/pull/95498), then I think we can skip the redirection here.",
      "parentUuid": "e7d6dff3_8ea7fa5d",
      "revId": "128859b2fcc1a4a29c64c3fd604ff39509ba29fc",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "19c1f0bb_563091a1",
        "filename": "libc/include/stdatomic.h",
        "patchSetId": 2
      },
      "lineNbr": 32,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2024-06-17T20:25:24Z",
      "side": 1,
      "message": "if you want to get this in in advance of that (which admittedly isn\u0027t clear, since you didn\u0027t add me as a reviewer, and i just showed up because i\u0027m a lurker, and the llvm change is only 4 days old :-) ) then explicitly add that to the code and commit message?\n\nthis is definitely an improvement even without that. (though that change seems so obviously what we _really_ want i\u0027d be more tempted to take that patch locally. hopefully it won\u0027t come to that though!)\n\nwhy doesn\u0027t iOS have this problem? they just didn\u0027t care about the C/C++ interop?",
      "parentUuid": "c7a775cb_31fc36b5",
      "revId": "128859b2fcc1a4a29c64c3fd604ff39509ba29fc",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "21346ef7_8cd7ece7",
        "filename": "libc/include/stdatomic.h",
        "patchSetId": 2
      },
      "lineNbr": 32,
      "author": {
        "id": 1229339
      },
      "writtenOn": "2024-06-17T20:36:20Z",
      "side": 1,
      "message": "Clang did make it possible to use its stdatomic.h in C++ mode (by supporting the `_Atomic` type-qualifier in C++ mode), but that\u0027s mostly only useful if a C++ file doesn\u0027t use the STL.\n\nI\u0027m guessing iOS hasn\u0027t cared about this C/C++ incompatibility (until C++23 fixed it).",
      "parentUuid": "19c1f0bb_563091a1",
      "revId": "128859b2fcc1a4a29c64c3fd604ff39509ba29fc",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}