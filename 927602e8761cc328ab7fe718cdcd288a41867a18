{
  "comments": [
    {
      "key": {
        "uuid": "AAADtn////0\u003d",
        "filename": "libc/bionic/fork.c",
        "patchSetId": 2
      },
      "lineNbr": 61,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2012-03-08T17:27:51Z",
      "side": 1,
      "message": "i\u0027d rather have another function in pthread_internal.h to do this, rather than have fork.c mess with pthread_internal_t directly. actually, isn\u0027t __bionic_atfork_run_child the ideal place for this?",
      "revId": "927602e8761cc328ab7fe718cdcd288a41867a18",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAADxH///+0\u003d",
        "filename": "libc/bionic/fork.c",
        "patchSetId": 2
      },
      "lineNbr": 61,
      "author": {
        "id": 1003360
      },
      "writtenOn": "2012-03-09T19:21:00Z",
      "side": 1,
      "message": "I don\u0027t think that __bionic_atfork_run_child() is a great place for this. That function really is about doing the rundown list.\n\nShould the kernel_id be set before the rundowns?\n\npthread_internal.h (as an inline) seems like a reasonable place. The only other place would be pthread.c... but then there would be overhead for an additional function call.",
      "parentUuid": "AAADtn////0\u003d",
      "revId": "927602e8761cc328ab7fe718cdcd288a41867a18",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAADx3////w\u003d",
        "filename": "libc/bionic/fork.c",
        "patchSetId": 2
      },
      "lineNbr": 61,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2012-03-09T20:08:52Z",
      "side": 1,
      "message": "\u003e That function really is about doing the rundown list.\n\nyes, you\u0027re right. that was a bad idea.\n\n\u003e Should the kernel_id be set before the rundowns?\n\nit feels like it should be to me. otherwise pthread_self will return the wrong result in those functions. POSIX says \"The child fork handler shall be called after fork() processing completes in the child process.\"; to me \"after\" strongly implies that we should do this first.\n\n\u003e overhead for an additional function call\n\none extra function call per fork(2) doesn\u0027t worry me.",
      "parentUuid": "AAADxH///+0\u003d",
      "revId": "927602e8761cc328ab7fe718cdcd288a41867a18",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}