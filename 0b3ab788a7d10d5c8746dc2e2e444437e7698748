{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "9fc575c3_9d42ea92",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1890456
      },
      "writtenOn": "2023-03-01T00:10:01Z",
      "side": 1,
      "message": "Apologize for making a big CL. A bit hard to split into several parts ðŸ˜ž. Hope it is better than unistd module and not a nightmare.",
      "revId": "0b3ab788a7d10d5c8746dc2e2e444437e7698748",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d81e328f_8e23287f",
        "filename": "libc/include/stdio.h",
        "patchSetId": 1
      },
      "lineNbr": 144,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2023-03-01T02:07:00Z",
      "side": 1,
      "message": "_Nonnull, no?",
      "range": {
        "startLine": 144,
        "startChar": 27,
        "endLine": 144,
        "endChar": 36
      },
      "revId": "0b3ab788a7d10d5c8746dc2e2e444437e7698748",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d3b36c62_6c8e7ac0",
        "filename": "libc/include/stdio.h",
        "patchSetId": 1
      },
      "lineNbr": 144,
      "author": {
        "id": 1890456
      },
      "writtenOn": "2023-03-01T21:53:04Z",
      "side": 1,
      "message": "Oh true, my bad.",
      "parentUuid": "d81e328f_8e23287f",
      "range": {
        "startLine": 144,
        "startChar": 27,
        "endLine": 144,
        "endChar": 36
      },
      "revId": "0b3ab788a7d10d5c8746dc2e2e444437e7698748",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "edbbb04f_9818e1b9",
        "filename": "libc/include/stdio.h",
        "patchSetId": 1
      },
      "lineNbr": 214,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2023-03-01T02:07:00Z",
      "side": 1,
      "message": "isn\u0027t this just _Nullable?",
      "range": {
        "startLine": 214,
        "startChar": 21,
        "endLine": 214,
        "endChar": 50
      },
      "revId": "0b3ab788a7d10d5c8746dc2e2e444437e7698748",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f178d6e8_17070ad3",
        "filename": "libc/include/stdio.h",
        "patchSetId": 1
      },
      "lineNbr": 214,
      "author": {
        "id": 1890456
      },
      "writtenOn": "2023-03-01T21:53:04Z",
      "side": 1,
      "message": "Nope. If `read_fn` and `write_fn` are both nullptr, it will cause `EINVAL` http://cs/android/bionic/libc/stdio/stdio.cpp;l\u003d687-688;rcl\u003d51ec33dd01705ee6503af64c1e6ce2bdb230a946",
      "parentUuid": "edbbb04f_9818e1b9",
      "range": {
        "startLine": 214,
        "startChar": 21,
        "endLine": 214,
        "endChar": 50
      },
      "revId": "0b3ab788a7d10d5c8746dc2e2e444437e7698748",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "661801f8_7ae7fd55",
        "filename": "libc/include/stdio.h",
        "patchSetId": 1
      },
      "lineNbr": 226,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2023-03-01T02:07:00Z",
      "side": 1,
      "message": "(same)",
      "range": {
        "startLine": 226,
        "startChar": 21,
        "endLine": 226,
        "endChar": 50
      },
      "revId": "0b3ab788a7d10d5c8746dc2e2e444437e7698748",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "32abada3_3150dc30",
        "filename": "libc/include/stdio.h",
        "patchSetId": 1
      },
      "lineNbr": 238,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2023-03-01T02:07:00Z",
      "side": 1,
      "message": "(i really hate this header :-) )",
      "range": {
        "startLine": 238,
        "startChar": 23,
        "endLine": 238,
        "endChar": 52
      },
      "revId": "0b3ab788a7d10d5c8746dc2e2e444437e7698748",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f382b03d_40cd29b4",
        "filename": "libc/include/stdio.h",
        "patchSetId": 1
      },
      "lineNbr": 251,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2023-03-01T02:07:00Z",
      "side": 1,
      "message": "sadly not:\n```\n       Concerning the return value of snprintf(), SUSv2 and C99\n       contradict each other: when snprintf() is called with size\u003d0 then\n       SUSv2 stipulates an unspecified return value less than 1, while\n       C99 allows str to be NULL in this case, and gives the return\n       value (as always) as the number of characters that would have\n       been written in case the output string has been large enough.\n       POSIX.1-2001 and later align their specification of snprintf()\n       with C99.\n```\n(so that you can say \"please tell me how big a buffer i\u0027ll need for this string\". which isn\u0027t the _best_ idea... you probably want a \"reasonable\" buffer to start with, and fall back to a bigger one, so most of the time you\u0027ll only have to call snprintf() once. see https://source.corp.google.com/android/system/libbase/stringprintf.cpp;l\u003d26?q\u003dfile:libbase%20file:stringprintf\u0026sq\u003dpackage:%5Eandroid$%20-file:prebuilts%2Fvndk%2F%20-file:prebuilts%2Fruntime%2F for that trick in libbase.)",
      "revId": "0b3ab788a7d10d5c8746dc2e2e444437e7698748",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0128132c_602f336a",
        "filename": "libc/include/stdio.h",
        "patchSetId": 1
      },
      "lineNbr": 266,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2023-03-01T02:07:00Z",
      "side": 1,
      "message": "weird... is that a bionic bug? i can\u0027t see anything in the spec that says a null pointer is valid here, and it\u0027s not obvious why you\u0027d allow it...",
      "range": {
        "startLine": 266,
        "startChar": 23,
        "endLine": 266,
        "endChar": 32
      },
      "revId": "0b3ab788a7d10d5c8746dc2e2e444437e7698748",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e9315191_40fa45a3",
        "filename": "libc/include/stdio.h",
        "patchSetId": 1
      },
      "lineNbr": 266,
      "author": {
        "id": 1890456
      },
      "writtenOn": "2023-03-01T21:53:04Z",
      "side": 1,
      "message": "According to http://cs/android/bionic/libc/bionic/flockfile.cpp;l\u003d54;rcl\u003d51ec33dd01705ee6503af64c1e6ce2bdb230a946, it is fine if `fp` is a `nullptr`. But I admit it shouldn\u0027t be null. Otherwise it is pointless.",
      "parentUuid": "0128132c_602f336a",
      "range": {
        "startLine": 266,
        "startChar": 23,
        "endLine": 266,
        "endChar": 32
      },
      "revId": "0b3ab788a7d10d5c8746dc2e2e444437e7698748",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "105aacea_cb5dce29",
        "filename": "libc/include/stdio.h",
        "patchSetId": 1
      },
      "lineNbr": 276,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2023-03-01T02:07:00Z",
      "side": 1,
      "message": "hmm, if this didn\u0027t cause build breakages, that suggests clang\u0027s analysis isn\u0027t currently very deep... the expected use case for asprintf is that you start with a pointer to a null pointer.",
      "range": {
        "startLine": 276,
        "startChar": 14,
        "endLine": 276,
        "endChar": 47
      },
      "revId": "0b3ab788a7d10d5c8746dc2e2e444437e7698748",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e785d776_bfb54317",
        "filename": "libc/include/stdio.h",
        "patchSetId": 1
      },
      "lineNbr": 281,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2023-03-01T02:07:00Z",
      "side": 1,
      "message": "(same)",
      "revId": "0b3ab788a7d10d5c8746dc2e2e444437e7698748",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a7d48fc3_168a9d37",
        "filename": "libc/include/stdio.h",
        "patchSetId": 1
      },
      "lineNbr": 291,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2023-03-01T02:07:00Z",
      "side": 1,
      "message": "(that _this_ FILE* is nullable, on the other hand, _is_ a weird special case in the spec.)",
      "revId": "0b3ab788a7d10d5c8746dc2e2e444437e7698748",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}