{
  "comments": [
    {
      "key": {
        "uuid": "8853a454_cd3b2979",
        "filename": "libc/dns/include/resolv_params.h",
        "patchSetId": 1
      },
      "lineNbr": 25,
      "author": {
        "id": 1000835
      },
      "writtenOn": "2016-04-19T16:03:35Z",
      "side": 1,
      "message": "Out of curiosity - what\u0027s the reason to move these around?",
      "range": {
        "startLine": 25,
        "startChar": 8,
        "endLine": 25,
        "endChar": 21
      },
      "revId": "678192c589c25aa2af41068388f71c2a62beb0c9",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "08fc147c_c2112b77",
        "filename": "libc/dns/include/resolv_stats.h",
        "patchSetId": 1
      },
      "lineNbr": 77,
      "author": {
        "id": 1000835
      },
      "writtenOn": "2016-04-19T16:03:35Z",
      "side": 1,
      "message": "Is it possible to add a:\n\n    bool valid_servers[MAXNS]\n\nparameter so this call can also atomically tell netd which DNS servers are valid according to the currently-set parameters? That seems useful, and better than netd having to calculate this information by itself (which might be racy as well).\n\nBut perhaps not for this CL.",
      "range": {
        "startLine": 77,
        "startChar": 68,
        "endLine": 77,
        "endChar": 69
      },
      "revId": "678192c589c25aa2af41068388f71c2a62beb0c9",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8853a454_4d51d9b1",
        "filename": "libc/dns/include/resolv_stats.h",
        "patchSetId": 1
      },
      "lineNbr": 77,
      "author": {
        "id": 1000835
      },
      "writtenOn": "2016-04-19T16:03:35Z",
      "side": 1,
      "message": "Lose this space?",
      "range": {
        "startLine": 77,
        "startChar": 39,
        "endLine": 77,
        "endChar": 40
      },
      "revId": "678192c589c25aa2af41068388f71c2a62beb0c9",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2872b820_68b91ba2",
        "filename": "libc/dns/resolv/res_cache.c",
        "patchSetId": 1
      },
      "lineNbr": 2205,
      "author": {
        "id": 1000835
      },
      "writtenOn": "2016-04-19T16:03:35Z",
      "side": 1,
      "message": "Maybe use \"*servers\" instead?",
      "range": {
        "startLine": 2205,
        "startChar": 43,
        "endLine": 2205,
        "endChar": 66
      },
      "revId": "678192c589c25aa2af41068388f71c2a62beb0c9",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "48f28ca8_a2a066b8",
        "filename": "libc/dns/resolv/res_cache.c",
        "patchSetId": 1
      },
      "lineNbr": 2208,
      "author": {
        "id": 1000835
      },
      "writtenOn": "2016-04-19T16:03:35Z",
      "side": 1,
      "message": "Nit: it might be useful to pass this error to the caller by setting errno.\n\nIt\u0027s true that this sort of thing should never happen unless there is a bug in getaddrinfo or memory corruption. But setting errno is easy, and if it turns out something like that actually does happen, it\u0027s probably easier for the caller to log this sort of thing than bionic itself.\n\nIn these cases you might set errno to ENOBUFS or EMSGSIZE, ENOENT, ENOTUNIQ respectively.",
      "range": {
        "startLine": 2208,
        "startChar": 23,
        "endLine": 2208,
        "endChar": 25
      },
      "revId": "678192c589c25aa2af41068388f71c2a62beb0c9",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}