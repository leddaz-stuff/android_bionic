{
  "comments": [
    {
      "key": {
        "uuid": "eac4d062_8ffbc998",
        "filename": "tests/stdio_test.cpp",
        "patchSetId": 4
      },
      "lineNbr": 491,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2014-05-09T16:36:06Z",
      "side": 1,
      "message": "i meant that \"random\" bothers me (especially since this isn\u0027t random). would this be any worse a test if you go pos5, pos4, pos3, pos2, pos1? the reader doesn\u0027t have to wonder where that order came from or if there\u0027s anything subtle about it.",
      "revId": "34ca61894e99fbeaa5a0559493e5a277f8fef446",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "aa93b868_0b417d6e",
        "filename": "tests/stdio_test.cpp",
        "patchSetId": 4
      },
      "lineNbr": 491,
      "author": {
        "id": 1022077
      },
      "writtenOn": "2014-05-09T16:40:37Z",
      "side": 1,
      "message": "Ah, right. The intention was to exercise both back and forth movements. I\u0027ll rephrase.",
      "parentUuid": "eac4d062_8ffbc998",
      "revId": "34ca61894e99fbeaa5a0559493e5a277f8fef446",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8a999485_ecd7e7f5",
        "filename": "tests/stdio_test.cpp",
        "patchSetId": 4
      },
      "lineNbr": 532,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2014-05-09T16:36:06Z",
      "side": 1,
      "message": "have you had chance to dig deeper with what glibc\u0027s up to here?",
      "revId": "34ca61894e99fbeaa5a0559493e5a277f8fef446",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "aa93b868_2b463987",
        "filename": "tests/stdio_test.cpp",
        "patchSetId": 4
      },
      "lineNbr": 532,
      "author": {
        "id": 1022077
      },
      "writtenOn": "2014-05-09T16:40:37Z",
      "side": 1,
      "message": "In progress :). I\u0027ll update with comments after I finish.",
      "parentUuid": "8a999485_ecd7e7f5",
      "revId": "34ca61894e99fbeaa5a0559493e5a277f8fef446",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8a827417_ed09a147",
        "filename": "tests/stdio_test.cpp",
        "patchSetId": 4
      },
      "lineNbr": 532,
      "author": {
        "id": 1022077
      },
      "writtenOn": "2014-05-09T17:06:53Z",
      "side": 1,
      "message": "I didn\u0027t finish looking into this but maybe it worth mentioning that the current feeling is that glibc doesn\u0027t support fseek when wchar comes into play.\n\nIf only \"normal\" char functions are used (e.g fputc) then fseek/ftell/fgetpos etc... works as expected. As soon as I switch to wide char variants (fputwc), fgetpos/ftell will only advance after fgetwc(). The odd behavior is that using fseek with fputwc will reset the position to 0...\n\nIt\u0027s like telling that \"if you want to use wide chars then seeking won\u0027t work\". Which is not unreasonable IMO.\n\nI\u0027ll keep looking to see if I find any proper docs on this and if not I\u0027ll look into the source code.",
      "parentUuid": "aa93b868_2b463987",
      "revId": "34ca61894e99fbeaa5a0559493e5a277f8fef446",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}