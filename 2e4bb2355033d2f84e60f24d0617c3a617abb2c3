{
  "comments": [
    {
      "key": {
        "uuid": "f95bf03c_c740de06",
        "filename": "libc/bionic/fgetxattr.cpp",
        "patchSetId": 3
      },
      "lineNbr": 42,
      "author": {
        "id": 1019050
      },
      "writtenOn": "2015-06-01T21:41:25Z",
      "side": 1,
      "message": "Usually, we directly compare against -1 in bionic.\n\nSo: result !\u003d -1.",
      "range": {
        "startLine": 42,
        "startChar": 7,
        "endLine": 42,
        "endChar": 19
      },
      "revId": "2e4bb2355033d2f84e60f24d0617c3a617abb2c3",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f942104b_be29653e",
        "filename": "libc/bionic/fgetxattr.cpp",
        "patchSetId": 3
      },
      "lineNbr": 42,
      "author": {
        "id": 1019050
      },
      "writtenOn": "2015-06-01T21:41:25Z",
      "side": 1,
      "message": "It seems there are two errno values for which you want to just return (EBADF, ERANGE).",
      "range": {
        "startLine": 42,
        "startChar": 33,
        "endLine": 42,
        "endChar": 38
      },
      "revId": "2e4bb2355033d2f84e60f24d0617c3a617abb2c3",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f942104b_a93011f1",
        "filename": "libc/bionic/fgetxattr.cpp",
        "patchSetId": 3
      },
      "lineNbr": 42,
      "author": {
        "id": 1003966
      },
      "writtenOn": "2015-06-01T21:53:33Z",
      "side": 1,
      "message": "will do.",
      "parentUuid": "f95bf03c_c740de06",
      "range": {
        "startLine": 42,
        "startChar": 7,
        "endLine": 42,
        "endChar": 19
      },
      "revId": "2e4bb2355033d2f84e60f24d0617c3a617abb2c3",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f942104b_693fc9e9",
        "filename": "libc/bionic/fgetxattr.cpp",
        "patchSetId": 3
      },
      "lineNbr": 42,
      "author": {
        "id": 1003966
      },
      "writtenOn": "2015-06-01T21:53:33Z",
      "side": 1,
      "message": "If we get an error which is anything other than EBADF, then we want to return immediately. We only want to fallback to the code below if ((result \u003d\u003d -1) AND (errno \u003d\u003d EBADF)).\n\nContinuing on to the code below if ((result \u003d\u003d -1) AND (errno \u003d\u003d ERANGE)) wouldn\u0027t accomplish anything, since the code on line 58 would just end up returning the exact same error / errno.",
      "parentUuid": "f942104b_be29653e",
      "range": {
        "startLine": 42,
        "startChar": 33,
        "endLine": 42,
        "endChar": 38
      },
      "revId": "2e4bb2355033d2f84e60f24d0617c3a617abb2c3",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f942104b_4973e592",
        "filename": "libc/bionic/fgetxattr.cpp",
        "patchSetId": 3
      },
      "lineNbr": 42,
      "author": {
        "id": 1019050
      },
      "writtenOn": "2015-06-01T21:58:33Z",
      "side": 1,
      "message": "Oops, sorry I read this incorrectly.\n\nIs there any possibility that you might get ENOTSUP instead of EBADF on some kernels?",
      "parentUuid": "f942104b_693fc9e9",
      "range": {
        "startLine": 42,
        "startChar": 33,
        "endLine": 42,
        "endChar": 38
      },
      "revId": "2e4bb2355033d2f84e60f24d0617c3a617abb2c3",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f990500b_7fe3cf19",
        "filename": "libc/bionic/fgetxattr.cpp",
        "patchSetId": 3
      },
      "lineNbr": 42,
      "author": {
        "id": 1003966
      },
      "writtenOn": "2015-06-01T22:15:08Z",
      "side": 1,
      "message": "EBADF is the documented return value of fgetxattr() on O_PATH file descriptors. Please see \"man 2 open\" or look at the O_PATH section of http://man7.org/linux/man-pages/man2/open.2.html . This has been true since Linux 2.6.39. Even though it\u0027s not documented, it\u0027s also true for fsetxattr().\n\nENOTSUP would imply that the call succeeded, but the underlying filesystem didn\u0027t support extended attributes. I can\u0027t imagine the call failing for this, but then somehow succeeding for the /proc/PID/fd/FD case below.",
      "parentUuid": "f942104b_4973e592",
      "range": {
        "startLine": 42,
        "startChar": 33,
        "endLine": 42,
        "endChar": 38
      },
      "revId": "2e4bb2355033d2f84e60f24d0617c3a617abb2c3",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "198e04f0_c3dec8fa",
        "filename": "libc/bionic/fgetxattr.cpp",
        "patchSetId": 3
      },
      "lineNbr": 42,
      "author": {
        "id": 1003966
      },
      "writtenOn": "2015-06-01T22:53:02Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "f942104b_a93011f1",
      "range": {
        "startLine": 42,
        "startChar": 7,
        "endLine": 42,
        "endChar": 19
      },
      "revId": "2e4bb2355033d2f84e60f24d0617c3a617abb2c3",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f942104b_9e54619a",
        "filename": "libc/bionic/fsetxattr.cpp",
        "patchSetId": 3
      },
      "lineNbr": 42,
      "author": {
        "id": 1019050
      },
      "writtenOn": "2015-06-01T21:41:25Z",
      "side": 1,
      "message": "Same as the other, should you skip if this is ENOSPC?",
      "range": {
        "startLine": 42,
        "startChar": 33,
        "endLine": 42,
        "endChar": 38
      },
      "revId": "2e4bb2355033d2f84e60f24d0617c3a617abb2c3",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f95bf03c_87c5469d",
        "filename": "libc/bionic/fsetxattr.cpp",
        "patchSetId": 3
      },
      "lineNbr": 42,
      "author": {
        "id": 1003966
      },
      "writtenOn": "2015-06-01T21:53:33Z",
      "side": 1,
      "message": "This is !\u003d, not \u003d\u003d. The code below is only intended to be executed if errno \u003d\u003d EBADF. Otherwise we\u0027d just be doing redundant work.",
      "parentUuid": "f942104b_9e54619a",
      "range": {
        "startLine": 42,
        "startChar": 33,
        "endLine": 42,
        "endChar": 38
      },
      "revId": "2e4bb2355033d2f84e60f24d0617c3a617abb2c3",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f95bf03c_a7572a9e",
        "filename": "tests/sys_xattr_test.cpp",
        "patchSetId": 3
      },
      "lineNbr": 23,
      "author": {
        "id": 1019050
      },
      "writtenOn": "2015-06-01T21:41:25Z",
      "side": 1,
      "message": "I think you could use a few negative tests:\n\nTry with a bad file descriptor for fsetxattr/fgetxattr.\n\nAlso, try a few where the buffer passed in is too small for all derivatives.",
      "revId": "2e4bb2355033d2f84e60f24d0617c3a617abb2c3",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d929cc86_7dde6353",
        "filename": "tests/sys_xattr_test.cpp",
        "patchSetId": 3
      },
      "lineNbr": 23,
      "author": {
        "id": 1003966
      },
      "writtenOn": "2015-06-01T21:53:33Z",
      "side": 1,
      "message": "will do.",
      "parentUuid": "f95bf03c_a7572a9e",
      "revId": "2e4bb2355033d2f84e60f24d0617c3a617abb2c3",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f990500b_822bdc89",
        "filename": "tests/sys_xattr_test.cpp",
        "patchSetId": 3
      },
      "lineNbr": 23,
      "author": {
        "id": 1003966
      },
      "writtenOn": "2015-06-01T22:53:02Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "d929cc86_7dde6353",
      "revId": "2e4bb2355033d2f84e60f24d0617c3a617abb2c3",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}