{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "5b909017_86395ef8",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1430422
      },
      "writtenOn": "2024-04-01T21:01:45Z",
      "side": 1,
      "message": "For other libc implementations, I believe we would call invalid PT_NOTE user problem and might not consider supporting them even if older versions did not report an error. Perhaps Android bionic has a larger tolerance of such user problems. If that\u0027s the case, this looks fine with me.",
      "revId": "54c40638ff87bcde59352ed49becedf8ae520592",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d77ef4ff_c2357f87",
        "filename": "linker/linker_phdr.cpp",
        "patchSetId": 1
      },
      "lineNbr": 733,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2024-04-01T20:22:24Z",
      "side": 1,
      "message": "rprichard: i thought we had more general rejection of bad headers already? is that only for _program_ headers?\n\n(separately to this, i don\u0027t think it would be unreasonable for us to change this `continue` to a target api level check, and actually reject dodgy ELF files from an app that\u0027s _targeting_ V...)",
      "revId": "54c40638ff87bcde59352ed49becedf8ae520592",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3221ed11_b97661a7",
        "filename": "linker/linker_phdr.cpp",
        "patchSetId": 1
      },
      "lineNbr": 733,
      "author": {
        "id": 1229339
      },
      "writtenOn": "2024-04-01T20:38:49Z",
      "side": 1,
      "message": "It looks like we check that a PT_LOAD segment doesn\u0027t extend past the end of its file, later on, in ElfReader::LoadSegments. This code runs earlier and checks a PT_NOTE instead.\n\nI\u0027m guessing we aren\u0027t generally checking whether program headers extend past the end of the file.\n\nThe new error check seems fine to me. I suspect the value could overflow but I don\u0027t think the loader generally guards against that.",
      "parentUuid": "d77ef4ff_c2357f87",
      "revId": "54c40638ff87bcde59352ed49becedf8ae520592",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "14c6c9cd_143ea9e5",
        "filename": "linker/linker_phdr.cpp",
        "patchSetId": 1
      },
      "lineNbr": 733,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2024-04-01T21:16:29Z",
      "side": 1,
      "message": "you have to have a strong reason to break apps users might have paid for, and that might not be being updated. (that\u0027s why i talked about _targeting_ V --- that proves the app has been updated, in which case they can stop doing naughty things. meanwhile non-updated apps would keep working.)",
      "parentUuid": "3221ed11_b97661a7",
      "revId": "54c40638ff87bcde59352ed49becedf8ae520592",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0825cd47_bffdc7ba",
        "filename": "linker/linker_phdr.cpp",
        "patchSetId": 1
      },
      "lineNbr": 733,
      "author": {
        "id": 1499410
      },
      "writtenOn": "2024-04-02T00:54:28Z",
      "side": 1,
      "message": "Thanks for the discussion. I will send a follow up for the this check.",
      "parentUuid": "14c6c9cd_143ea9e5",
      "revId": "54c40638ff87bcde59352ed49becedf8ae520592",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e8ab8afe_14b4b109",
        "filename": "linker/linker_phdr.cpp",
        "patchSetId": 1
      },
      "lineNbr": 733,
      "author": {
        "id": 1499410
      },
      "writtenOn": "2024-04-02T06:18:22Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "0825cd47_bffdc7ba",
      "revId": "54c40638ff87bcde59352ed49becedf8ae520592",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}