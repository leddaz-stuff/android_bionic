{
  "comments": [
    {
      "key": {
        "uuid": "8a0b8f60_8499f4f4",
        "filename": "libc/bionic/ifaddrs.cpp",
        "patchSetId": 2
      },
      "lineNbr": 115,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2016-01-04T21:03:12Z",
      "side": 1,
      "message": "this is the new bit.",
      "range": {
        "startLine": 111,
        "startChar": 0,
        "endLine": 115,
        "endChar": 6
      },
      "revId": "9cddb482b498abd134f7ccfc9933747e8bcb9cc7",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2a154384_0aeebfde",
        "filename": "libc/bionic/ifaddrs.cpp",
        "patchSetId": 2
      },
      "lineNbr": 162,
      "author": {
        "id": 1000835
      },
      "writtenOn": "2016-01-05T05:06:59Z",
      "side": 1,
      "message": "I think you need to check for IFA_LOCAL here:\n\nhttps://android.googlesource.com/platform/libcore/+/3a9a00ad1f166a8e5ea810099b057522f9aecb48",
      "range": {
        "startLine": 162,
        "startChar": 27,
        "endLine": 162,
        "endChar": 38
      },
      "revId": "9cddb482b498abd134f7ccfc9933747e8bcb9cc7",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4a74377b_fec6351e",
        "filename": "libc/bionic/ifaddrs.cpp",
        "patchSetId": 2
      },
      "lineNbr": 162,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2016-01-09T01:23:48Z",
      "side": 1,
      "message": "do we have a current device with a similar setup? we pass the unit test that motivated that change (because the new implementation only looks at IFA_ADDRESS; the original problem was an implementation taht only looked at IFA_LOCAL). i don\u0027t think the other implementation that treated IFA_LOCAL and IFA_ADDRESS as interchangeable is correct.",
      "parentUuid": "2a154384_0aeebfde",
      "range": {
        "startLine": 162,
        "startChar": 27,
        "endLine": 162,
        "endChar": 38
      },
      "revId": "9cddb482b498abd134f7ccfc9933747e8bcb9cc7",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "aa869394_80cdd689",
        "filename": "libc/bionic/ifaddrs.cpp",
        "patchSetId": 2
      },
      "lineNbr": 162,
      "author": {
        "id": 1000835
      },
      "writtenOn": "2016-01-09T05:06:26Z",
      "side": 1,
      "message": "Hmm. I thought that for IPv4 IFA_LOCAL was always correct. That\u0027s what SIOCGIFADDR returns: http://lxr.free-electrons.com/source/net/ipv4/devinet.c?v\u003d3.18#L992\n\nSIOCSIFADDR sets ifa_local and ifa_address to the same value. However, SIOCSIFDSTADDR can be used to set ifa_address. http://lxr.free-electrons.com/source/net/ipv4/devinet.c?v\u003d3.18#L1021\n\nThat makes me think that the local address is always in IFA_LOCAL and that\u0027s what we should use. Where is the unit test you\u0027re referring to?\n\n\nThe situation is different for IPv6, where the local address is always in IFA_ADDRESS except if there\u0027s a peer address, in which case the local address is in IFA_LOCAL and the peer address is in IFA_ADDRESS:\n\nhttp://lxr.free-electrons.com/source/net/ipv6/addrconf.c?v\u003d3.18#L4001\n\n\nSo I think what this code should do is: if IFA_LOCAL is present, use that. Otherwise, use IFA_ADDRESS.",
      "parentUuid": "4a74377b_fec6351e",
      "range": {
        "startLine": 162,
        "startChar": 27,
        "endLine": 162,
        "endChar": 38
      },
      "revId": "9cddb482b498abd134f7ccfc9933747e8bcb9cc7",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4a8b57a3_91e44cf8",
        "filename": "libc/bionic/ifaddrs.cpp",
        "patchSetId": 2
      },
      "lineNbr": 162,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2016-01-09T07:22:59Z",
      "side": 1,
      "message": "the unit test in the patch you linked to :-)\n\nthe kernel header file is pretty clear about what we should do (and it\u0027s not _quite_ what you suggest). my real concern is that i don\u0027t have an actual example to test with. (and that\u0027s how i\u0027ve found all the bugs i\u0027ve found so far --- dumping the result of getifaddrs(3) on various devices/hosts. i should probably check that code in somewhere.)",
      "parentUuid": "aa869394_80cdd689",
      "range": {
        "startLine": 162,
        "startChar": 27,
        "endLine": 162,
        "endChar": 38
      },
      "revId": "9cddb482b498abd134f7ccfc9933747e8bcb9cc7",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ca7f474b_61e7f6fc",
        "filename": "libc/bionic/ifaddrs.cpp",
        "patchSetId": 2
      },
      "lineNbr": 162,
      "author": {
        "id": 1000835
      },
      "writtenOn": "2016-01-09T07:31:23Z",
      "side": 1,
      "message": "As for a way to test this - create a point-to-point tun interface, call SIOCSIFDSTADDR on it, and verify that the address reported by getifaddrs is the same as the one reported by SIOCGIFADDR and/or \"ip addr show\"?\n\nAs for what the kernel header says we\u0027re supposed to do - can we document that here? We need to ensure that that advice also works for IPv6, which only ever uses IFA_ADDRESS unless the peer address is set.",
      "parentUuid": "4a8b57a3_91e44cf8",
      "range": {
        "startLine": 162,
        "startChar": 27,
        "endLine": 162,
        "endChar": 38
      },
      "revId": "9cddb482b498abd134f7ccfc9933747e8bcb9cc7",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4a899739_ed3365c7",
        "filename": "libc/bionic/ifaddrs.cpp",
        "patchSetId": 2
      },
      "lineNbr": 167,
      "author": {
        "id": 1000835
      },
      "writtenOn": "2016-01-09T05:06:26Z",
      "side": 1,
      "message": "For a point-to-point interface, the code should set ifa_dstaddr instead. See the glibc man page.",
      "range": {
        "startLine": 167,
        "startChar": 34,
        "endLine": 167,
        "endChar": 47
      },
      "revId": "9cddb482b498abd134f7ccfc9933747e8bcb9cc7",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "47f7d247_bdb73ff7",
        "filename": "libc/bionic/ifaddrs.cpp",
        "patchSetId": 2
      },
      "lineNbr": 167,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2016-01-09T07:22:59Z",
      "side": 1,
      "message": "they\u0027re just two names for the same storage.",
      "parentUuid": "4a899739_ed3365c7",
      "range": {
        "startLine": 167,
        "startChar": 34,
        "endLine": 167,
        "endChar": 47
      },
      "revId": "9cddb482b498abd134f7ccfc9933747e8bcb9cc7",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ea988b91_e87a2754",
        "filename": "libc/bionic/ifaddrs.cpp",
        "patchSetId": 2
      },
      "lineNbr": 168,
      "author": {
        "id": 1000835
      },
      "writtenOn": "2016-01-09T05:06:26Z",
      "side": 1,
      "message": "There is no broadcast in IPv6.",
      "range": {
        "startLine": 168,
        "startChar": 61,
        "endLine": 168,
        "endChar": 69
      },
      "revId": "9cddb482b498abd134f7ccfc9933747e8bcb9cc7",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}