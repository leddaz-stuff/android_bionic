{
  "comments": [
    {
      "key": {
        "uuid": "21e9bccf_bc08c149",
        "filename": "libc/dns/gethnamaddr.c",
        "patchSetId": 8
      },
      "lineNbr": 949,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2014-12-17T22:15:59Z",
      "side": 1,
      "message": "you didn\u0027t want to rename gethostbyname_r in the same way, even though the problem there (different signature between BSD and glibc) is the same?",
      "revId": "b69a0839db29421a92fcc8f5cf6e8ae8ce1be998",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "21e9bccf_fc7fa9fb",
        "filename": "libc/dns/gethnamaddr.c",
        "patchSetId": 8
      },
      "lineNbr": 949,
      "author": {
        "id": 1056364
      },
      "writtenOn": "2014-12-17T22:53:03Z",
      "side": 1,
      "message": "Yes, geethostbyname_r is the interface we support before, but gethostent_r is not. netbsd_gethostent_r is only used internally.",
      "parentUuid": "21e9bccf_bc08c149",
      "revId": "b69a0839db29421a92fcc8f5cf6e8ae8ce1be998",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "812508f1_dbbab33c",
        "filename": "libc/dns/gethnamaddr.c",
        "patchSetId": 8
      },
      "lineNbr": 949,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2014-12-17T22:59:30Z",
      "side": 1,
      "message": "gethostbyname_r is different too, in the same way --- ours (and glibc\u0027s) returns int, not struct hostent* like upstream:\n\n  struct hostent *\n  gethostbyname_r(const char *name, struct hostent *hp, char *buf, size_t buflen,\n      int *he)\n  {",
      "parentUuid": "21e9bccf_fc7fa9fb",
      "revId": "b69a0839db29421a92fcc8f5cf6e8ae8ce1be998",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a1d5ac01_750c8a30",
        "filename": "libc/dns/gethnamaddr.c",
        "patchSetId": 8
      },
      "lineNbr": 949,
      "author": {
        "id": 1056364
      },
      "writtenOn": "2014-12-17T23:18:03Z",
      "side": 1,
      "message": "Yes. As we use the interface of glibc for gethostbyname_r, I only take the implementation of gethostbyname_r from netbsd, and don\u0027t have an interface like netbsd_gethostbyname_r. The content in gethostbyname_r is so simple that I think it is fine not to introduce a middle layer. I add a comment for that.",
      "parentUuid": "812508f1_dbbab33c",
      "revId": "b69a0839db29421a92fcc8f5cf6e8ae8ce1be998",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a1d5ac01_4f529961",
        "filename": "libc/dns/gethnamaddr.c",
        "patchSetId": 8
      },
      "lineNbr": 980,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2014-12-17T22:15:59Z",
      "side": 1,
      "message": "this isn\u0027t in upstream. do we need it? what\u0027s it even saying? \"if there\u0027s neither a # nor a \\n, skip this line\"?",
      "revId": "b69a0839db29421a92fcc8f5cf6e8ae8ce1be998",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "21e9bccf_3c9bd1dc",
        "filename": "libc/dns/gethnamaddr.c",
        "patchSetId": 8
      },
      "lineNbr": 980,
      "author": {
        "id": 1056364
      },
      "writtenOn": "2014-12-17T22:53:03Z",
      "side": 1,
      "message": "Because netbsd uses fparseln() which we don\u0027t have, we use fgets() instead. So I think I should keep the previous parse code.",
      "parentUuid": "a1d5ac01_4f529961",
      "revId": "b69a0839db29421a92fcc8f5cf6e8ae8ce1be998",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a1d5ac01_d508f64a",
        "filename": "libc/dns/gethnamaddr.c",
        "patchSetId": 8
      },
      "lineNbr": 980,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2014-12-17T22:59:30Z",
      "side": 1,
      "message": "ah, i didn\u0027t notice that.",
      "parentUuid": "21e9bccf_3c9bd1dc",
      "revId": "b69a0839db29421a92fcc8f5cf6e8ae8ce1be998",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a1d5ac01_5acfb5bd",
        "filename": "libc/dns/gethnamaddr.c",
        "patchSetId": 8
      },
      "lineNbr": 983,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2014-12-17T22:15:59Z",
      "side": 1,
      "message": "oh, it\u0027s so we can strip comments from the ends of lines? weird that that isn\u0027t upstream.",
      "revId": "b69a0839db29421a92fcc8f5cf6e8ae8ce1be998",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "812508f1_7b258798",
        "filename": "libc/dns/gethnamaddr.c",
        "patchSetId": 8
      },
      "lineNbr": 989,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2014-12-17T22:15:59Z",
      "side": 1,
      "message": "given that we clearly have NS_IN6ADDRSZ defined, do you want to undo all the local hacks where we use INADDRSZ instead? or are they actually different values?",
      "revId": "b69a0839db29421a92fcc8f5cf6e8ae8ce1be998",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "21e9bccf_dfe73f3c",
        "filename": "libc/dns/gethnamaddr.c",
        "patchSetId": 8
      },
      "lineNbr": 989,
      "author": {
        "id": 1056364
      },
      "writtenOn": "2014-12-17T22:53:03Z",
      "side": 1,
      "message": "They are the same. Done.",
      "parentUuid": "812508f1_7b258798",
      "revId": "b69a0839db29421a92fcc8f5cf6e8ae8ce1be998",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "21e9bccf_dc92ed62",
        "filename": "libc/dns/gethnamaddr.c",
        "patchSetId": 8
      },
      "lineNbr": 1063,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2014-12-17T22:15:59Z",
      "side": 1,
      "message": "go back to _DIAGASSERT like upstream?",
      "revId": "b69a0839db29421a92fcc8f5cf6e8ae8ce1be998",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c12b80c1_2f02adff",
        "filename": "libc/dns/gethnamaddr.c",
        "patchSetId": 8
      },
      "lineNbr": 1063,
      "author": {
        "id": 1056364
      },
      "writtenOn": "2014-12-17T22:53:03Z",
      "side": 1,
      "message": "Done.",
      "parentUuid": "21e9bccf_dc92ed62",
      "revId": "b69a0839db29421a92fcc8f5cf6e8ae8ce1be998",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "812508f1_db3593c7",
        "filename": "libc/dns/gethnamaddr.c",
        "patchSetId": 8
      },
      "lineNbr": 1320,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2014-12-17T22:15:59Z",
      "side": 1,
      "message": "leave the YP code in? YP will never be #defined, so it doesn\u0027t hurt to keep it, and it minimizes our diff against upstream which tends to make future updates easier.",
      "revId": "b69a0839db29421a92fcc8f5cf6e8ae8ce1be998",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e126c4f7_cad3038d",
        "filename": "libc/dns/gethnamaddr.c",
        "patchSetId": 8
      },
      "lineNbr": 1320,
      "author": {
        "id": 1056364
      },
      "writtenOn": "2014-12-17T22:53:03Z",
      "side": 1,
      "message": "Done.",
      "parentUuid": "812508f1_db3593c7",
      "revId": "b69a0839db29421a92fcc8f5cf6e8ae8ce1be998",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}