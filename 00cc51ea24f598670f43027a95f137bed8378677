{
  "comments": [
    {
      "key": {
        "uuid": "c4f6494b_8654302c",
        "filename": "libc/private/libc_logging.h",
        "patchSetId": 1
      },
      "lineNbr": 112,
      "author": {
        "id": 1019050
      },
      "writtenOn": "2015-08-12T18:29:27Z",
      "side": 1,
      "message": "Is there a reason this isn\u0027t hidden?\n\nBy the way, we have a white list of libc symbols, so I don\u0027t believe this is sufficient to make this function exported.",
      "range": {
        "startLine": 112,
        "startChar": 0,
        "endLine": 112,
        "endChar": 10
      },
      "revId": "00cc51ea24f598670f43027a95f137bed8378677",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a41eb557_6830cb21",
        "filename": "libc/private/libc_logging.h",
        "patchSetId": 1
      },
      "lineNbr": 112,
      "author": {
        "id": 1043845
      },
      "writtenOn": "2015-08-12T18:43:04Z",
      "side": 1,
      "message": "Can\u0027t be hidden because it needs to be called from any sanitized binary that uses -fsanitize-undefined-trap-on-error (should probably add a comment saying this is for -ftrap-function).\n\nThat said, this may not be the right place or name for this. It doesn\u0027t need to be in libc, it could just be in it\u0027s own static library that the build system adds to builds that need it.\n\nIt\u0027s possibly not the right name because it\u0027s misleading. -trap-function is not specifically for the sanitizers. Anyone calling __builtin_trap() (or doing something that would invoke it) will end up calling this and seeing the message of a ubsan failure, which may or may not be the case.",
      "parentUuid": "c4f6494b_8654302c",
      "range": {
        "startLine": 112,
        "startChar": 0,
        "endLine": 112,
        "endChar": 10
      },
      "revId": "00cc51ea24f598670f43027a95f137bed8378677",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "64367de0_f8fca933",
        "filename": "libc/private/libc_logging.h",
        "patchSetId": 1
      },
      "lineNbr": 112,
      "author": {
        "id": 1043845
      },
      "writtenOn": "2015-08-12T18:48:09Z",
      "side": 1,
      "message": "The latter part might be worth adding a -fsanitize-failure-function or similar to clang that would instruct codegen to use a specific function instead of __builtin_trap().",
      "parentUuid": "a41eb557_6830cb21",
      "range": {
        "startLine": 112,
        "startChar": 0,
        "endLine": 112,
        "endChar": 10
      },
      "revId": "00cc51ea24f598670f43027a95f137bed8378677",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "046a21d9_dabd41af",
        "filename": "libc/private/libc_logging.h",
        "patchSetId": 1
      },
      "lineNbr": 112,
      "author": {
        "id": 1003966
      },
      "writtenOn": "2015-08-12T19:02:32Z",
      "side": 1,
      "message": "Christopher: I had uploaded the patch before fully testing it, so I missed the change I needed to make to libc.map. Fixed.\n\nDan: I\u0027d prefer to keep this in libc. I expect we\u0027re going to have lots and lots of places all throughout Android which reference this function. I\u0027m not picky on the name though. If you have a better name I\u0027m happy to hear it.\n\nDan: How would -fsanitize-failure-function be any different than -ftrap-function?",
      "parentUuid": "64367de0_f8fca933",
      "range": {
        "startLine": 112,
        "startChar": 0,
        "endLine": 112,
        "endChar": 10
      },
      "revId": "00cc51ea24f598670f43027a95f137bed8378677",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}