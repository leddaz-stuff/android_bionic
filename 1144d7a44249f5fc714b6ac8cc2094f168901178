{
  "comments": [
    {
      "key": {
        "uuid": "e4015b89_669acebe",
        "filename": "linker/arch/x86/begin.c",
        "patchSetId": 3
      },
      "lineNbr": 56,
      "author": {
        "id": 1005205
      },
      "writtenOn": "2013-09-26T22:31:25Z",
      "side": 0,
      "message": "x86-64 should just use begin.S:\n\n_start:\n        /* Pass elfdata to __linker_init. */\n        mov    %rsp, %rdi\n        call   __linker_init\n\n        /* linker init returns (%rax) the _entry address in the main image */\n        jmp    *%rax\n\nIt is very easy to understand.",
      "revId": "1144d7a44249f5fc714b6ac8cc2094f168901178",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e4015b89_e6bc7e01",
        "filename": "linker/arch/x86/begin.c",
        "patchSetId": 3
      },
      "lineNbr": 56,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2013-09-26T22:35:20Z",
      "side": 0,
      "message": "can someone remind me of the motivation for x86 using begin.c instead of begin.S?",
      "parentUuid": "e4015b89_669acebe",
      "revId": "1144d7a44249f5fc714b6ac8cc2094f168901178",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6481eb4b_f23468f1",
        "filename": "linker/arch/x86/begin.c",
        "patchSetId": 3
      },
      "lineNbr": 56,
      "author": {
        "id": 1010578
      },
      "writtenOn": "2013-09-27T08:15:06Z",
      "side": 0,
      "message": "Better maintenance (single version for x86/x32/x86_64) was the original goal. There are other advantages as well like nop padding in thunk for atom if have begin.c recompiled per target. Also it helped to reduce number of text relocations as far as I remember.\nI believe with a few more tricks we can have the same optimal resulting code as HJ suggests.\nIf you think it\u0027s not worth it we can reconsider.",
      "parentUuid": "e4015b89_e6bc7e01",
      "revId": "1144d7a44249f5fc714b6ac8cc2094f168901178",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c471b754_8deb8124",
        "filename": "linker/arch/x86/begin.c",
        "patchSetId": 3
      },
      "lineNbr": 56,
      "author": {
        "id": 1005205
      },
      "writtenOn": "2013-09-27T13:43:10Z",
      "side": 0,
      "message": "I think begin.S is better here.",
      "revId": "1144d7a44249f5fc714b6ac8cc2094f168901178",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "44214730_d90873b0",
        "filename": "linker/arch/x86/begin.c",
        "patchSetId": 3
      },
      "lineNbr": 56,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2013-09-27T16:49:08Z",
      "side": 0,
      "message": "yeah, i\u0027m happy switching to begin.S if that\u0027s easier. especially because ARM and MIPS already have a begin.S rather than a begin.c. i\u0027m just curious to see how big the x86 (that is, \"i386\") begin.S will be.\n\n(as for text relocations, i think x86 is the architecture with the most text relocations at the moment. dalvik is especially bad, iirc.)",
      "parentUuid": "c471b754_8deb8124",
      "revId": "1144d7a44249f5fc714b6ac8cc2094f168901178",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}