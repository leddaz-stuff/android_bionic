{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "09867496_eb91b0fc",
        "filename": "libc/stdio/printf_common.h",
        "patchSetId": 8
      },
      "lineNbr": 842,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2023-05-01T23:13:32Z",
      "side": 1,
      "message": "now you\u0027re paying to check twice (which i didn\u0027t explicitly mention before, but was the other thing i didn\u0027t like in the previous patchset)...\n\ni was thinking of something more like this:\n```\nstatic int w_to_flag(int size, bool fast) {\n  static constexpr fast_flag \u003d fast ? LLONGINT : 0;\n  if (size \u003d\u003d 8) return CHARINT;\n  if (size \u003d\u003d 16) return fast ? fast_flag : SHORTINT;\n  if (size \u003d\u003d 32) return fast ? fast_flag : 0;\n  if (size \u003d\u003d 64) return LLONGINT;\n  __fortify_fatal(\"%%w%s%d is unsupported\", fast ? \"f\" : \"\", size);\n}\n```",
      "revId": "0662095e6f7753c818bef0b4bce1005cd678ef71",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "61291355_e8bccf13",
        "filename": "libc/stdio/printf_common.h",
        "patchSetId": 8
      },
      "lineNbr": 842,
      "author": {
        "id": 1890456
      },
      "writtenOn": "2023-05-02T00:13:30Z",
      "side": 1,
      "message": "Ohh I see. I will keep using switch here.",
      "parentUuid": "09867496_eb91b0fc",
      "revId": "0662095e6f7753c818bef0b4bce1005cd678ef71",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b9dfa369_a3bd49ed",
        "filename": "libc/stdio/printf_common.h",
        "patchSetId": 8
      },
      "lineNbr": 842,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2023-05-02T14:57:09Z",
      "side": 1,
      "message": "i prefer the `if`s myself (because it\u0027s 4 lines to look at instead of 23, most of which don\u0027t do anything), but that\u0027s fine. but please use `?:` rather than `if`/`else`, and the constexpr is a lot better than repeating the `sizeof()`, especially the `if (fast) return (sizeof()...` versus `if (fast \u0026\u0026 sizeof()...` --- anyone reading this needs to think about whether or not there\u0027s a reason why they\u0027re different. (it\u0027s early in the morning, but i think the answer is no? the bug in my version is that i said `fast` in the constexpr rather than `fast \u0026\u0026 (sizeof(void*) \u003d\u003d 8)`, right?)\n\n(if _not_, then we probably should just go with the `if (fast)` on the outside, because we\u0027re obviously struggling to come up with something that\u0027s both correct and readable!)",
      "parentUuid": "61291355_e8bccf13",
      "revId": "0662095e6f7753c818bef0b4bce1005cd678ef71",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "932b1ac6_a6f24761",
        "filename": "libc/stdio/printf_common.h",
        "patchSetId": 8
      },
      "lineNbr": 842,
      "author": {
        "id": 1890456
      },
      "writtenOn": "2023-05-02T18:32:36Z",
      "side": 1,
      "message": "I think `fast_flag` is more like a `data_model`. [I will name it like `data_model` in my code, but in the example, the name is still `fast_flag` for showing easier]\n\n```\nstatic int w_to_flag(int size, bool fast) {\n  static constexpr fast_flag \u003d sizeof(void*) \u003d\u003d 8 ? LLONGINT : 0;\n  if (size \u003d\u003d 8) return CHARINT;\n  if (size \u003d\u003d 16) return fast ? fast_flag : SHORTINT;\n  if (size \u003d\u003d 32) return fast ? fast_flag : 0;\n  if (size \u003d\u003d 64) return LLONGINT;\n  __fortify_fatal(\"%%w%s%d is unsupported\", fast ? \"f\" : \"\", size);\n}\n```\nNo need to use `fast` in `static constexpr fast_flag \u003d` in my view.\nAnd why I use switch is because I am thinking about extendability. 128, 256 will be added in the future (maybe after several decades), and `switch` is suitable for many cases. ðŸ˜‚ But yes, now `if` is a better choice, I will replace `switch` with `if`.",
      "parentUuid": "b9dfa369_a3bd49ed",
      "revId": "0662095e6f7753c818bef0b4bce1005cd678ef71",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2554cecd_25723205",
        "filename": "libc/stdio/printf_common.h",
        "patchSetId": 8
      },
      "lineNbr": 842,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2023-05-02T18:51:14Z",
      "side": 1,
      "message": "\u003e I think fast_flag is more like a data_model.\n\nwell, my intention was for it to be both --- \"for the current data model, what\u0027s the \u0027fast\u0027 size?\".\n\nbut if -- as i think you\u0027re saying -- we really only need \"how big is a long?\", we should just be able to remove the constexpr *and* the ?: and just say \"LONGINT\", no? that\u0027ll be 32-bit for ILP32 and 64-bit for LP64?\n\n\u003e 128, 256 will be added in the future (maybe after several decades)\n\nyeah, in general i\u0027d say \"never worry about anything that\u0027s more than 12 months out, because you won\u0027t be able to predict what that\u0027ll look like anyway\". if/when we have to worry about those, we might need to rewrite this whole function anyway (because who knows what the fast types look like in that world?).",
      "parentUuid": "932b1ac6_a6f24761",
      "revId": "0662095e6f7753c818bef0b4bce1005cd678ef71",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "aa93988c_032bf7d6",
        "filename": "libc/stdio/printf_common.h",
        "patchSetId": 8
      },
      "lineNbr": 842,
      "author": {
        "id": 1890456
      },
      "writtenOn": "2023-05-02T19:09:16Z",
      "side": 1,
      "message": "\u003e but if -- as i think you\u0027re saying -- we really only need \"how big is a long?\", we should just be able to remove the the constexpr and the ?: \n\nohh sorry for the confusing words. yes, it should be named as `fast_size`.\n\n\u003e never worry about anything that\u0027s more than 12 months out\nagree",
      "parentUuid": "2554cecd_25723205",
      "revId": "0662095e6f7753c818bef0b4bce1005cd678ef71",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "0d3bd0cf_05c09255",
        "filename": "libc/stdio/printf_common.h",
        "patchSetId": 8
      },
      "lineNbr": 842,
      "author": {
        "id": 1890456
      },
      "writtenOn": "2023-05-02T21:01:03Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "aa93988c_032bf7d6",
      "revId": "0662095e6f7753c818bef0b4bce1005cd678ef71",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d333f972_7cc07c5c",
        "filename": "libc/stdio/vfprintf.cpp",
        "patchSetId": 8
      },
      "lineNbr": 527,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2023-05-01T23:13:32Z",
      "side": 1,
      "message": "we still can\u0027t put the `bool` here?",
      "revId": "0662095e6f7753c818bef0b4bce1005cd678ef71",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "419d2828_f6dd2527",
        "filename": "libc/stdio/vfprintf.cpp",
        "patchSetId": 8
      },
      "lineNbr": 527,
      "author": {
        "id": 1890456
      },
      "writtenOn": "2023-05-02T00:13:30Z",
      "side": 1,
      "message": "We can, but we need to add brackets here.",
      "parentUuid": "d333f972_7cc07c5c",
      "revId": "0662095e6f7753c818bef0b4bce1005cd678ef71",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "4c3fa0fd_046b48a7",
        "filename": "libc/stdio/vfprintf.cpp",
        "patchSetId": 8
      },
      "lineNbr": 527,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2023-05-02T14:57:09Z",
      "side": 1,
      "message": "that\u0027s a good improvement! (the general rule being something like \"don\u0027t declare until you actually _need_ the thing; minimize its scope\". not for performance, just for readability --- everything needed to understand a piece of code should be right there, not three or four screens before.)",
      "parentUuid": "419d2828_f6dd2527",
      "revId": "0662095e6f7753c818bef0b4bce1005cd678ef71",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "9141e56e_fd38a582",
        "filename": "libc/stdio/vfprintf.cpp",
        "patchSetId": 8
      },
      "lineNbr": 527,
      "author": {
        "id": 1890456
      },
      "writtenOn": "2023-05-02T18:32:36Z",
      "side": 1,
      "message": "yes, I hesitate to add brackets is also because readbility. ðŸ˜‚case \u0027w\u0027 is the only case who needs brackets. But true, adding brackets is a trivial sacrifice.",
      "parentUuid": "4c3fa0fd_046b48a7",
      "revId": "0662095e6f7753c818bef0b4bce1005cd678ef71",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}