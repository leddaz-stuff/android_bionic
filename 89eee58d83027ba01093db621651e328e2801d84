{
  "comments": [
    {
      "key": {
        "uuid": "bd39f29e_a2e67710",
        "filename": "linker/linker_main.cpp",
        "patchSetId": 1
      },
      "lineNbr": 202,
      "author": {
        "id": 1019050
      },
      "writtenOn": "2017-10-06T01:04:10Z",
      "side": 1,
      "message": "Does this work? Aren\u0027t you returning a pointer to memory that gets freed, and might be invalid if used later on? Wouldn\u0027t it be safer to return std::string?\n\nAlso, this is saved in map-\u003el_name in __linker_init_post_relocation, which seems wrong. I think it should be saving a strdup of the pointer, or make that value std::string.",
      "range": {
        "startLine": 202,
        "startChar": 9,
        "endLine": 202,
        "endChar": 21
      },
      "revId": "89eee58d83027ba01093db621651e328e2801d84",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5747193a_31326846",
        "filename": "linker/linker_main.cpp",
        "patchSetId": 1
      },
      "lineNbr": 202,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2017-10-06T02:22:20Z",
      "side": 1,
      "message": "note that this is actually the same as before; i renamed the string to `holder` to try to make it clearer (because i thought the same as you) that this is a _static_ std::string specifically to ensure that this char* lasts forever.",
      "parentUuid": "bd39f29e_a2e67710",
      "range": {
        "startLine": 202,
        "startChar": 9,
        "endLine": 202,
        "endChar": 21
      },
      "revId": "89eee58d83027ba01093db621651e328e2801d84",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5f9cf03a_8c4f06a8",
        "filename": "linker/linker_main.cpp",
        "patchSetId": 1
      },
      "lineNbr": 202,
      "author": {
        "id": 1019050
      },
      "writtenOn": "2017-10-06T02:43:30Z",
      "side": 1,
      "message": "Oops, didn\u0027t notice the static part of the declaration.\n\nI do think this function feels inherently dangerous, since it should only ever be called once.",
      "parentUuid": "5747193a_31326846",
      "range": {
        "startLine": 202,
        "startChar": 9,
        "endLine": 202,
        "endChar": 21
      },
      "revId": "89eee58d83027ba01093db621651e328e2801d84",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "498a6903_27c6eeb5",
        "filename": "linker/linker_main.cpp",
        "patchSetId": 1
      },
      "lineNbr": 356,
      "author": {
        "id": 1041673
      },
      "writtenOn": "2017-10-06T11:58:41Z",
      "side": 1,
      "message": "this this the part I am worried about. Note that init_default_namespace uses path to figure out which namespace config to apply (from ld.config.txt file).",
      "range": {
        "startLine": 356,
        "startChar": 73,
        "endLine": 356,
        "endChar": 88
      },
      "revId": "89eee58d83027ba01093db621651e328e2801d84",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6a18a58e_0cbbec54",
        "filename": "linker/linker_main.cpp",
        "patchSetId": 1
      },
      "lineNbr": 356,
      "author": {
        "id": 1041673
      },
      "writtenOn": "2017-10-06T11:59:48Z",
      "side": 1,
      "message": "I am kind of surprised we do not have test for this, do we?",
      "parentUuid": "498a6903_27c6eeb5",
      "range": {
        "startLine": 356,
        "startChar": 73,
        "endLine": 356,
        "endChar": 88
      },
      "revId": "89eee58d83027ba01093db621651e328e2801d84",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b5275603_369bcfce",
        "filename": "linker/linker_main.cpp",
        "patchSetId": 1
      },
      "lineNbr": 356,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2017-10-06T16:19:08Z",
      "side": 1,
      "message": "this change wouldn\u0027t break any such test, though, unless the test was running a binary from a \u003e PATH_MAX path (which as you can see from the test, is a bit of a pain to actually arrange). anyone else will still get the full path.",
      "parentUuid": "6a18a58e_0cbbec54",
      "range": {
        "startLine": 356,
        "startChar": 73,
        "endLine": 356,
        "endChar": 88
      },
      "revId": "89eee58d83027ba01093db621651e328e2801d84",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}