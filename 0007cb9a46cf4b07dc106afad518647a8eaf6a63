{
  "comments": [
    {
      "key": {
        "uuid": "3137232b_cce2a309",
        "filename": "linker/linker.cpp",
        "patchSetId": 1
      },
      "lineNbr": 3482,
      "author": {
        "id": 1041673
      },
      "writtenOn": "2017-07-14T13:15:40Z",
      "side": 1,
      "message": "In my opinion we should move in opposite way of removing visible flag from the config completely and setting up sphal namespace from a library using programmatic interface.\n\nAlso this is precisely what I wanted to avoid -\u003e making default namespace accessible from other namespaces.\n\nI did not understand from the bug why can\u0027t you use sphal namespace for this?",
      "revId": "0007cb9a46cf4b07dc106afad518647a8eaf6a63",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "462e9639_798da0e6",
        "filename": "linker/linker.cpp",
        "patchSetId": 1
      },
      "lineNbr": 3482,
      "author": {
        "id": 1132673
      },
      "writtenOn": "2017-07-14T13:38:54Z",
      "side": 1,
      "message": "\u0027setting up the sphal namespace programmatically\u0027 is a different issue. Even if we do that, this problem persists.\n\nsphal namespace only exists in /system/bin/* processes, and this issue is for /vendor/bin/* processes, where we will have two namespaces: default ns (for somain and vendor/lib/*) and system ns (for selected libs in /system/lib).\n\nLet\u0027s assume that vendor bin uses a lib in system (e.g. libhardware) to dynamically load a vendor lib (typically an HAL). Since libhardware is loaded in system ns, simple dlopen will load the vendor lib in system ns, which is wrong; it should be loaded in the default namespace.",
      "parentUuid": "3137232b_cce2a309",
      "revId": "0007cb9a46cf4b07dc106afad518647a8eaf6a63",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "77680d07_04a702f7",
        "filename": "linker/linker.cpp",
        "patchSetId": 1
      },
      "lineNbr": 3482,
      "author": {
        "id": 1132673
      },
      "writtenOn": "2017-07-14T13:44:05Z",
      "side": 1,
      "message": "\u003e Also this is precisely what I wanted to avoid -\u003e making default namespace accessible from other namespaces.\n\nWe can still control the visibility using the .visible property. Default namespace for system/bin/* processes will never be invisible because namespace.default.visible is not set for [system] section. Only the default namespace for vendor/bin/* will be visible.",
      "parentUuid": "462e9639_798da0e6",
      "revId": "0007cb9a46cf4b07dc106afad518647a8eaf6a63",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "424809f9_2ce1d128",
        "filename": "linker/linker.cpp",
        "patchSetId": 1
      },
      "lineNbr": 3482,
      "author": {
        "id": 1146974
      },
      "writtenOn": "2017-07-14T13:45:49Z",
      "side": 1,
      "message": "Do you mean to define a new namespace \"sphal\" for vendor process as well?",
      "parentUuid": "3137232b_cce2a309",
      "revId": "0007cb9a46cf4b07dc106afad518647a8eaf6a63",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c5d1f1db_c4cb640e",
        "filename": "linker/linker.cpp",
        "patchSetId": 1
      },
      "lineNbr": 3482,
      "author": {
        "id": 1041673
      },
      "writtenOn": "2017-07-14T13:59:00Z",
      "side": 1,
      "message": "yes - it does not have to be any different from the one used for framework, is it?",
      "parentUuid": "424809f9_2ce1d128",
      "revId": "0007cb9a46cf4b07dc106afad518647a8eaf6a63",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e15ac25c_dd57c3b7",
        "filename": "linker/linker.cpp",
        "patchSetId": 1
      },
      "lineNbr": 3482,
      "author": {
        "id": 1132673
      },
      "writtenOn": "2017-07-14T14:30:04Z",
      "side": 1,
      "message": "Yes, it has to be different. In framework case, vendor libs are always loaded in the sphal namespace and never in the default namespace.\n\nHowever, in vendor process, if we have separate namespace for HALs, the same vendor lib can be double loaded in the default namespace (from the somain) and in the separate namespace (from the HAL). Dual loading of a random vendor lib must be avoided.",
      "parentUuid": "c5d1f1db_c4cb640e",
      "revId": "0007cb9a46cf4b07dc106afad518647a8eaf6a63",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}