{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "65546289_62602b56",
        "filename": "libc/kernel/tools/cpp.py",
        "patchSetId": 2
      },
      "lineNbr": 17,
      "author": {
        "id": 1010056
      },
      "writtenOn": "2022-10-21T19:09:24Z",
      "side": 1,
      "message": "This remains incorrect. If it fixes a breakage, the CL is fine, but we also need to migrate away from using `clang-stable`, which is very much not \"stable\". This needs to be a named/numbered release of Clang to actually have stability (even though that\u0027s more work to update later on).",
      "range": {
        "startLine": 17,
        "startChar": 66,
        "endLine": 17,
        "endChar": 78
      },
      "revId": "00fde2aff67cf654e3feb64c2229de049a6bc792",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "26a0110e_5de4a796",
        "filename": "libc/kernel/tools/cpp.py",
        "patchSetId": 2
      },
      "lineNbr": 17,
      "author": {
        "id": 1021676
      },
      "writtenOn": "2022-10-21T19:13:32Z",
      "side": 1,
      "message": "I think it should be ok to pick a numbered one but will they continue to be available indefinitely or will there be an issue with it being rotated out?\n\nFor the most part it seems that the clang version isn\u0027t so critical for this script but that the python3-clang module is present (even if it is unsupported).",
      "parentUuid": "65546289_62602b56",
      "range": {
        "startLine": 17,
        "startChar": 66,
        "endLine": 17,
        "endChar": 78
      },
      "revId": "00fde2aff67cf654e3feb64c2229de049a6bc792",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c16c178e_ff49357d",
        "filename": "libc/kernel/tools/cpp.py",
        "patchSetId": 2
      },
      "lineNbr": 17,
      "author": {
        "id": 1010056
      },
      "writtenOn": "2022-10-21T19:17:49Z",
      "side": 1,
      "message": "They do get rotated out, but they have stability. This `clang-stable` is one that changes arbitrarily (and without proper testing, as we\u0027re seeing). `clang-stable` was only ever intended because there were demands for `clang-format` availability to gerrit tooling. We should have pushed back harder on that in the past, but it\u0027s too late now. https://android.googlesource.com/platform/prebuilts/clang/host/linux-x86/ shows just how many places use the numbered builds, and this should be another of them (or preferably it could get the number from what `build/soong` is using).",
      "parentUuid": "26a0110e_5de4a796",
      "range": {
        "startLine": 17,
        "startChar": 66,
        "endLine": 17,
        "endChar": 78
      },
      "revId": "00fde2aff67cf654e3feb64c2229de049a6bc792",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6821d82d_a94079e2",
        "filename": "libc/kernel/tools/cpp.py",
        "patchSetId": 2
      },
      "lineNbr": 17,
      "author": {
        "id": 1021676
      },
      "writtenOn": "2022-10-21T19:32:05Z",
      "side": 1,
      "message": "I see in `build/soong/cc/config/global` it\u0027s defined as `ClangDefaultVersion` but getting that into this script without adding another dependency is tricky, I think.\n\nIt is also hardcoded in `build/soong/rust/bindgen.go`\n\nIs it reasonable to hardcode `clang-r468909b` in this script as well?  I\u0027m afraid it\u0027ll get left behind after the next branch.\n\nMaybe it needs to be simply defined (i.e. a text file with clang-version in it) in build/ somwehere for inclusion to all of these places?",
      "parentUuid": "c16c178e_ff49357d",
      "range": {
        "startLine": 17,
        "startChar": 66,
        "endLine": 17,
        "endChar": 78
      },
      "revId": "00fde2aff67cf654e3feb64c2229de049a6bc792",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "25fae172_5d575ae8",
        "filename": "libc/kernel/tools/cpp.py",
        "patchSetId": 2
      },
      "lineNbr": 17,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2022-10-21T19:33:20Z",
      "side": 1,
      "message": "\u003e Maybe it needs to be simply defined (i.e. a text file with clang-version in it) in build/ somwehere for inclusion to all of these places?\n\nyeah. i think +pirama\u0027s been working on something like that?\n\nbut like srhines says, this is fine for now.",
      "parentUuid": "6821d82d_a94079e2",
      "range": {
        "startLine": 17,
        "startChar": 66,
        "endLine": 17,
        "endChar": 78
      },
      "revId": "00fde2aff67cf654e3feb64c2229de049a6bc792",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "1cfdd3fc_c50caca4",
        "filename": "libc/kernel/tools/cpp.py",
        "patchSetId": 2
      },
      "lineNbr": 17,
      "author": {
        "id": 1021676
      },
      "writtenOn": "2022-10-21T19:34:41Z",
      "side": 1,
      "message": "SGTM, thanks!",
      "parentUuid": "25fae172_5d575ae8",
      "range": {
        "startLine": 17,
        "startChar": 66,
        "endLine": 17,
        "endChar": 78
      },
      "revId": "00fde2aff67cf654e3feb64c2229de049a6bc792",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "8491aea6_50496fd4",
        "filename": "libc/kernel/tools/cpp.py",
        "patchSetId": 2
      },
      "lineNbr": 17,
      "author": {
        "id": 1058860
      },
      "writtenOn": "2022-10-21T19:42:09Z",
      "side": 1,
      "message": "build/soong/scripts/get_clang_version.py is the script for getting the version.",
      "parentUuid": "1cfdd3fc_c50caca4",
      "range": {
        "startLine": 17,
        "startChar": 66,
        "endLine": 17,
        "endChar": 78
      },
      "revId": "00fde2aff67cf654e3feb64c2229de049a6bc792",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c950fcc8_6a28e6c8",
        "filename": "libc/kernel/tools/cpp.py",
        "patchSetId": 2
      },
      "lineNbr": 17,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2022-10-21T19:46:46Z",
      "side": 1,
      "message": "seems like there aren\u0027t many files we\u0027d need to fix (from https://source.corp.google.com/search?q\u003dclang%2Fhost%2Flinux-x86%2Fclang-stable%20-file:clang%2Fhost%2Flinux-x86%2Fclang-stable\u0026sq\u003dpackage:%5Eandroid$ ) ... worth giving that job to someone and removing clang-stable before new users crop up? (and maybe add a README.md referring to build/soong/scripts/get_clang_version.py, for anyone poking around in prebuilts/clang/host/linux-x86/ looking for a way to get the current clang?)",
      "parentUuid": "8491aea6_50496fd4",
      "range": {
        "startLine": 17,
        "startChar": 66,
        "endLine": 17,
        "endChar": 78
      },
      "revId": "00fde2aff67cf654e3feb64c2229de049a6bc792",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "84f5d4b4_63912e0d",
        "filename": "libc/kernel/tools/cpp.py",
        "patchSetId": 2
      },
      "lineNbr": 17,
      "author": {
        "id": 1021676
      },
      "writtenOn": "2022-10-21T19:50:37Z",
      "side": 1,
      "message": "would it be terrible for a symlink `clang-platform` in `prebuilts/clang/host/linux-x86/`?  or maybe the symlink can be placed in `build` somewhere?\n\n`get_clang_version.py` works well but it requires a shell out to execute it and at the end, it is just a regex parse on the global.go file (though I see there is a TODO to get it from json)",
      "parentUuid": "c950fcc8_6a28e6c8",
      "range": {
        "startLine": 17,
        "startChar": 66,
        "endLine": 17,
        "endChar": 78
      },
      "revId": "00fde2aff67cf654e3feb64c2229de049a6bc792",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e8ebbd3b_fd71aa8f",
        "filename": "libc/kernel/tools/cpp.py",
        "patchSetId": 2
      },
      "lineNbr": 17,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2022-10-21T19:54:54Z",
      "side": 1,
      "message": "\u003e requires a shell out to execute it\n\nit doesn\u0027t _require_ that, right? you could just `import` it? although i\u0027m assuming it\u0027s not anywhere that\u0027s already a sitedir, so you\u0027d need to addsitedir() first, which is annoying? do we have anywhere where python modules are available \"for free\"?",
      "parentUuid": "84f5d4b4_63912e0d",
      "range": {
        "startLine": 17,
        "startChar": 66,
        "endLine": 17,
        "endChar": 78
      },
      "revId": "00fde2aff67cf654e3feb64c2229de049a6bc792",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "5d648e56_7e8cc8d2",
        "filename": "libc/kernel/tools/cpp.py",
        "patchSetId": 2
      },
      "lineNbr": 17,
      "author": {
        "id": 1021676
      },
      "writtenOn": "2022-10-21T20:10:36Z",
      "side": 1,
      "message": "For python scripts, yes, import is ok but it requires that `build/...` be synced.  However for the other languages it requires some extra work (but maybe that\u0027s ok).\n\nFor our specific use case, we run it in a parital tree (we only sync the necessary parts of the tree required to run `clean_header.py`), but I can sync `build/...`, it\u0027s not a big deal.",
      "parentUuid": "e8ebbd3b_fd71aa8f",
      "range": {
        "startLine": 17,
        "startChar": 66,
        "endLine": 17,
        "endChar": 78
      },
      "revId": "00fde2aff67cf654e3feb64c2229de049a6bc792",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "491bba38_9bdce97a",
        "filename": "libc/kernel/tools/cpp.py",
        "patchSetId": 2
      },
      "lineNbr": 17,
      "author": {
        "id": 1010056
      },
      "writtenOn": "2022-10-25T07:56:06Z",
      "side": 1,
      "message": "Unfortunately, even if we fix all the other users of `clang-stable`, it can\u0027t go away, because we allow repo hooks to run `clang-format` from that location. 😞 The only folks broken by `clang-stable` are people who are relying on the shared library there to work, which might be something we can remove if we statically link a `clang-format`. Another alternative is that we finally remove repo hooks support for `clang-format`, which then would require people to run `clang-format` only in a shell that has sourced `envsetup.sh` (to pick up minimal LLVM tooling from a supported directory).",
      "parentUuid": "5d648e56_7e8cc8d2",
      "range": {
        "startLine": 17,
        "startChar": 66,
        "endLine": 17,
        "endChar": 78
      },
      "revId": "00fde2aff67cf654e3feb64c2229de049a6bc792",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "0af38a61_6e86952a",
        "filename": "libc/kernel/tools/cpp.py",
        "patchSetId": 2
      },
      "lineNbr": 17,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2022-10-25T16:24:03Z",
      "side": 1,
      "message": "\u003e Another alternative is that we finally remove repo hooks support for clang-format, which then would require people to run clang-format only in a shell that has sourced envsetup.sh (to pick up minimal LLVM tooling from a supported directory).\n\nthat really sucks (we use it ourselves in projects where we actually own all the code), but it does seem like we\u0027re going to get ever _less_ support from the repo side for this :-(\n\ni\u0027m not sure i understand what you\u0027re saying though ... why can\u0027t we make it so the _repo hook_ requires that you\u0027ve sourced envsetup.sh? (which seems fine to me, since if you haven\u0027t done that, i don\u0027t believe you\u0027ve even _built_ your change, so i don\u0027t care!)",
      "parentUuid": "491bba38_9bdce97a",
      "range": {
        "startLine": 17,
        "startChar": 66,
        "endLine": 17,
        "endChar": 78
      },
      "revId": "00fde2aff67cf654e3feb64c2229de049a6bc792",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ],
  "submitRequirementResults": [
    {
      "submitRequirement": {
        "name": "AIDL-API-Review",
        "description": {
          "value": "Submit requirement for the AIDL-API-Review"
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "file:\"^(.*/)?aidl_api/.*\""
          }
        },
        "submittabilityExpression": {
          "expressionString": "label:AIDL-API-Review AND -label:AIDL-API-Review\u003dMIN"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "is:android_exemptedusers OR uploader:1587862 OR (branch:\"^refs/heads/cherrypick-temp-.*\" AND is:android-cherry-pick_exemptedusers) OR label:Build-Cop-Override\u003d+1"
          }
        },
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"file:\"^(.*/)?aidl_api/.*\""},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["file:\"^(.*/)?aidl_api/.*\""]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:AIDL-API-Review AND -label:AIDL-API-Review=MIN"},"status":"NOT_EVALUATED","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":[]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"is:android_exemptedusers OR uploader:1587862 OR (branch:\"^refs/heads/cherrypick-temp-.*\" AND is:android-cherry-pick_exemptedusers) OR label:Build-Cop-Override=+1"},"status":"NOT_EVALUATED","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":[]}
      },
      "patchSetCommitId": "00fde2aff67cf654e3feb64c2229de049a6bc792",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "API-Review",
        "description": {
          "value": "Submit requirement for the API-Review"
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "file:\"^(((~(xsd|xml)).*/)?)api/((~(xsd|xml)).*?)\\\\.txt$\" AND -project:device/generic/vulkan-cereal AND -project:platform/external/qemu AND -project:platform/hardware/interfaces AND -project:toolchain/go AND -project:platform/prebuilts/go/darwin-x86 AND -project:platform/prebuilts/go/linux-x86 AND -project:platform/system/tools/xsdc AND -project:platform/external/gfxstream-protocols -(project:platform/frameworks/av AND file:\".*/xmlparser/.*\") AND -(project:platform/external/icu AND file:\".*android_icu4j/api/legacy_platform/.*\") AND -(project:platform/tools/base AND file:\".*build-system/.*\")"
          }
        },
        "submittabilityExpression": {
          "expressionString": "label:API-Review\u003dMAX AND -label:API-Review\u003dMIN"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "is:android_exemptedusers OR uploader:1587862 OR (branch:\"^refs/heads/cherrypick-temp-.*\" AND is:android-cherry-pick_exemptedusers) OR label:Build-Cop-Override\u003d+1"
          }
        },
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"file:\"^(((~(xsd|xml)).*/)?)api/((~(xsd|xml)).*?)\\\\.txt$\" AND -project:device/generic/vulkan-cereal AND -project:platform/external/qemu AND -project:platform/hardware/interfaces AND -project:toolchain/go AND -project:platform/prebuilts/go/darwin-x86 AND -project:platform/prebuilts/go/linux-x86 AND -project:platform/system/tools/xsdc AND -project:platform/external/gfxstream-protocols -(project:platform/frameworks/av AND file:\".*/xmlparser/.*\") AND -(project:platform/external/icu AND file:\".*android_icu4j/api/legacy_platform/.*\") AND -(project:platform/tools/base AND file:\".*build-system/.*\")"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["file:\"^(((~(xsd|xml)).*/)?)api/((~(xsd|xml)).*?)\\\\.txt$\"","project:device/generic/vulkan-cereal","project:platform/external/qemu","project:platform/hardware/interfaces","project:toolchain/go","project:platform/prebuilts/go/darwin-x86","project:platform/prebuilts/go/linux-x86","project:platform/system/tools/xsdc","project:platform/external/gfxstream-protocols","project:platform/frameworks/av","file:\".*/xmlparser/.*\"","project:platform/external/icu","file:\".*android_icu4j/api/legacy_platform/.*\"","project:platform/tools/base","file:\".*build-system/.*\""]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:API-Review=MAX AND -label:API-Review=MIN"},"status":"NOT_EVALUATED","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":[]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"is:android_exemptedusers OR uploader:1587862 OR (branch:\"^refs/heads/cherrypick-temp-.*\" AND is:android-cherry-pick_exemptedusers) OR label:Build-Cop-Override=+1"},"status":"NOT_EVALUATED","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":[]}
      },
      "patchSetCommitId": "00fde2aff67cf654e3feb64c2229de049a6bc792",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Build-Team-Review",
        "description": {
          "value": "Build team review is required"
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "-message:\"Import translations.\" AND message:\"DO NOT MERGE ANYWHERE\" AND -branch:refs/meta/config"
          }
        },
        "submittabilityExpression": {
          "expressionString": "label:Build-Team-Review\u003dMAX AND -label:Build-Team-Review\u003dMIN"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "is:android_exemptedusers OR uploader:1587862 OR (branch:\"^refs/heads/cherrypick-temp-.*\" AND is:android-cherry-pick_exemptedusers) OR label:Build-Cop-Override\u003d+1"
          }
        },
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"-message:\"Import translations.\" AND message:\"DO NOT MERGE ANYWHERE\" AND -branch:refs/meta/config"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["message:\"Import translations.\"","message:\"DO NOT MERGE ANYWHERE\"","branch:refs/meta/config"]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Build-Team-Review=MAX AND -label:Build-Team-Review=MIN"},"status":"NOT_EVALUATED","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":[]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"is:android_exemptedusers OR uploader:1587862 OR (branch:\"^refs/heads/cherrypick-temp-.*\" AND is:android-cherry-pick_exemptedusers) OR label:Build-Cop-Override=+1"},"status":"NOT_EVALUATED","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":[]}
      },
      "patchSetCommitId": "00fde2aff67cf654e3feb64c2229de049a6bc792",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Code-Review",
        "description": {
          "value": "Submit requirement for the Code-Review requirement"
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "-label:Code-Review\u003dMIN AND (label:Code-Review\u003dMAX,user\u003dnon_uploader OR (label:Code-Review\u003dMAX AND (label:Exempt\u003d+1 OR (uploader:1474732 AND (project:platform/developers/docs OR project:platform/frameworks/support)))))"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "is:android_exemptedusers OR uploader:1587862 OR (branch:\"^refs/heads/cherrypick-temp-.*\" AND is:android-cherry-pick_exemptedusers)"
          }
        },
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"-label:Code-Review=MIN AND (label:Code-Review=MAX,user=non_uploader OR (label:Code-Review=MAX AND (label:Exempt=+1 OR (uploader:1474732 AND (project:platform/developers/docs OR project:platform/frameworks/support)))))"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["label:Code-Review=MAX,user=non_uploader","label:Code-Review=MAX"],"failingAtoms":["label:Code-Review=MIN","label:Exempt=+1","uploader:1474732","project:platform/developers/docs","project:platform/frameworks/support"]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"is:android_exemptedusers OR uploader:1587862 OR (branch:\"^refs/heads/cherrypick-temp-.*\" AND is:android-cherry-pick_exemptedusers)"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["is:android_exemptedusers","uploader:1587862","branch:\"^refs/heads/cherrypick-temp-.*\"","is:android-cherry-pick_exemptedusers"]}
      },
      "patchSetCommitId": "00fde2aff67cf654e3feb64c2229de049a6bc792",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "DrNo-Review",
        "description": {
          "value": "Submit requirement for the DrNo-Review"
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "branch:refs/heads/oreo-cts-dev OR branch:refs/heads/oreo-mr1-cts-dev OR branch:refs/heads/oreo-vts-dev OR branch:refs/heads/oreo-mr1-vts-dev OR branch:refs/heads/nougat-cts-dev OR branch:refs/heads/nougat-mr1-cts-dev OR branch:refs/heads/pie-cts-dev OR branch:refs/heads/pie-vts-dev OR branch:refs/heads/android10-tests-dev OR branch:refs/heads/android11-tests-dev OR branch:refs/heads/android12-tests-dev OR branch:refs/heads/android12L-tests-dev OR branch:refs/heads/android13-tests-dev OR branch:^refs/heads/.*-gsi OR branch:refs/heads/emu-32-dev"
          }
        },
        "submittabilityExpression": {
          "expressionString": "label:DrNo-Review\u003dMAX AND -label:DrNo-Review\u003dMIN"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "is:android_exemptedusers OR uploader:1587862 OR (branch:\"^refs/heads/cherrypick-temp-.*\" AND is:android-cherry-pick_exemptedusers) OR label:Build-Cop-Override\u003d+1"
          }
        },
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"branch:refs/heads/oreo-cts-dev OR branch:refs/heads/oreo-mr1-cts-dev OR branch:refs/heads/oreo-vts-dev OR branch:refs/heads/oreo-mr1-vts-dev OR branch:refs/heads/nougat-cts-dev OR branch:refs/heads/nougat-mr1-cts-dev OR branch:refs/heads/pie-cts-dev OR branch:refs/heads/pie-vts-dev OR branch:refs/heads/android10-tests-dev OR branch:refs/heads/android11-tests-dev OR branch:refs/heads/android12-tests-dev OR branch:refs/heads/android12L-tests-dev OR branch:refs/heads/android13-tests-dev OR branch:^refs/heads/.*-gsi OR branch:refs/heads/emu-32-dev"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["branch:refs/heads/oreo-cts-dev","branch:refs/heads/oreo-mr1-cts-dev","branch:refs/heads/oreo-vts-dev","branch:refs/heads/oreo-mr1-vts-dev","branch:refs/heads/nougat-cts-dev","branch:refs/heads/nougat-mr1-cts-dev","branch:refs/heads/pie-cts-dev","branch:refs/heads/pie-vts-dev","branch:refs/heads/android10-tests-dev","branch:refs/heads/android11-tests-dev","branch:refs/heads/android12-tests-dev","branch:refs/heads/android12L-tests-dev","branch:refs/heads/android13-tests-dev","branch:^refs/heads/.*-gsi","branch:refs/heads/emu-32-dev"]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:DrNo-Review=MAX AND -label:DrNo-Review=MIN"},"status":"NOT_EVALUATED","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":[]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"is:android_exemptedusers OR uploader:1587862 OR (branch:\"^refs/heads/cherrypick-temp-.*\" AND is:android-cherry-pick_exemptedusers) OR label:Build-Cop-Override=+1"},"status":"NOT_EVALUATED","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":[]}
      },
      "patchSetCommitId": "00fde2aff67cf654e3feb64c2229de049a6bc792",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Lint",
        "description": {
          "value": "Submit requirement for the Lint requirement"
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "-branch:refs/meta/config"
          }
        },
        "submittabilityExpression": {
          "expressionString": "-label:Lint\u003dMIN AND (label:Lint\u003d+2 OR -label:Lint\u003d-1)"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "is:android_exemptedusers OR (branch:\"^refs/heads/cherrypick-temp-.*\" AND is:android-cherry-pick_exemptedusers) OR label:Build-Cop-Override\u003d+1"
          }
        },
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"-branch:refs/meta/config"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["branch:refs/meta/config"]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"-label:Lint=MIN AND (label:Lint=+2 OR -label:Lint=-1)"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Lint=MIN","label:Lint=+2","label:Lint=-1"]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"is:android_exemptedusers OR (branch:\"^refs/heads/cherrypick-temp-.*\" AND is:android-cherry-pick_exemptedusers) OR label:Build-Cop-Override=+1"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["is:android_exemptedusers","branch:\"^refs/heads/cherrypick-temp-.*\"","is:android-cherry-pick_exemptedusers","label:Build-Cop-Override=+1"]}
      },
      "patchSetCommitId": "00fde2aff67cf654e3feb64c2229de049a6bc792",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "NDK-API-Review",
        "description": {
          "value": "Submit requirement for the NDK-API-Review"
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "file:\"^.*\\\\.map\\\\.txt$\""
          }
        },
        "submittabilityExpression": {
          "expressionString": "label:NDK-API-Review\u003dMAX AND -label:NDK-API-Review\u003dMIN"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "is:android_exemptedusers OR uploader:1587862 OR (branch:\"^refs/heads/cherrypick-temp-.*\" AND is:android-cherry-pick_exemptedusers) OR label:Build-Cop-Override\u003d+1"
          }
        },
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"file:\"^.*\\\\.map\\\\.txt$\""},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["file:\"^.*\\\\.map\\\\.txt$\""]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:NDK-API-Review=MAX AND -label:NDK-API-Review=MIN"},"status":"NOT_EVALUATED","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":[]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"is:android_exemptedusers OR uploader:1587862 OR (branch:\"^refs/heads/cherrypick-temp-.*\" AND is:android-cherry-pick_exemptedusers) OR label:Build-Cop-Override=+1"},"status":"NOT_EVALUATED","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":[]}
      },
      "patchSetCommitId": "00fde2aff67cf654e3feb64c2229de049a6bc792",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Open-Source-Licensing",
        "description": {
          "value": "Submit requirement for the Open-Source-Licensing"
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "-branch:refs/meta/config"
          }
        },
        "submittabilityExpression": {
          "expressionString": "label:Open-Source-Licensing\u003d0 OR (-label:Open-Source-Licensing\u003dMIN AND ((label:Open-Source-Licensing\u003dMAX AND label:Open-Source-Licensing\u003d-1) OR -label:Open-Source-Licensing\u003d-1))"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "is:android_exemptedusers OR uploader:1587862 OR (branch:\"^refs/heads/cherrypick-temp-.*\" AND is:android-cherry-pick_exemptedusers) OR label:Build-Cop-Override\u003d+1"
          }
        },
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"-branch:refs/meta/config"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["branch:refs/meta/config"]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Open-Source-Licensing=0 OR (-label:Open-Source-Licensing=MIN AND ((label:Open-Source-Licensing=MAX AND label:Open-Source-Licensing=-1) OR -label:Open-Source-Licensing=-1))"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["label:Open-Source-Licensing=0"],"failingAtoms":["label:Open-Source-Licensing=MIN","label:Open-Source-Licensing=MAX","label:Open-Source-Licensing=-1","label:Open-Source-Licensing=-1"]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"is:android_exemptedusers OR uploader:1587862 OR (branch:\"^refs/heads/cherrypick-temp-.*\" AND is:android-cherry-pick_exemptedusers) OR label:Build-Cop-Override=+1"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["is:android_exemptedusers","uploader:1587862","branch:\"^refs/heads/cherrypick-temp-.*\"","is:android-cherry-pick_exemptedusers","label:Build-Cop-Override=+1"]}
      },
      "patchSetCommitId": "00fde2aff67cf654e3feb64c2229de049a6bc792",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Presubmit-Verified",
        "description": {
          "value": "Submit requirement for the Presubmit-Verified requirement"
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "-label:Presubmit-Verified\u003d-2 AND (label:Bypass-Presubmit\u003d+1 OR label:Presubmit-Verified-Together\u003d+1 OR (-label:Presubmit-Verified\u003d-1 AND (label:Presubmit-Verified\u003d+2 OR label:Presubmit-Verified\u003d+1)))"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "label:Bypass-Presubmit\u003d+2 OR is:android_exemptedusers OR uploader:1587862 OR (branch:\"^refs/heads/cherrypick-temp-.*\" AND is:android-cherry-pick_exemptedusers) OR (label:Build-Cop-Override\u003d+1 AND is:pure-revert AND -label:Presubmit-Verified\u003d-2)"
          }
        },
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"-label:Presubmit-Verified=-2 AND (label:Bypass-Presubmit=+1 OR label:Presubmit-Verified-Together=+1 OR (-label:Presubmit-Verified=-1 AND (label:Presubmit-Verified=+2 OR label:Presubmit-Verified=+1)))"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["label:Presubmit-Verified=+2"],"failingAtoms":["label:Presubmit-Verified=-2","label:Bypass-Presubmit=+1","label:Presubmit-Verified-Together=+1","label:Presubmit-Verified=-1","label:Presubmit-Verified=+1"]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"label:Bypass-Presubmit=+2 OR is:android_exemptedusers OR uploader:1587862 OR (branch:\"^refs/heads/cherrypick-temp-.*\" AND is:android-cherry-pick_exemptedusers) OR (label:Build-Cop-Override=+1 AND is:pure-revert AND -label:Presubmit-Verified=-2)"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Bypass-Presubmit=+2","is:android_exemptedusers","uploader:1587862","branch:\"^refs/heads/cherrypick-temp-.*\"","is:android-cherry-pick_exemptedusers","label:Build-Cop-Override=+1","is:pure-revert","label:Presubmit-Verified=-2"]}
      },
      "patchSetCommitId": "00fde2aff67cf654e3feb64c2229de049a6bc792",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Qualcomm-Review",
        "description": {
          "value": "Submit requirement for the Qualcomm-Review"
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "authoremail:\"^.*@(qti\\\\.qualcomm\\\\.com|qca\\\\.qualcomm\\\\.com|quicinc\\\\.com|qualcomm\\\\.com)\" AND -project:\"^.*/vendor/(qcom|bsp).*\""
          }
        },
        "submittabilityExpression": {
          "expressionString": "label:Qualcomm-Review\u003dMAX AND -label:Qualcomm-Review\u003dMIN"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "is:android_exemptedusers OR uploader:1587862 OR (branch:\"^refs/heads/cherrypick-temp-.*\" AND is:android-cherry-pick_exemptedusers) OR label:Build-Cop-Override\u003d+1"
          }
        },
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"authoremail:\"^.*@(qti\\\\.qualcomm\\\\.com|qca\\\\.qualcomm\\\\.com|quicinc\\\\.com|qualcomm\\\\.com)\" AND -project:\"^.*/vendor/(qcom|bsp).*\""},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["authoremail:\"^.*@(qti\\\\.qualcomm\\\\.com|qca\\\\.qualcomm\\\\.com|quicinc\\\\.com|qualcomm\\\\.com)\"","project:\"^.*/vendor/(qcom|bsp).*\""]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Qualcomm-Review=MAX AND -label:Qualcomm-Review=MIN"},"status":"NOT_EVALUATED","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":[]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"is:android_exemptedusers OR uploader:1587862 OR (branch:\"^refs/heads/cherrypick-temp-.*\" AND is:android-cherry-pick_exemptedusers) OR label:Build-Cop-Override=+1"},"status":"NOT_EVALUATED","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":[]}
      },
      "patchSetCommitId": "00fde2aff67cf654e3feb64c2229de049a6bc792",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Review-Enforcement",
        "description": {
          "value": "Two Google employees must approve the change. Uploading the change or voting positively on Code-Review count as approval."
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "is:review-enforced_gerrit"
          }
        },
        "submittabilityExpression": {
          "expressionString": "is:review-enforcement-satisfied_gerrit"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforced_gerrit"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["is:review-enforced_gerrit"],"failingAtoms":[]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforced_gerrit"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["is:review-enforcement-satisfied_gerrit"]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "00fde2aff67cf654e3feb64c2229de049a6bc792",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {
        "value": true
      }
    }
  ]
}