{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "76bbe21a_24159f0c",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1208973
      },
      "writtenOn": "2021-07-21T17:18:58Z",
      "side": 1,
      "message": "Note that I had to bypass repo\u0027s upload verification for this.  It seemed to want to copy the whole .rs file into the NOTICE file.  I assume that\u0027s because the license parsing code doesn\u0027t understand Rust comments (I think the license in our file is already there).  Elliott, what should I do about this?",
      "revId": "ccce623805b861cae3636f58b2f30535bd908f87",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "03ec89c0_34bb74c7",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1208973
      },
      "writtenOn": "2021-07-21T17:32:05Z",
      "side": 1,
      "message": "Looking into this a bit, it seems like generate_notice.py is having the problem I described above.  The issue is that it doesn\u0027t know where the license ends as we use Rust // comments instead of /* */ ones.  We could use the latter, but that is discouraged by Rust style guides (both upstream\u0027s and ours).\n\nElliott, would you prefer we use /* */ comments anyway?  Should we have the Python script recognize //! as an end marker (which denotes a module-level rustdoc comment string, so is a bit of a hack, but might work)?  Or should we add some recognizable string in a comment?",
      "parentUuid": "76bbe21a_24159f0c",
      "revId": "ccce623805b861cae3636f58b2f30535bd908f87",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "277906e7_49de65c0",
        "filename": "libc/Android.bp",
        "patchSetId": 1
      },
      "lineNbr": 2533,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2021-07-21T21:20:30Z",
      "side": 1,
      "message": "can we keep this either in its own directory, or at least in the system_properties/Android.bp?\n\nis there a reason why this isn\u0027t going into rust proper? they already have bindings for bionic in general, right? shouldn\u0027t this just be in there?",
      "revId": "ccce623805b861cae3636f58b2f30535bd908f87",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5d4e53d8_14d659ba",
        "filename": "libc/rust/system_properties.rs",
        "patchSetId": 1
      },
      "lineNbr": 1,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2021-07-21T21:20:30Z",
      "side": 1,
      "message": "yeah, just use a regular /* */ comment for this. the script\u0027s not clever enough, and we\u0027re not likely to have the time or motivation to enhance it to better support rust bindings.",
      "revId": "ccce623805b861cae3636f58b2f30535bd908f87",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}