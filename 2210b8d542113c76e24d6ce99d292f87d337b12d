{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "bc94751c_19e268e9",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1453063
      },
      "writtenOn": "2020-11-30T22:46:34Z",
      "side": 1,
      "message": "(unclear what the presubmit warning, but this is RFR and fixes a CTS failure on SC)",
      "revId": "2210b8d542113c76e24d6ce99d292f87d337b12d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "46017464_fd1c3be3",
        "filename": "libc/bionic/memory_mitigation_state.cpp",
        "patchSetId": 2
      },
      "lineNbr": 59,
      "author": {
        "id": 1005967
      },
      "writtenOn": "2020-11-30T22:52:12Z",
      "side": 1,
      "message": "Why not move this lock inside GetHeapTaggingLevel and SetHeapTaggingLevel?\nI don\u0027t this the lack of atomicity here would be a problem.",
      "revId": "2210b8d542113c76e24d6ce99d292f87d337b12d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4f0252e5_c2feb8af",
        "filename": "libc/bionic/memory_mitigation_state.cpp",
        "patchSetId": 2
      },
      "lineNbr": 59,
      "author": {
        "id": 1453063
      },
      "writtenOn": "2020-11-30T23:10:05Z",
      "side": 1,
      "message": "To avoid TOCTOU races between Get/SetHeapTaggingLevel if two threads call mallopt(M_DISABLE_MEMORY_MITIGATIONS) at the same time (or a race against mallopt(M_SET_HEAP_TAGGING_LEVEL)).",
      "parentUuid": "46017464_fd1c3be3",
      "revId": "2210b8d542113c76e24d6ce99d292f87d337b12d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}