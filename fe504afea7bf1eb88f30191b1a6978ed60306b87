{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "434e55c2_8b9c1cd2",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2022-12-12T16:39:08Z",
      "side": 1,
      "message": "much better checkin comment now :-)",
      "revId": "fe504afea7bf1eb88f30191b1a6978ed60306b87",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "fa6f6fc3_1b51e65c",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1043845
      },
      "writtenOn": "2022-12-12T20:33:28Z",
      "side": 1,
      "message": "enh: fyi for all the stuff that\u0027s \"!arm\" but is spelled \"arm64 x86_64 x86\"",
      "revId": "fe504afea7bf1eb88f30191b1a6978ed60306b87",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e71d3fc3_699550e2",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2022-12-12T20:43:26Z",
      "side": 1,
      "message": "you mean we should have riscv64 here too?",
      "parentUuid": "fa6f6fc3_1b51e65c",
      "revId": "fe504afea7bf1eb88f30191b1a6978ed60306b87",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "7b760bc2_46523949",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1043845
      },
      "writtenOn": "2022-12-12T21:40:43Z",
      "side": 1,
      "message": "(oops, didn\u0027t mean to make this blocking)\n\nWhen you get to that point, yeah, assuming it also uses the itanium unwind abi.",
      "parentUuid": "e71d3fc3_699550e2",
      "revId": "fe504afea7bf1eb88f30191b1a6978ed60306b87",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "69cab7d3_802029b7",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2022-12-12T21:43:31Z",
      "side": 1,
      "message": "should we do this now, so we don\u0027t forget, or is this likely to be obvious? (is there a test that will make it clear we\u0027ve forgotten to do this?)",
      "parentUuid": "7b760bc2_46523949",
      "revId": "fe504afea7bf1eb88f30191b1a6978ed60306b87",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "882bb5b6_af925055",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1229339
      },
      "writtenOn": "2022-12-12T22:45:38Z",
      "side": 1,
      "message": "We don\u0027t link libunwind.a for platform binaries in Soong, so maybe anything that calls `_Unwind_*` will fail to link/load? Even libc++.so in the toolchain build might not link, depending on whether the implicit `-unwindlib\u003dlibunwind` is disabled.\n\nAt some point, someone needs to scan all the arch-specific entries in the map file. Or alternatively, maybe expand the syntax to say \"!arm\" if that\u0027s really what we want.",
      "parentUuid": "69cab7d3_802029b7",
      "revId": "fe504afea7bf1eb88f30191b1a6978ed60306b87",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a20c1679_04601047",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2022-12-12T22:47:18Z",
      "side": 1,
      "message": "both set extension *and* negation are potentially broken when someone\u0027s foolish enough to _add_ a new architecture :-)",
      "parentUuid": "882bb5b6_af925055",
      "revId": "fe504afea7bf1eb88f30191b1a6978ed60306b87",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}