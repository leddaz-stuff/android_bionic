{
  "comments": [
    {
      "key": {
        "uuid": "ded6f021_6faf9291",
        "filename": "libc/bionic/malloc_tagged_pointers.h",
        "patchSetId": 6
      },
      "lineNbr": 92,
      "author": {
        "id": 1005967
      },
      "writtenOn": "2020-01-08T01:56:05Z",
      "side": 1,
      "message": "This might not work when pointer tagging is disabled in an application. We need to allow deallocating previously tagged allocations.",
      "revId": "b08c4bf03433921b240cafd77f8b3c5f5514d425",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "dfb9adb4_68e3d475",
        "filename": "libc/bionic/malloc_tagged_pointers.h",
        "patchSetId": 6
      },
      "lineNbr": 92,
      "author": {
        "id": 1453063
      },
      "writtenOn": "2020-01-09T00:56:09Z",
      "side": 1,
      "message": "This is in relation to feature compat in the zygote, right?\n\nCurrently:\n     v tag of free-d ptr  v\n     ---------------------+\n     | 0x00 | 0x3c | 0xff |\n     +------+------+------+\n0x00 |  OK  |  BAD |  BAD |  // global \"heap tag\" 0x00 (disabled)\n0x3c |  BAD |  OK  |  BAD |  // global \"heap tag\" 0x3c (enabled)\n     +------+------+------+\n\nAllowing a previously-tagged alloc when heap tag is zero:\n\n     v tag of free-d ptr  v\n     ---------------------+\n     | 0x00 | 0x3c | 0xff |\n     +------+------+------+\n0x00 |  OK  | *OK* |  BAD |  // global \"heap tag\" 0x00 (disabled)\n0x3c |  BAD |  OK  |  BAD |  // global \"heap tag\" 0x3c (enabled)\n     +------+------+------+\n\nDone (although if you can validate my assumptions here that would be great).",
      "parentUuid": "ded6f021_6faf9291",
      "revId": "b08c4bf03433921b240cafd77f8b3c5f5514d425",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "140dff90_580e64fd",
        "filename": "libc/bionic/malloc_tagged_pointers.h",
        "patchSetId": 6
      },
      "lineNbr": 92,
      "author": {
        "id": 1005967
      },
      "writtenOn": "2020-01-09T01:08:12Z",
      "side": 1,
      "message": "This look correct, thank you.\n\nNow we need a way to actually disable the tagging. Could be done in\nhttps://android-review.googlesource.com/c/platform/bionic/+/1197046",
      "parentUuid": "dfb9adb4_68e3d475",
      "revId": "b08c4bf03433921b240cafd77f8b3c5f5514d425",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "773c0507_d61da142",
        "filename": "libc/bionic/malloc_tagged_pointers.h",
        "patchSetId": 6
      },
      "lineNbr": 92,
      "author": {
        "id": 1453063
      },
      "writtenOn": "2020-01-09T01:23:52Z",
      "side": 1,
      "message": "I was thinking a private interface between libc and the zygote, as we can\u0027t disable memory tagging once we reach a multi-threaded context, as the tag is currently loaded unatomically. WDYT?\n\nAlso - do we want to enable this uncoditionally for now?",
      "parentUuid": "140dff90_580e64fd",
      "revId": "b08c4bf03433921b240cafd77f8b3c5f5514d425",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7595d303_0d6616ea",
        "filename": "libc/bionic/malloc_tagged_pointers.h",
        "patchSetId": 6
      },
      "lineNbr": 92,
      "author": {
        "id": 1067098
      },
      "writtenOn": "2020-01-09T01:30:54Z",
      "side": 1,
      "message": "The android_mallopt function is indeed a private (i.e. not exposed to NDK) interface. For MTE there are similar constraints around disabling tagging before becoming multi-threaded, see the comments that I added to my new enumerator.",
      "parentUuid": "773c0507_d61da142",
      "revId": "b08c4bf03433921b240cafd77f8b3c5f5514d425",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    }
  ]
}