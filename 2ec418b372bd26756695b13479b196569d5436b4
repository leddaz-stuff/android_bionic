{
  "comments": [
    {
      "key": {
        "uuid": "f326a369_90d16b82",
        "filename": "libc/bionic/fork.cpp",
        "patchSetId": 1
      },
      "lineNbr": 29,
      "author": {
        "id": 1069898
      },
      "writtenOn": "2020-06-02T02:01:23Z",
      "side": 1,
      "message": "for myself - remove as it\u0027s not really needed.",
      "revId": "2ec418b372bd26756695b13479b196569d5436b4",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e649532c_c10d92b8",
        "filename": "libc/bionic/fork.cpp",
        "patchSetId": 1
      },
      "lineNbr": 29,
      "author": {
        "id": 1069898
      },
      "writtenOn": "2020-06-04T00:06:11Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "f326a369_90d16b82",
      "revId": "2ec418b372bd26756695b13479b196569d5436b4",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d8881fbf_d6d4faa6",
        "filename": "libc/bionic/fork.cpp",
        "patchSetId": 1
      },
      "lineNbr": 39,
      "author": {
        "id": 1069898
      },
      "writtenOn": "2020-06-02T01:59:34Z",
      "side": 1,
      "message": "Note, that this results in double call to __get_thread() in child.\nIf that\u0027s an issue, we can pass self-\u003etid as a parameter to __clone_for_fork(), but for the native-bridge case it\u0027s not really used.",
      "revId": "2ec418b372bd26756695b13479b196569d5436b4",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "baaa218e_68bb7089",
        "filename": "libc/bionic/fork.cpp",
        "patchSetId": 1
      },
      "lineNbr": 39,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2020-06-02T23:56:28Z",
      "side": 1,
      "message": "yeah, i\u0027d rather reuse.",
      "parentUuid": "d8881fbf_d6d4faa6",
      "revId": "2ec418b372bd26756695b13479b196569d5436b4",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6b8dce30_9ec82074",
        "filename": "libc/bionic/fork.cpp",
        "patchSetId": 1
      },
      "lineNbr": 39,
      "author": {
        "id": 1229339
      },
      "writtenOn": "2020-06-03T00:06:53Z",
      "side": 1,
      "message": "Is the double-call a correctness issue? It shouldn\u0027t be an efficiency issue -- __get_thread is inlined and only a couple of instructions.",
      "parentUuid": "baaa218e_68bb7089",
      "revId": "2ec418b372bd26756695b13479b196569d5436b4",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "138c9d78_b5a60472",
        "filename": "libc/bionic/fork.cpp",
        "patchSetId": 1
      },
      "lineNbr": 39,
      "author": {
        "id": 1069898
      },
      "writtenOn": "2020-06-03T00:45:42Z",
      "side": 1,
      "message": "I don\u0027t see any correctness issues here. Since clone() is called without CLONE_SETTLS, tls in child and parent point to the same memory address (although in different processes).\n\nThat said, if Ryan doesn\u0027t mind, I can change it to __clone_for_fork(pid_t* tid). I don\u0027t really have any strong preference.",
      "parentUuid": "6b8dce30_9ec82074",
      "revId": "2ec418b372bd26756695b13479b196569d5436b4",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b3e02986_7710a479",
        "filename": "libc/bionic/fork.cpp",
        "patchSetId": 1
      },
      "lineNbr": 39,
      "author": {
        "id": 1229339
      },
      "writtenOn": "2020-06-03T01:45:31Z",
      "side": 1,
      "message": "Changing it to __clone_for_fork(pid_t* tid) sounds good to me.",
      "parentUuid": "138c9d78_b5a60472",
      "revId": "2ec418b372bd26756695b13479b196569d5436b4",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "fdbb7ed2_6d60618e",
        "filename": "libc/bionic/fork.cpp",
        "patchSetId": 1
      },
      "lineNbr": 39,
      "author": {
        "id": 1074438
      },
      "writtenOn": "2020-06-03T06:04:06Z",
      "side": 1,
      "message": "The reason why I\u0027d suggest not to pass tid is as follows:\n\nnow the logic of __clone_for_fork is \u0027do fork and set/clear pthread_internal_t tid field of the new child thread\u0027\n\nthis is exactly what native_bridge overwrite can do by calling host \u0027fork\u0027.\n\nbut if you pass tid explicitly, the semantics will be \u0027do fork and set/clear tid by this pointer\u0027. to stay on the safe side, native_bridge overwrite will have to check, that given pointer actually points to child thread\u0027s pthread_internal_t tid field, it cannot do the job for an arbitrary tid pointer.\n\nso by not passing tid explicitly we ensure all calls to __clone_for_fork are consistent.\n\nif you are concerned about double call of __get_thread, then we can do all tid manipulations within __clone_for_fork, which is IMHO even more consistent:\n\n  int __clone_for_fork() {\n    pthread_internal_t* self \u003d __get_thread();\n    int result \u003d clone(..., \u0026(self-\u003etid));\n    if (result \u003d\u003d 0) {\n      self-\u003eset_cached_pid(gettid());\n    }\n    return result;\n  }\n\nthen \u0027fork\u0027 itself doesn\u0027t touch pthread_internal_t at all. but, we check clone result twice ðŸ˜Š",
      "parentUuid": "b3e02986_7710a479",
      "revId": "2ec418b372bd26756695b13479b196569d5436b4",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4d79b73d_c2fc8c48",
        "filename": "libc/bionic/fork.cpp",
        "patchSetId": 1
      },
      "lineNbr": 39,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2020-06-03T23:13:52Z",
      "side": 1,
      "message": "yeah, i actually like that suggestion the best. i think that was what my subconscious was actually aiming for, but you\u0027re right, what i suggested doesn\u0027t really get us anywhere.",
      "parentUuid": "fdbb7ed2_6d60618e",
      "revId": "2ec418b372bd26756695b13479b196569d5436b4",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3ddcb5ba_738268d7",
        "filename": "libc/bionic/fork.cpp",
        "patchSetId": 1
      },
      "lineNbr": 39,
      "author": {
        "id": 1069898
      },
      "writtenOn": "2020-06-04T00:06:11Z",
      "side": 1,
      "message": "Okay, then I\u0027m leaving it as is.",
      "parentUuid": "4d79b73d_c2fc8c48",
      "revId": "2ec418b372bd26756695b13479b196569d5436b4",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}