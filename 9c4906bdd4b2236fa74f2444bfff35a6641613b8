{
  "comments": [
    {
      "key": {
        "uuid": "1505b795_fb21c381",
        "filename": "linker/linker.cpp",
        "patchSetId": 2
      },
      "lineNbr": 1298,
      "author": {
        "id": 1229339
      },
      "writtenOn": "2019-03-15T21:43:52Z",
      "side": 1,
      "message": "The format string only accepts 2 arguments, but there are 3.\n\nClang won\u0027t detect a mismatch because LinkerLogger::Log doesn\u0027t have a \"format\" attribute. Bionic needs this patch:\n\ndiff --git a/linker/linker_logger.h b/linker/linker_logger.h\nindex f9fc38e6e..fedbc05cf 100644\n--- a/linker/linker_logger.h\n+++ b/linker/linker_logger.h\n@@ -49,7 +49,7 @@ class LinkerLogger {\n   LinkerLogger() : flags_(0) { }\n \n   void ResetState();\n-  void Log(const char* format, ...);\n+  void Log(const char* format, ...) __printflike(2, 3);\n \n   uint32_t IsEnabled(uint32_t type) {\n     return flags_ \u0026 type;",
      "revId": "9c4906bdd4b2236fa74f2444bfff35a6641613b8",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ddbcf943_04c4aa6e",
        "filename": "linker/linker.cpp",
        "patchSetId": 2
      },
      "lineNbr": 1298,
      "author": {
        "id": 1373864
      },
      "writtenOn": "2019-03-15T22:18:26Z",
      "side": 1,
      "message": "Thanks, done.",
      "parentUuid": "1505b795_fb21c381",
      "revId": "9c4906bdd4b2236fa74f2444bfff35a6641613b8",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "841387ae_9fec4b23",
        "filename": "linker/linker.cpp",
        "patchSetId": 2
      },
      "lineNbr": 1586,
      "author": {
        "id": 1132673
      },
      "writtenOn": "2019-03-15T22:43:29Z",
      "side": 1,
      "message": "Do we need this? We already cover every paths inside find_library_in_linked_namespace.",
      "range": {
        "startLine": 1585,
        "startChar": 0,
        "endLine": 1586,
        "endChar": 96
      },
      "revId": "9c4906bdd4b2236fa74f2444bfff35a6641613b8",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ef1a39b9_be1d5ca5",
        "filename": "linker/linker.cpp",
        "patchSetId": 2
      },
      "lineNbr": 1586,
      "author": {
        "id": 1373864
      },
      "writtenOn": "2019-03-15T23:06:25Z",
      "side": 1,
      "message": "This shows the namespace from which the link is followed, i.e. ns-\u003eget_name(). I\u0027ve moved it up before the for loop.",
      "parentUuid": "841387ae_9fec4b23",
      "range": {
        "startLine": 1585,
        "startChar": 0,
        "endLine": 1586,
        "endChar": 96
      },
      "revId": "9c4906bdd4b2236fa74f2444bfff35a6641613b8",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5caa0b4e_bd1aa75e",
        "filename": "linker/linker.cpp",
        "patchSetId": 2
      },
      "lineNbr": 1607,
      "author": {
        "id": 1132673
      },
      "writtenOn": "2019-03-15T22:43:29Z",
      "side": 1,
      "message": "this as well. already reported inside find_library_in_linked_namespace.",
      "range": {
        "startLine": 1605,
        "startChar": 0,
        "endLine": 1607,
        "endChar": 100
      },
      "revId": "9c4906bdd4b2236fa74f2444bfff35a6641613b8",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "cd334e4d_c9331051",
        "filename": "linker/linker.cpp",
        "patchSetId": 2
      },
      "lineNbr": 1607,
      "author": {
        "id": 1373864
      },
      "writtenOn": "2019-03-15T23:06:25Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "5caa0b4e_bd1aa75e",
      "range": {
        "startLine": 1605,
        "startChar": 0,
        "endLine": 1607,
        "endChar": 100
      },
      "revId": "9c4906bdd4b2236fa74f2444bfff35a6641613b8",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}