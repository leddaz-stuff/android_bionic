{
  "comments": [
    {
      "key": {
        "uuid": "662acbca_a2f2dbfc",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 10,
      "author": {
        "id": 1074628
      },
      "writtenOn": "2020-06-15T23:44:05Z",
      "side": 1,
      "message": "How are you getting them installed into the necessary test cases directory? Are you sure there aren\u0027t just stale files being used by the tests?\n\nI suspect you\u0027d need to add the concept of a prebuilt cc_test_library, then you can adjust the installation paths like the other bionic test libraries.",
      "revId": "ee889416db6aaea6dab0cbf40c72d355c7a2a0d1",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5e34fc9e_0a694352",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 10,
      "author": {
        "id": 1605027
      },
      "writtenOn": "2020-06-16T03:08:39Z",
      "side": 1,
      "message": "To be exact, I tested using the following steps:\n\n1. Ensure /data/local/tmp is empty on-device\n\n2. adb push out/target/product/vsoc_x86/data/nativetest/bionic-loader-test-libs out/target/product/vsoc_x86/data/nativetest/bionic-unit-tests /data/local/tmp\n\n3. adb shell LD_LIBRARY_PATH\u003d/data/local/tmp/libs /data/local/tmp/bionic-unit-tests/bionic-unit-tests\n\n\nAnything else I should double check this with? I assumed LD_LIBRARY_PATH would be good, here, but I can\u0027t remember if the tests might look somewhere else if libraries can\u0027t be found at the LD_LIBRARY_PATH location.",
      "parentUuid": "662acbca_a2f2dbfc",
      "revId": "ee889416db6aaea6dab0cbf40c72d355c7a2a0d1",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ed40a66d_09feaedb",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 10,
      "author": {
        "id": 1074628
      },
      "writtenOn": "2020-06-16T04:22:03Z",
      "side": 1,
      "message": "From your #2:\n\n  out/target/product/vsoc_x86/data/nativetest/bionic-loader-test-libs\n\nThat path no longer includes these binaries, they\u0027d be getting installed into:\n\n  out/target/product/vsoc_x86/system/bin/*.so\n\nSo you were likely pulling stale files from a previous build. The treehugger runs use `m installclean` in between builds which made this fail, but we also have a dangling rule checker that runs on checkbuilds that very explicitly catches this general problem:\n\n Dependencies in out found with no rule to create them:\n  out/target/product/crosshatch/data/nativetest/bionic-loader-test-libs/prebuilt-elf-files/libtest_invalid-empty_shdr_table.so:\n    outputs:\n      out/host/linux-x86/cts/android-cts/testcases/lib32/bionic-loader-test-libs/prebuilt-elf-files/libtest_invalid-empty_shdr_table.so\n      out/host/linux-x86/mts/android-mts/testcases/lib32/bionic-loader-test-libs/prebuilt-elf-files/libtest_invalid-empty_shdr_table.so\n      out/host/linux-x86/vts10/android-vts10/testcases/lib32/bionic-loader-test-libs/prebuilt-elf-files/libtest_invalid-empty_shdr_table.so\n      out/target/product/crosshatch/testcases/CtsBionicTestCases/lib32/bionic-loader-test-libs/prebuilt-elf-files/libtest_invalid-empty_shdr_table.so",
      "parentUuid": "5e34fc9e_0a694352",
      "revId": "ee889416db6aaea6dab0cbf40c72d355c7a2a0d1",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d86a8613_266a6f16",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 10,
      "author": {
        "id": 1074628
      },
      "writtenOn": "2020-06-16T04:24:35Z",
      "side": 1,
      "message": "(we don\u0027t run the dangling rules check all the time because it can get expensive, but we should probably make it easier to run)",
      "parentUuid": "ed40a66d_09feaedb",
      "revId": "ee889416db6aaea6dab0cbf40c72d355c7a2a0d1",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a8f49c1e_61c4a4f4",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 10,
      "author": {
        "id": 1605027
      },
      "writtenOn": "2020-06-16T21:31:32Z",
      "side": 1,
      "message": "I was almost certain I double/triple checked that I was not installing artifacts from previous builds, but alas, now when doing things from scratch, I do see some key tests failing that can be explained by these missing artifacts. How frustrating.\n\nI\u0027m having some difficulty figuring out what rules to use here.\n\n1. I don\u0027t see a way to use `cc_test_library` with prebuilt .so\n\n2. If I use `cc_prebuilt_library_shared`, and still depend on these libraries via `required`, the libraries are not added appropriately in the test data directory\n\n3. If I use `cc_prebuilt_library_shared` and use `data`, I get an error. For example:\n`module \"bionic-unit-tests\" variant \"android_x86\": module source path \"bionic/tests/libtest_invalid-rw_load_segment\" does not exist`\n\n4. If I use `cc_prebuilt_library_shared`, and use the new `data_libs` attribute I\u0027ve implemented pending in aosp/1324844, then the libraries are indeed added adjacent to `bionic-unit-tests`, and not under its sibling directory `bionic-loader-test-libs`, as was done previously. This is true even if I add `relative_install_path: \"bionic-loader-test-libs\"` to the prebuilt library modules; it\u0027s completely ignored. \n\n\nI can\u0027t find a better way to do this, so I\u0027m thinking I\u0027ll need to make sure that `data_libs` respects `relative_install_path` appropriately, and go forward with that. That said, it still looks impossible to place these libraries in the appropriate directory, as `relative_install_path: \"../bionic-loader-test-libs\"` would be necessary, which doesn\u0027t seem possible using relative_install_path.\n\nAny suggestions?",
      "parentUuid": "d86a8613_266a6f16",
      "revId": "ee889416db6aaea6dab0cbf40c72d355c7a2a0d1",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5c56a718_5af1e431",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 10,
      "author": {
        "id": 1074628
      },
      "writtenOn": "2020-06-16T22:10:03Z",
      "side": 1,
      "message": "I think #1 needs to be fixed by adding a cc_prebuilt_test_library (we don\u0027t have prebuilts support for every module type, we\u0027ve generally been adding them as they come up). Then these can follow the same approach taken by the other cc_test_library modules in bionic/tests/libs/Android.bp -- the base install path is the common folder, with relative_install_path to put them where they need to go.\n\n#3 the data property lists files, if you want to reference a module you need to prepend it with \u0027:\u0027 (but you\u0027ll just run into other issues requiring #4)\n\n#4 may be reasonable, but as you mention, requires changes to the install location, and we\u0027d need to change the tests to expect this. I suspect #1 is far simpler, especially since these tests end up packaged up in CTS too, which adds another level of complexity.",
      "parentUuid": "a8f49c1e_61c4a4f4",
      "revId": "ee889416db6aaea6dab0cbf40c72d355c7a2a0d1",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5c503c95_01a7f114",
        "filename": "tests/Android.bp",
        "patchSetId": 2
      },
      "lineNbr": 78,
      "author": {
        "id": 1074628
      },
      "writtenOn": "2020-06-15T23:44:05Z",
      "side": 1,
      "message": "These probably should be libraries, even though the Android.mk marked them as EXECUTABLES",
      "range": {
        "startLine": 78,
        "startChar": 12,
        "endLine": 78,
        "endChar": 18
      },
      "revId": "ee889416db6aaea6dab0cbf40c72d355c7a2a0d1",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "cef818d4_fe858024",
        "filename": "tests/Android.bp",
        "patchSetId": 2
      },
      "lineNbr": 78,
      "author": {
        "id": 1605027
      },
      "writtenOn": "2020-06-16T03:08:39Z",
      "side": 1,
      "message": "Hmm, I guess the difference would be in how they are referenced in the linking step of bionic-unit-tests? Looking at the ninja actions registered from cc_prebuilt_binary (with strip-none), these modules really just do a glorified `cp`.\n\nIf this is incorrect, I\u0027d like to understand why the tests are still passing ðŸ˜Š",
      "parentUuid": "5c503c95_01a7f114",
      "range": {
        "startLine": 78,
        "startChar": 12,
        "endLine": 78,
        "endChar": 18
      },
      "revId": "ee889416db6aaea6dab0cbf40c72d355c7a2a0d1",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "560d3c80_e3803fb7",
        "filename": "tests/Android.bp",
        "patchSetId": 2
      },
      "lineNbr": 78,
      "author": {
        "id": 1074628
      },
      "writtenOn": "2020-06-16T04:22:03Z",
      "side": 1,
      "message": "It\u0027s largely how they\u0027re referenced and where they get installed, but it also controls the defaults on things like `compile_multilib`:\n\n \"first\" for executables, where we only need to install the \"primary\" architecture\n \"both\" for libraries where we may need to install both 32 and 64-bit to support different executables. (We also set this for cc_test executables, as we\u0027d like to test both in many cases).",
      "parentUuid": "cef818d4_fe858024",
      "range": {
        "startLine": 78,
        "startChar": 12,
        "endLine": 78,
        "endChar": 18
      },
      "revId": "ee889416db6aaea6dab0cbf40c72d355c7a2a0d1",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    }
  ]
}