{
  "comments": [
    {
      "key": {
        "uuid": "6dd2dee8_46209256",
        "filename": "libc/bionic/bionic_systrace.cpp",
        "patchSetId": 1
      },
      "lineNbr": 62,
      "author": {
        "id": 1042828
      },
      "writtenOn": "2015-07-23T00:32:31Z",
      "side": 1,
      "message": "How can this fail?  It seems to me that if it does, we\u0027re well into undefined behavior anyway, since we fail to initialize the atomics.  I\u0027m not sure what the point of the test is.",
      "range": {
        "startLine": 62,
        "startChar": 6,
        "endLine": 62,
        "endChar": 21
      },
      "revId": "4bc947669aff320bf9dfef3d88aaf29d0a936457",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ad7a16a8_e97abd30",
        "filename": "libc/bionic/bionic_systrace.cpp",
        "patchSetId": 1
      },
      "lineNbr": 62,
      "author": {
        "id": 1056364
      },
      "writtenOn": "2015-07-23T01:27:15Z",
      "side": 1,
      "message": "I think the check is here because there is no guarantee that __system_property_set() can always success. ScopedTrace can be called each time when there is a race condition in pthread_mutex_lock. And I can\u0027t prove it will not be called before init is started. there is also a \"g_pinfo \u003d\u003d NULL\" in should_trace() below, so it will never touch the atomics if g_pinfo is NULL.",
      "parentUuid": "6dd2dee8_46209256",
      "range": {
        "startLine": 62,
        "startChar": 6,
        "endLine": 62,
        "endChar": 21
      },
      "revId": "4bc947669aff320bf9dfef3d88aaf29d0a936457",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "edc5ee24_753e97eb",
        "filename": "libc/bionic/bionic_systrace.cpp",
        "patchSetId": 1
      },
      "lineNbr": 83,
      "author": {
        "id": 1042828
      },
      "writtenOn": "2015-07-23T00:32:31Z",
      "side": 1,
      "message": "Isn\u0027t there a race here, and you can get inconsistent values of g_serial and g_tags?  Is there a reason not to just use a lock and dispense with the atomics?\n\nGranted none of this is very likely to actually fail in practice.",
      "range": {
        "startLine": 82,
        "startChar": 4,
        "endLine": 83,
        "endChar": 59
      },
      "revId": "4bc947669aff320bf9dfef3d88aaf29d0a936457",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8d7552bb_8837836b",
        "filename": "libc/bionic/bionic_systrace.cpp",
        "patchSetId": 1
      },
      "lineNbr": 83,
      "author": {
        "id": 1056364
      },
      "writtenOn": "2015-07-23T01:27:15Z",
      "side": 1,
      "message": "Yes, although I can\u0027t use pthread_mutex, I can use bionic_lock. I forgot that.",
      "parentUuid": "edc5ee24_753e97eb",
      "range": {
        "startLine": 82,
        "startChar": 4,
        "endLine": 83,
        "endChar": 59
      },
      "revId": "4bc947669aff320bf9dfef3d88aaf29d0a936457",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}