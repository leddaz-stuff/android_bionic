{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "b8e725a6_93dd592a",
        "filename": "libc/platform/bionic/page.h",
        "patchSetId": 6
      },
      "lineNbr": 23,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2023-07-28T20:23:39Z",
      "side": 1,
      "message": "we need to modify sys/user.h globally anyway, so the below code should work once we do that. Is there a reason we want to modify internally in bionic first, and then in the header later?",
      "range": {
        "startLine": 23,
        "startChar": 7,
        "endLine": 23,
        "endChar": 16
      },
      "revId": "ff1fa559934cd9c89a414002bd13f1caea3797c8",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f4757458_b875778b",
        "filename": "libc/platform/bionic/page.h",
        "patchSetId": 6
      },
      "lineNbr": 23,
      "author": {
        "id": 1889140
      },
      "writtenOn": "2023-07-31T14:50:08Z",
      "side": 1,
      "message": "We plan to replace PAGE_SIZE by getpagesize() in AOSP b/282025481. We are doing that in parallel to this cl. In this way, we don\u0027t need to use the product variable in many projects device_page_size_agnostic.",
      "parentUuid": "b8e725a6_93dd592a",
      "range": {
        "startLine": 23,
        "startChar": 7,
        "endLine": 23,
        "endChar": 16
      },
      "revId": "ff1fa559934cd9c89a414002bd13f1caea3797c8",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ffc20bf8_32261feb",
        "filename": "libc/platform/bionic/page.h",
        "patchSetId": 6
      },
      "lineNbr": 23,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2023-07-31T16:46:35Z",
      "side": 1,
      "message": "We\u0027ll need to make device_page_size_agnostic back into a global include flag. We can\u0027t replace PAGE_SIZE by getpagesize by default. We\u0027ll need this change as part of the page agnostic flag bringup, and so it\u0027ll need to be guarded globally by the flag, right? We likely won\u0027t be able to replace PAGE_SIZE globally with getpagesize until that is done. Or do we have agreement to do the global replace now?",
      "parentUuid": "f4757458_b875778b",
      "range": {
        "startLine": 23,
        "startChar": 7,
        "endLine": 23,
        "endChar": 16
      },
      "revId": "ff1fa559934cd9c89a414002bd13f1caea3797c8",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c4cc5937_40e60967",
        "filename": "libc/platform/bionic/page.h",
        "patchSetId": 6
      },
      "lineNbr": 23,
      "author": {
        "id": 1889140
      },
      "writtenOn": "2023-07-31T18:11:27Z",
      "side": 1,
      "message": "In regards to replace PAGE_SIZE for getpagesize(), enh@ mark getpagesize() as constant in aosp/2636854 so we could use it instead of PAGE_SIZE.\n\nAs mentioned in another comment in this cl, there are many replacements that are straightforward and for those, we don\u0027t need to use the TARGET_PAGE_SIZE_AGNOSTIC flag. On the other hand, there are other changes that require more work because the structs are aligned during build time to a page size boundary.\n\nhttps://cs.android.com/android/platform/superproject/main/+/main:system/incremental_delivery/incfs/include/incfs_inline.h;l\u003d275\n\nhttps://cs.android.com/android/platform/superproject/main/+/main:bionic/libc/private/WriteProtected.h;l\u003d32;bpv\u003d0",
      "parentUuid": "ffc20bf8_32261feb",
      "range": {
        "startLine": 23,
        "startChar": 7,
        "endLine": 23,
        "endChar": 16
      },
      "revId": "ff1fa559934cd9c89a414002bd13f1caea3797c8",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b75fe116_307f1904",
        "filename": "libc/platform/bionic/page.h",
        "patchSetId": 6
      },
      "lineNbr": 23,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2023-07-31T18:50:43Z",
      "side": 1,
      "message": "Right, it can\u0027t be used as constexpr in C++ or used in compile-time decisions, even if it is marked as const. So even if we replace it, it will cause some code breakage.\n\nHere is where I\u0027m confused. If you are going to every part of the codebase and switching \"PAGE_SIZE\" with \"getpagesize()\" this will work, since those changes would no longer be part of the page-size agnostic build. However if we want to make these changes as part of the page-size agnostic build, I was thinking that you would use this in *sys/user.h*:\n\n```\n#ifdef DEVICE_PAGE_SIZE_AGNOSTIC\n#define PAGE_SIZE 4096\n#else\n#define PAGE_SIZE getpagesize()\n#endif\n```\n\nIf you did this, then it may not compile (we\u0027d have to fix places locally before merging), but once we did it, it would guarantee everything is updated to use the right page size. This approach would require a global include flag.",
      "parentUuid": "c4cc5937_40e60967",
      "range": {
        "startLine": 23,
        "startChar": 7,
        "endLine": 23,
        "endChar": 16
      },
      "revId": "ff1fa559934cd9c89a414002bd13f1caea3797c8",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6d59537d_ca986abc",
        "filename": "libc/platform/bionic/page.h",
        "patchSetId": 6
      },
      "lineNbr": 23,
      "author": {
        "id": 1535516
      },
      "writtenOn": "2023-07-31T18:52:57Z",
      "side": 1,
      "message": "We really shouldn\u0027t add a global flag, please add the `-D` flag in the module definitions of all modules that need it.",
      "parentUuid": "b75fe116_307f1904",
      "range": {
        "startLine": 23,
        "startChar": 7,
        "endLine": 23,
        "endChar": 16
      },
      "revId": "ff1fa559934cd9c89a414002bd13f1caea3797c8",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d18ff6dc_b2127e1c",
        "filename": "libc/platform/bionic/page.h",
        "patchSetId": 6
      },
      "lineNbr": 23,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2023-07-31T18:58:10Z",
      "side": 1,
      "message": "Would you be okay with merging \u0027#define PAGE_SIZE getpagesize()\u0027 globally in sys/user.h now then? Otherwise, I don\u0027t really see a way to avoid it (maybe you have an idea?), because we need to make something conditional which is included globally.\n\nProgrammatically discovering who can set PAGE_SIZE (due to re-use of this variable) is a difficult problem in itself, so we should avoid it, but more importantly, part of the motivation is also to discover the impact in other downstream or Android-adjacent users. So, we can\u0027t assume we know every module that needs this.",
      "parentUuid": "6d59537d_ca986abc",
      "range": {
        "startLine": 23,
        "startChar": 7,
        "endLine": 23,
        "endChar": 16
      },
      "revId": "ff1fa559934cd9c89a414002bd13f1caea3797c8",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c8a305d2_8993e656",
        "filename": "libdl/Android.bp",
        "patchSetId": 6
      },
      "lineNbr": 53,
      "author": {
        "id": 1535516
      },
      "writtenOn": "2023-07-28T21:01:55Z",
      "side": 1,
      "message": "if you made page_size non-inline and defined in a cpp file, you wouldn\u0027t need to add the define flag to all the clients of page_size.",
      "revId": "ff1fa559934cd9c89a414002bd13f1caea3797c8",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7d029778_86edf8c0",
        "filename": "libdl/Android.bp",
        "patchSetId": 6
      },
      "lineNbr": 53,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2023-07-28T21:16:32Z",
      "side": 1,
      "message": "People use PAGE_SIZE right now as a constant expression, so we can\u0027t do it.\n\nJuan - do you have a bug of cleanups to do when we make page agnostic the default? We should start collecting these so we can remove any technical debt at a later point.",
      "parentUuid": "c8a305d2_8993e656",
      "revId": "ff1fa559934cd9c89a414002bd13f1caea3797c8",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "36bf50f7_f7f76ec5",
        "filename": "libdl/Android.bp",
        "patchSetId": 6
      },
      "lineNbr": 53,
      "author": {
        "id": 1535516
      },
      "writtenOn": "2023-07-28T21:35:53Z",
      "side": 1,
      "message": "Out of curiosity, are you saying that the function call overhead is too slow? That seems surprising. And do you know who \"people\" are? They can\u0027t be 3rd-party app developers because if they were using inlined apis they would not get the correct values on differently-configured devices.",
      "parentUuid": "7d029778_86edf8c0",
      "revId": "ff1fa559934cd9c89a414002bd13f1caea3797c8",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d74097b4_ee894d93",
        "filename": "libdl/Android.bp",
        "patchSetId": 6
      },
      "lineNbr": 53,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2023-07-28T21:39:48Z",
      "side": 1,
      "message": "No, I mean, code relies on the constant being expressed in the header such as `char buf[PAGE_SIZE];`. We need to switch everything over to avoid inline values, which will take a while (we need page agnostic brought up first), and then we can hide the value from the header.",
      "parentUuid": "36bf50f7_f7f76ec5",
      "revId": "ff1fa559934cd9c89a414002bd13f1caea3797c8",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "8666385e_c0bc3bc4",
        "filename": "libdl/Android.bp",
        "patchSetId": 6
      },
      "lineNbr": 53,
      "author": {
        "id": 1535516
      },
      "writtenOn": "2023-07-28T21:41:17Z",
      "side": 1,
      "message": "ah makes sense, thanks.",
      "parentUuid": "d74097b4_ee894d93",
      "revId": "ff1fa559934cd9c89a414002bd13f1caea3797c8",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e45b1fcb_6ca9af77",
        "filename": "libdl/Android.bp",
        "patchSetId": 6
      },
      "lineNbr": 53,
      "author": {
        "id": 1889140
      },
      "writtenOn": "2023-07-31T14:50:08Z",
      "side": 1,
      "message": "As Cole\u0027s suggested, the flag was moved to a cpp file, in this case, getpagesize.cpp and we have now only one flag definition.\n\nIn regards to PAGE_SIZE macro defined in bionic/libc/include/sys/user.h, the occurrence of the macro will be replaced by getpagesize() b/282025481. In this way, we don\u0027t have to use the product variable on those projects. There are cases where the replacement is straightforward:\n\nhttps://cs.android.com/android/platform/superproject/main/+/main:frameworks/native/vulkan/libvulkan/layers_extensions.cpp;l\u003d392\n\nHowever, there are other cases where we need to use the product variable to decide how we will handle the alignment of structs and class definitions in header files:\n\nhttps://cs.android.com/android/platform/superproject/main/+/main:system/incremental_delivery/incfs/include/incfs_inline.h;l\u003d275\n\nhttps://cs.android.com/android/platform/superproject/main/+/main:bionic/libc/private/WriteProtected.h;l\u003d32;bpv\u003d0",
      "parentUuid": "8666385e_c0bc3bc4",
      "revId": "ff1fa559934cd9c89a414002bd13f1caea3797c8",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}