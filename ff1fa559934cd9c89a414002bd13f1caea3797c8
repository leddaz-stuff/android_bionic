{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "b8e725a6_93dd592a",
        "filename": "libc/platform/bionic/page.h",
        "patchSetId": 6
      },
      "lineNbr": 23,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2023-07-28T20:23:39Z",
      "side": 1,
      "message": "we need to modify sys/user.h globally anyway, so the below code should work once we do that. Is there a reason we want to modify internally in bionic first, and then in the header later?",
      "range": {
        "startLine": 23,
        "startChar": 7,
        "endLine": 23,
        "endChar": 16
      },
      "revId": "ff1fa559934cd9c89a414002bd13f1caea3797c8",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f4757458_b875778b",
        "filename": "libc/platform/bionic/page.h",
        "patchSetId": 6
      },
      "lineNbr": 23,
      "author": {
        "id": 1889140
      },
      "writtenOn": "2023-07-31T14:50:08Z",
      "side": 1,
      "message": "We plan to replace PAGE_SIZE by getpagesize() in AOSP b/282025481. We are doing that in parallel to this cl. In this way, we don\u0027t need to use the product variable in many projects device_page_size_agnostic.",
      "parentUuid": "b8e725a6_93dd592a",
      "range": {
        "startLine": 23,
        "startChar": 7,
        "endLine": 23,
        "endChar": 16
      },
      "revId": "ff1fa559934cd9c89a414002bd13f1caea3797c8",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ffc20bf8_32261feb",
        "filename": "libc/platform/bionic/page.h",
        "patchSetId": 6
      },
      "lineNbr": 23,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2023-07-31T16:46:35Z",
      "side": 1,
      "message": "We\u0027ll need to make device_page_size_agnostic back into a global include flag. We can\u0027t replace PAGE_SIZE by getpagesize by default. We\u0027ll need this change as part of the page agnostic flag bringup, and so it\u0027ll need to be guarded globally by the flag, right? We likely won\u0027t be able to replace PAGE_SIZE globally with getpagesize until that is done. Or do we have agreement to do the global replace now?",
      "parentUuid": "f4757458_b875778b",
      "range": {
        "startLine": 23,
        "startChar": 7,
        "endLine": 23,
        "endChar": 16
      },
      "revId": "ff1fa559934cd9c89a414002bd13f1caea3797c8",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c4cc5937_40e60967",
        "filename": "libc/platform/bionic/page.h",
        "patchSetId": 6
      },
      "lineNbr": 23,
      "author": {
        "id": 1889140
      },
      "writtenOn": "2023-07-31T18:11:27Z",
      "side": 1,
      "message": "In regards to replace PAGE_SIZE for getpagesize(), enh@ mark getpagesize() as constant in aosp/2636854 so we could use it instead of PAGE_SIZE.\n\nAs mentioned in another comment in this cl, there are many replacements that are straightforward and for those, we don\u0027t need to use the TARGET_PAGE_SIZE_AGNOSTIC flag. On the other hand, there are other changes that require more work because the structs are aligned during build time to a page size boundary.\n\nhttps://cs.android.com/android/platform/superproject/main/+/main:system/incremental_delivery/incfs/include/incfs_inline.h;l\u003d275\n\nhttps://cs.android.com/android/platform/superproject/main/+/main:bionic/libc/private/WriteProtected.h;l\u003d32;bpv\u003d0",
      "parentUuid": "ffc20bf8_32261feb",
      "range": {
        "startLine": 23,
        "startChar": 7,
        "endLine": 23,
        "endChar": 16
      },
      "revId": "ff1fa559934cd9c89a414002bd13f1caea3797c8",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b75fe116_307f1904",
        "filename": "libc/platform/bionic/page.h",
        "patchSetId": 6
      },
      "lineNbr": 23,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2023-07-31T18:50:43Z",
      "side": 1,
      "message": "Right, it can\u0027t be used as constexpr in C++ or used in compile-time decisions, even if it is marked as const. So even if we replace it, it will cause some code breakage.\n\nHere is where I\u0027m confused. If you are going to every part of the codebase and switching \"PAGE_SIZE\" with \"getpagesize()\" this will work, since those changes would no longer be part of the page-size agnostic build. However if we want to make these changes as part of the page-size agnostic build, I was thinking that you would use this in *sys/user.h*:\n\n```\n#ifdef DEVICE_PAGE_SIZE_AGNOSTIC\n#define PAGE_SIZE 4096\n#else\n#define PAGE_SIZE getpagesize()\n#endif\n```\n\nIf you did this, then it may not compile (we\u0027d have to fix places locally before merging), but once we did it, it would guarantee everything is updated to use the right page size. This approach would require a global include flag.",
      "parentUuid": "c4cc5937_40e60967",
      "range": {
        "startLine": 23,
        "startChar": 7,
        "endLine": 23,
        "endChar": 16
      },
      "revId": "ff1fa559934cd9c89a414002bd13f1caea3797c8",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6d59537d_ca986abc",
        "filename": "libc/platform/bionic/page.h",
        "patchSetId": 6
      },
      "lineNbr": 23,
      "author": {
        "id": 1535516
      },
      "writtenOn": "2023-07-31T18:52:57Z",
      "side": 1,
      "message": "We really shouldn\u0027t add a global flag, please add the `-D` flag in the module definitions of all modules that need it.",
      "parentUuid": "b75fe116_307f1904",
      "range": {
        "startLine": 23,
        "startChar": 7,
        "endLine": 23,
        "endChar": 16
      },
      "revId": "ff1fa559934cd9c89a414002bd13f1caea3797c8",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d18ff6dc_b2127e1c",
        "filename": "libc/platform/bionic/page.h",
        "patchSetId": 6
      },
      "lineNbr": 23,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2023-07-31T18:58:10Z",
      "side": 1,
      "message": "Would you be okay with merging \u0027#define PAGE_SIZE getpagesize()\u0027 globally in sys/user.h now then? Otherwise, I don\u0027t really see a way to avoid it (maybe you have an idea?), because we need to make something conditional which is included globally.\n\nProgrammatically discovering who can set PAGE_SIZE (due to re-use of this variable) is a difficult problem in itself, so we should avoid it, but more importantly, part of the motivation is also to discover the impact in other downstream or Android-adjacent users. So, we can\u0027t assume we know every module that needs this.",
      "parentUuid": "6d59537d_ca986abc",
      "range": {
        "startLine": 23,
        "startChar": 7,
        "endLine": 23,
        "endChar": 16
      },
      "revId": "ff1fa559934cd9c89a414002bd13f1caea3797c8",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "69e64dcf_c9aa7c47",
        "filename": "libc/platform/bionic/page.h",
        "patchSetId": 6
      },
      "lineNbr": 23,
      "author": {
        "id": 1535516
      },
      "writtenOn": "2023-07-31T19:02:12Z",
      "side": 1,
      "message": "I don\u0027t think I have the full context, but `#define PAGE_SIZE getpagesize()` sounds ok to me.",
      "parentUuid": "d18ff6dc_b2127e1c",
      "range": {
        "startLine": 23,
        "startChar": 7,
        "endLine": 23,
        "endChar": 16
      },
      "revId": "ff1fa559934cd9c89a414002bd13f1caea3797c8",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "57bacd04_a5f560a1",
        "filename": "libc/platform/bionic/page.h",
        "patchSetId": 6
      },
      "lineNbr": 23,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2023-07-31T19:17:35Z",
      "side": 1,
      "message": "So, imagine we have some code somewhere in the platform that does page align with PAGE_SIZE or std::array\u003c*, PAGE_SIZE\u003e etc.. We have to go through and re-write this code to work. I think it would make more sense to switch everything over conditionally, so we can do whollistic performance analysis about the change. That will be more efficient, and give us greater assurance that we\u0027re able to maintain the performance gain while we move patches from the side branch.",
      "parentUuid": "69e64dcf_c9aa7c47",
      "range": {
        "startLine": 23,
        "startChar": 7,
        "endLine": 23,
        "endChar": 16
      },
      "revId": "ff1fa559934cd9c89a414002bd13f1caea3797c8",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "eac702f4_6d749b52",
        "filename": "libc/platform/bionic/page.h",
        "patchSetId": 6
      },
      "lineNbr": 23,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2023-08-01T00:19:59Z",
      "side": 1,
      "message": "\u003e Would you be okay with merging \u0027#define PAGE_SIZE getpagesize()\u0027 globally in sys/user.h now then? Otherwise, I don\u0027t really see a way to avoid it (maybe you have an idea?), because we need to make something conditional which is included globally.\n\ndefinitely not... like we\u0027ve always said: \"no ndk-breaking changes until/unless 16KiB pages gets past the experiment stage\".\n\n\u003e enh@ mark getpagesize() as constant in aosp/2636854 so we could use it instead of PAGE_SIZE\n\n(no, that was so that zhangkelvin could do a computation that referenced getpagesize() two or three times without having to invent a local variable --- _if_ you\u0027re using getpagesize() in a function, the compiler can make sure you only pay for it once. but like smoreland said, you\u0027re still paying, and it\u0027s very much not `constexpr`, which is the real issue with the `#define PAGE_SIZE getpagesize()` suggestion.)",
      "parentUuid": "57bacd04_a5f560a1",
      "range": {
        "startLine": 23,
        "startChar": 7,
        "endLine": 23,
        "endChar": 16
      },
      "revId": "ff1fa559934cd9c89a414002bd13f1caea3797c8",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e20fdb89_a0d4dcfc",
        "filename": "libc/platform/bionic/page.h",
        "patchSetId": 6
      },
      "lineNbr": 23,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2023-08-01T00:21:54Z",
      "side": 1,
      "message": "So we need a global cflag.",
      "parentUuid": "eac702f4_6d749b52",
      "range": {
        "startLine": 23,
        "startChar": 7,
        "endLine": 23,
        "endChar": 16
      },
      "revId": "ff1fa559934cd9c89a414002bd13f1caea3797c8",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "73cd4ef8_551eaae1",
        "filename": "libc/platform/bionic/page.h",
        "patchSetId": 6
      },
      "lineNbr": 23,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2023-08-01T00:22:46Z",
      "side": 1,
      "message": "Also Elliott, this discussion is kind of orthogonal to this CL. What\u0027s the -2 on this CL for?",
      "parentUuid": "e20fdb89_a0d4dcfc",
      "range": {
        "startLine": 23,
        "startChar": 7,
        "endLine": 23,
        "endChar": 16
      },
      "revId": "ff1fa559934cd9c89a414002bd13f1caea3797c8",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "12d7bfcc_a9fcd152",
        "filename": "libc/platform/bionic/page.h",
        "patchSetId": 6
      },
      "lineNbr": 23,
      "author": {
        "id": 1889140
      },
      "writtenOn": "2023-08-01T00:37:58Z",
      "side": 1,
      "message": "Thanks Elliot for the clarification. We won\u0027t replace PAGE_SIZE for getpagesize() if the product variable `device_page_size_agnostic` is not set. Being said that, would you be ok approving this cl? or which changes do we need to make?\n\n\nBtw, in patch #6, we have the conditional check in the inline function page_size() instead of `getpagesize()` function to avoid adding the product variable in several rules. See\n\nhttps://android-review.git.corp.google.com/c/platform/bionic/+/2675944/6",
      "parentUuid": "73cd4ef8_551eaae1",
      "range": {
        "startLine": 23,
        "startChar": 7,
        "endLine": 23,
        "endChar": 16
      },
      "revId": "ff1fa559934cd9c89a414002bd13f1caea3797c8",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "83362169_0af20576",
        "filename": "libc/platform/bionic/page.h",
        "patchSetId": 6
      },
      "lineNbr": 23,
      "author": {
        "id": 1535516
      },
      "writtenOn": "2023-08-01T00:54:20Z",
      "side": 1,
      "message": "you can at least use a genrule to generate page.h based on the product variable instead of adding a global flag.",
      "parentUuid": "12d7bfcc_a9fcd152",
      "range": {
        "startLine": 23,
        "startChar": 7,
        "endLine": 23,
        "endChar": 16
      },
      "revId": "ff1fa559934cd9c89a414002bd13f1caea3797c8",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a669f477_89c06202",
        "filename": "libc/platform/bionic/page.h",
        "patchSetId": 6
      },
      "lineNbr": 23,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2023-08-03T19:12:43Z",
      "side": 1,
      "message": "\u003e Btw, in patch #6, we have the conditional check in the inline function page_size() instead of getpagesize() function to avoid adding the product variable in several rules. See\n\nyes, but it regresses the actual shipping configuration in the way i\u0027ve explained before --- page_size() is inline (and so compiles away to nothing), which is not true of getpagesize().\n\n\u003e you can at least use a genrule to generate page.h based on the product variable instead of adding a global flag.\n\nyeah, that might be a better solution --- the NDK won\u0027t be affected because its sysroot won\u0027t be coming from a build that has the agnostic thing set. (although i still haven\u0027t understood why the agnostic builds can\u0027t just -D__BIONIC_NO_PAGE_SIZE_MACRO like i\u0027ve suggested before --- _that\u0027s_ an \"ndk affecting\" change that i think is fine because it\u0027s opt-in. \"doctor, my finger hurts when i do this...\")",
      "parentUuid": "83362169_0af20576",
      "range": {
        "startLine": 23,
        "startChar": 7,
        "endLine": 23,
        "endChar": 16
      },
      "revId": "ff1fa559934cd9c89a414002bd13f1caea3797c8",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0631f377_94392d44",
        "filename": "libc/platform/bionic/page.h",
        "patchSetId": 6
      },
      "lineNbr": 23,
      "author": {
        "id": 1067098
      },
      "writtenOn": "2023-08-03T19:24:57Z",
      "side": 1,
      "message": "FWIW, I would prefer -D__BIONIC_NO_PAGE_SIZE_MACRO instead of a genrule if possible. Genrules on header files cause problems for cross-referencing tools in text editors (e.g. finding the definition of PAGE_SIZE will take you to the generated file that you don\u0027t want to edit instead of the source file that you want to edit).",
      "parentUuid": "a669f477_89c06202",
      "range": {
        "startLine": 23,
        "startChar": 7,
        "endLine": 23,
        "endChar": 16
      },
      "revId": "ff1fa559934cd9c89a414002bd13f1caea3797c8",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "723c52b5_9a7bd320",
        "filename": "libc/platform/bionic/page.h",
        "patchSetId": 6
      },
      "lineNbr": 23,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2023-08-03T19:38:38Z",
      "side": 1,
      "message": "If I understand correctly, the ask on this CL is to keep page_size the same when the cflag is set.\n\n__BIONIC_NO_PAGE_SIZE_MACRO is about what we would do after this CL or in a separate CL. I assume TARGET_PAGE_SIZE_AGNOSTIC is okay for the bionic internal change, or are you requesting that it is renamed to __BIONIC_NO_PAGE_SIZE_MACRO?",
      "parentUuid": "0631f377_94392d44",
      "range": {
        "startLine": 23,
        "startChar": 7,
        "endLine": 23,
        "endChar": 16
      },
      "revId": "ff1fa559934cd9c89a414002bd13f1caea3797c8",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "cbfb1960_f5c1fc82",
        "filename": "libc/platform/bionic/page.h",
        "patchSetId": 6
      },
      "lineNbr": 23,
      "author": {
        "id": 1889140
      },
      "writtenOn": "2023-08-03T19:52:33Z",
      "side": 1,
      "message": "| yes, but it regresses the actual shipping configuration in the way i\u0027ve explained before --- page_size() is inline (and so compiles away to nothing), which is not true of getpagesize().\n\nSo the ask is to use the patch #6, which it uses the page_size() inline function, right?\n\nhttps://android-review.git.corp.google.com/c/platform/bionic/+/2675944/6\n\nOnce that it is confirmed, it\u0027ll do the change.",
      "parentUuid": "723c52b5_9a7bd320",
      "range": {
        "startLine": 23,
        "startChar": 7,
        "endLine": 23,
        "endChar": 16
      },
      "revId": "ff1fa559934cd9c89a414002bd13f1caea3797c8",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6beaefc5_3d43c7df",
        "filename": "libc/platform/bionic/page.h",
        "patchSetId": 6
      },
      "lineNbr": 23,
      "author": {
        "id": 1889140
      },
      "writtenOn": "2023-08-03T20:00:55Z",
      "side": 1,
      "message": "```\nyeah, that might be a better solution --- the NDK won\u0027t be affected because its\nsysroot won\u0027t be coming from a build that has the agnostic thing set. (although i \nstill haven\u0027t understood why the agnostic builds can\u0027t just -\nD__BIONIC_NO_PAGE_SIZE_MACRO like i\u0027ve suggested before --- that\u0027s an \"ndk \naffecting\" change that i think is fine because it\u0027s opt-in. \"doctor, my finger\nhurts when i do this...\")\n```\n\nThe agnostic builds can use -DTARGET_PAGE_SIZE_AGNOSTIC macro. The point of contention is whether to define it as a GLOBAL variable. Currently it is defined as a product variable. As a product variable, we need to define it in every Android.bp where the bionic header is used, which it is error prone. It is GLOBAL variable, we just need to make sure that it is propagated to bazel and soong and use it without modifying any Android.bp.",
      "parentUuid": "cbfb1960_f5c1fc82",
      "range": {
        "startLine": 23,
        "startChar": 7,
        "endLine": 23,
        "endChar": 16
      },
      "revId": "ff1fa559934cd9c89a414002bd13f1caea3797c8",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7af521e2_61083cd0",
        "filename": "libc/platform/bionic/page.h",
        "patchSetId": 6
      },
      "lineNbr": 23,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2023-08-03T22:31:02Z",
      "side": 1,
      "message": "\u003e FWIW, I would prefer -D__BIONIC_NO_PAGE_SIZE_MACRO instead of a genrule if possible. \n\nto be clear: me too. i have no idea why the systems team have been resistant to this for so long, given that it seems like the least worst option all round.\n\n\u003e I assume `TARGET_PAGE_SIZE_AGNOSTIC` is okay for the bionic internal change, or are you requesting that it is renamed to `__BIONIC_NO_PAGE_SIZE_MACRO`?\n\nwhy would we want two macros for the same thing? (if they\u0027re _not_ the same, please explain how not, because that might be why we\u0027ve been failing to communicate here for so long!)\n\nto perhaps clarify my preference for this macro (since that might seem arbitrary without background) --- \"a `__BIONIC_` macro is how you configure bionic\". i understand (i think) that you want some `TARGET_`something for AOSP, but that\u0027s not suitable for (say) apps, so bionic will need to have a `__BIONIC_`something anyway, and having _two_ things in bionic that mean the same thing is a bad idea.\n\n(the __BIONIC_ thing also gets you in the NDK as soon as possible [which is still \"next year\", but ykwim,] so anyone who wanted to opt-in to this could start doing so without needing to hack their ndk locally.)",
      "parentUuid": "6beaefc5_3d43c7df",
      "range": {
        "startLine": 23,
        "startChar": 7,
        "endLine": 23,
        "endChar": 16
      },
      "revId": "ff1fa559934cd9c89a414002bd13f1caea3797c8",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c8a305d2_8993e656",
        "filename": "libdl/Android.bp",
        "patchSetId": 6
      },
      "lineNbr": 53,
      "author": {
        "id": 1535516
      },
      "writtenOn": "2023-07-28T21:01:55Z",
      "side": 1,
      "message": "if you made page_size non-inline and defined in a cpp file, you wouldn\u0027t need to add the define flag to all the clients of page_size.",
      "revId": "ff1fa559934cd9c89a414002bd13f1caea3797c8",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7d029778_86edf8c0",
        "filename": "libdl/Android.bp",
        "patchSetId": 6
      },
      "lineNbr": 53,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2023-07-28T21:16:32Z",
      "side": 1,
      "message": "People use PAGE_SIZE right now as a constant expression, so we can\u0027t do it.\n\nJuan - do you have a bug of cleanups to do when we make page agnostic the default? We should start collecting these so we can remove any technical debt at a later point.",
      "parentUuid": "c8a305d2_8993e656",
      "revId": "ff1fa559934cd9c89a414002bd13f1caea3797c8",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "36bf50f7_f7f76ec5",
        "filename": "libdl/Android.bp",
        "patchSetId": 6
      },
      "lineNbr": 53,
      "author": {
        "id": 1535516
      },
      "writtenOn": "2023-07-28T21:35:53Z",
      "side": 1,
      "message": "Out of curiosity, are you saying that the function call overhead is too slow? That seems surprising. And do you know who \"people\" are? They can\u0027t be 3rd-party app developers because if they were using inlined apis they would not get the correct values on differently-configured devices.",
      "parentUuid": "7d029778_86edf8c0",
      "revId": "ff1fa559934cd9c89a414002bd13f1caea3797c8",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d74097b4_ee894d93",
        "filename": "libdl/Android.bp",
        "patchSetId": 6
      },
      "lineNbr": 53,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2023-07-28T21:39:48Z",
      "side": 1,
      "message": "No, I mean, code relies on the constant being expressed in the header such as `char buf[PAGE_SIZE];`. We need to switch everything over to avoid inline values, which will take a while (we need page agnostic brought up first), and then we can hide the value from the header.",
      "parentUuid": "36bf50f7_f7f76ec5",
      "revId": "ff1fa559934cd9c89a414002bd13f1caea3797c8",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "8666385e_c0bc3bc4",
        "filename": "libdl/Android.bp",
        "patchSetId": 6
      },
      "lineNbr": 53,
      "author": {
        "id": 1535516
      },
      "writtenOn": "2023-07-28T21:41:17Z",
      "side": 1,
      "message": "ah makes sense, thanks.",
      "parentUuid": "d74097b4_ee894d93",
      "revId": "ff1fa559934cd9c89a414002bd13f1caea3797c8",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e45b1fcb_6ca9af77",
        "filename": "libdl/Android.bp",
        "patchSetId": 6
      },
      "lineNbr": 53,
      "author": {
        "id": 1889140
      },
      "writtenOn": "2023-07-31T14:50:08Z",
      "side": 1,
      "message": "As Cole\u0027s suggested, the flag was moved to a cpp file, in this case, getpagesize.cpp and we have now only one flag definition.\n\nIn regards to PAGE_SIZE macro defined in bionic/libc/include/sys/user.h, the occurrence of the macro will be replaced by getpagesize() b/282025481. In this way, we don\u0027t have to use the product variable on those projects. There are cases where the replacement is straightforward:\n\nhttps://cs.android.com/android/platform/superproject/main/+/main:frameworks/native/vulkan/libvulkan/layers_extensions.cpp;l\u003d392\n\nHowever, there are other cases where we need to use the product variable to decide how we will handle the alignment of structs and class definitions in header files:\n\nhttps://cs.android.com/android/platform/superproject/main/+/main:system/incremental_delivery/incfs/include/incfs_inline.h;l\u003d275\n\nhttps://cs.android.com/android/platform/superproject/main/+/main:bionic/libc/private/WriteProtected.h;l\u003d32;bpv\u003d0",
      "parentUuid": "8666385e_c0bc3bc4",
      "revId": "ff1fa559934cd9c89a414002bd13f1caea3797c8",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d40a9e87_eee6c42a",
        "filename": "libdl/Android.bp",
        "patchSetId": 6
      },
      "lineNbr": 53,
      "author": {
        "id": 1889140
      },
      "writtenOn": "2023-08-03T17:12:33Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "e45b1fcb_6ca9af77",
      "revId": "ff1fa559934cd9c89a414002bd13f1caea3797c8",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}