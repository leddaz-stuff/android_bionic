{
  "comments": [
    {
      "key": {
        "uuid": "f0268cf7_8d064540",
        "filename": "tests/compile_test.cpp",
        "patchSetId": 1
      },
      "lineNbr": 6,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2014-10-03T21:39:07Z",
      "side": 1,
      "message": "it\u0027s a bit misleading that you\u0027ve deliberately inserted an irrelevant error in a test that\u0027s supposed to test FORTIFY but which we don\u0027t currently pass...",
      "revId": "b97228eb5822e79d6ac55146590c5014357b0239",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "30fbc487_8fdf5968",
        "filename": "tests/file-check-clang++",
        "patchSetId": 1
      },
      "lineNbr": 2,
      "author": {
        "id": 1041673
      },
      "writtenOn": "2014-10-03T21:19:43Z",
      "side": 1,
      "message": "what is FileCheck?",
      "revId": "b97228eb5822e79d6ac55146590c5014357b0239",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "30fbc487_4ff571e4",
        "filename": "tests/file-check-clang++",
        "patchSetId": 1
      },
      "lineNbr": 2,
      "author": {
        "id": 1043845
      },
      "writtenOn": "2014-10-03T21:21:47Z",
      "side": 1,
      "message": "It\u0027s a tool that comes from LLVM: http://llvm.org/docs/CommandGuide/FileCheck.html\n\nEssentially, it allows us to match the output (stdout+stderr, in this case) of compiling the file to the checks that are in the file.",
      "parentUuid": "30fbc487_8fdf5968",
      "revId": "b97228eb5822e79d6ac55146590c5014357b0239",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "50ee78c7_01897a48",
        "filename": "tests/file-check-clang++",
        "patchSetId": 1
      },
      "lineNbr": 2,
      "author": {
        "id": 1003981
      },
      "writtenOn": "2014-10-03T21:45:37Z",
      "side": 1,
      "message": "ANDROID_HOST_OUT imay be not set. It\u0027s set only if you run lunch. Our build server doesn\u0027t run lunch.\nYou should pass it in from makefile.",
      "revId": "b97228eb5822e79d6ac55146590c5014357b0239",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "50ee78c7_0125fa9f",
        "filename": "tests/file-check-clang++",
        "patchSetId": 1
      },
      "lineNbr": 2,
      "author": {
        "id": 1003981
      },
      "writtenOn": "2014-10-03T21:52:50Z",
      "side": 1,
      "message": "Stephen, can we check in FileCheck as prebuilt to prebults/clang? so that you don\u0027t need to worry about the dependency.",
      "revId": "b97228eb5822e79d6ac55146590c5014357b0239",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "30a8245b_01527d5f",
        "filename": "tests/file-check-clang++",
        "patchSetId": 1
      },
      "lineNbr": 2,
      "author": {
        "id": 1043845
      },
      "writtenOn": "2014-10-03T23:04:21Z",
      "side": 1,
      "message": "Yes, I hadn\u0027t been passing things from the command line because I hadn\u0027t thought of a clean way to do it, but I think I have now.",
      "parentUuid": "50ee78c7_01897a48",
      "revId": "b97228eb5822e79d6ac55146590c5014357b0239",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "30a8245b_c15b0579",
        "filename": "tests/file-check-clang++",
        "patchSetId": 1
      },
      "lineNbr": 2,
      "author": {
        "id": 1043845
      },
      "writtenOn": "2014-10-03T23:04:21Z",
      "side": 1,
      "message": "Would this eliminate the issue with ANDROID_HOST_OUT? Would it be placed somewhere that FileCheck is then on the path? (I think it actually is on the path the way I have things set up now, but don\u0027t know if that\u0027s because of lunch).",
      "parentUuid": "50ee78c7_0125fa9f",
      "revId": "b97228eb5822e79d6ac55146590c5014357b0239",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f0268cf7_0d2255cd",
        "filename": "tests/file-check-clang++",
        "patchSetId": 1
      },
      "lineNbr": 3,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2014-10-03T21:39:07Z",
      "side": 1,
      "message": "isn\u0027t there a way to avoid hard-coding the version like this? can\u0027t we pass something from the makefile?",
      "revId": "b97228eb5822e79d6ac55146590c5014357b0239",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "50ee78c7_e1170e64",
        "filename": "tests/file-check-g++",
        "patchSetId": 1
      },
      "lineNbr": 3,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2014-10-03T21:39:07Z",
      "side": 1,
      "message": "what about the second arch?",
      "revId": "b97228eb5822e79d6ac55146590c5014357b0239",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}