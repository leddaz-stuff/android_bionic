{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "dcce4854_4b33e061",
        "filename": "libc/include/resolv.h",
        "patchSetId": 1
      },
      "lineNbr": 58,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2023-03-08T22:15:21Z",
      "side": 1,
      "message": "i don\u0027t think so? doesn\u0027t this immediately fail with an error if you pass null?",
      "range": {
        "startLine": 58,
        "startChar": 205,
        "endLine": 58,
        "endChar": 214
      },
      "revId": "5d68feb6209700b71b01942d7d267ff00ecea331",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a5598c48_ae657656",
        "filename": "libc/include/resolv.h",
        "patchSetId": 1
      },
      "lineNbr": 58,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2023-03-08T22:15:21Z",
      "side": 1,
      "message": "isn\u0027t this just unused?",
      "range": {
        "startLine": 58,
        "startChar": 154,
        "endLine": 58,
        "endChar": 183
      },
      "revId": "5d68feb6209700b71b01942d7d267ff00ecea331",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3490503d_c85d4d86",
        "filename": "libc/include/resolv.h",
        "patchSetId": 1
      },
      "lineNbr": 58,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2023-03-08T22:15:21Z",
      "side": 1,
      "message": "doesn\u0027t this immediately get passed to dn_comp()?",
      "range": {
        "startLine": 58,
        "startChar": 42,
        "endLine": 58,
        "endChar": 50
      },
      "revId": "5d68feb6209700b71b01942d7d267ff00ecea331",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d4fc41b4_145c07da",
        "filename": "libc/include/resolv.h",
        "patchSetId": 1
      },
      "lineNbr": 58,
      "author": {
        "id": 1890456
      },
      "writtenOn": "2023-03-09T00:51:41Z",
      "side": 1,
      "message": "Yes,\nhttp://cs/android/bionic/libc/dns/nameser/ns_name.c;l\u003d231;rcl\u003db36bf2f94365a474b36b3201f2ec190f3e63f9e5\nOr it will be printed out:http://cs/android/bionic/libc/dns/resolv/res_mkquery.c;l\u003d135-136;rcl\u003db36bf2f94365a474b36b3201f2ec190f3e63f9e5\nSo it can\u0027t be null?",
      "parentUuid": "3490503d_c85d4d86",
      "range": {
        "startLine": 58,
        "startChar": 42,
        "endLine": 58,
        "endChar": 50
      },
      "revId": "5d68feb6209700b71b01942d7d267ff00ecea331",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "50fc814e_1b1ccd1f",
        "filename": "libc/include/resolv.h",
        "patchSetId": 1
      },
      "lineNbr": 58,
      "author": {
        "id": 1890456
      },
      "writtenOn": "2023-03-09T00:54:37Z",
      "side": 1,
      "message": "ohh yes, it should be `nullable`.",
      "parentUuid": "a5598c48_ae657656",
      "range": {
        "startLine": 58,
        "startChar": 154,
        "endLine": 58,
        "endChar": 183
      },
      "revId": "5d68feb6209700b71b01942d7d267ff00ecea331",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1dee897b_5cc2af54",
        "filename": "libc/include/resolv.h",
        "patchSetId": 1
      },
      "lineNbr": 58,
      "author": {
        "id": 1890456
      },
      "writtenOn": "2023-03-09T00:54:37Z",
      "side": 1,
      "message": "If `DEBUG`, it can be null.\nOtherwise, line 141 helps prevent failure.\nhttp://cs/android/bionic/libc/dns/resolv/res_mkquery.c;l\u003d133-142;rcl\u003db36bf2f94365a474b36b3201f2ec190f3e63f9e5",
      "parentUuid": "dcce4854_4b33e061",
      "range": {
        "startLine": 58,
        "startChar": 205,
        "endLine": 58,
        "endChar": 214
      },
      "revId": "5d68feb6209700b71b01942d7d267ff00ecea331",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6c13e5a2_c4898d01",
        "filename": "libc/include/resolv.h",
        "patchSetId": 1
      },
      "lineNbr": 58,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2023-03-09T22:07:35Z",
      "side": 1,
      "message": "someone called zijunzhao marked that argument to dn_comp() as _Nonnull, so i think so :-)",
      "parentUuid": "d4fc41b4_145c07da",
      "range": {
        "startLine": 58,
        "startChar": 42,
        "endLine": 58,
        "endChar": 50
      },
      "revId": "5d68feb6209700b71b01942d7d267ff00ecea331",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8fc28b9d_f1f5b34e",
        "filename": "libc/include/resolv.h",
        "patchSetId": 1
      },
      "lineNbr": 58,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2023-03-09T22:07:35Z",
      "side": 1,
      "message": "yeah, but L141 is what i meant by \"immediately fail with an error\" ... there\u0027s no _useful_ call to this function where this parameter is null, right? it\u0027s just an expensive way to get `-1`? and our theory so far in other headers (which i think we\u0027ll keep using until/unless users explain why we\u0027re wrong, or we work it out ourselves) is that we\u0027re annotating these based on \"does it make _sense_?\" not just \"will it _crash_?\".",
      "parentUuid": "1dee897b_5cc2af54",
      "range": {
        "startLine": 58,
        "startChar": 205,
        "endLine": 58,
        "endChar": 214
      },
      "revId": "5d68feb6209700b71b01942d7d267ff00ecea331",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}