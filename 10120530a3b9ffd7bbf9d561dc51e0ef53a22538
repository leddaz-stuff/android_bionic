{
  "comments": [
    {
      "key": {
        "uuid": "AAABAn///Xw\u003d",
        "filename": "libc/netbsd/resolv/res_cache.c",
        "patchSetId": 3
      },
      "lineNbr": 1561,
      "author": {
        "id": 1002609
      },
      "writtenOn": "2011-05-19T21:23:09Z",
      "side": 1,
      "message": "You should say that the first element is not a \"real\" element in that it has no cache.  It is only used as a placeholder for the list lock (all other locks in the array are wasted) and the default interface name.\n\nI wonder why you don\u0027t just have a separate default interface name string and mutex for the list and clean up the data structure, but I guess as long as this is documented clearly it\u0027s ok.",
      "revId": "10120530a3b9ffd7bbf9d561dc51e0ef53a22538",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAABBn///7M\u003d",
        "filename": "libc/netbsd/resolv/res_cache.c",
        "patchSetId": 3
      },
      "lineNbr": 1561,
      "author": {
        "id": 1004783
      },
      "writtenOn": "2011-05-24T06:49:46Z",
      "side": 1,
      "message": "I\u0027ll update the comment to better reflect how it\u0027s intended to work. \n\nThe intention is to use the first element as a placeholder for the default interface and the lock for the list. The other locks in the array are used when working against a specific element in the array e.g. in _resolv_set_nameservers_for_iface",
      "parentUuid": "AAABAn///Xw\u003d",
      "revId": "10120530a3b9ffd7bbf9d561dc51e0ef53a22538",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAABAn///FM\u003d",
        "filename": "libc/netbsd/resolv/res_cache.c",
        "patchSetId": 3
      },
      "lineNbr": 1594,
      "author": {
        "id": 1002609
      },
      "writtenOn": "2011-05-19T21:23:09Z",
      "side": 1,
      "message": "call it ifname.  Sometimes it\u0027s not the default_ifname, so let\u0027s not call it that.",
      "revId": "10120530a3b9ffd7bbf9d561dc51e0ef53a22538",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAABBn///7I\u003d",
        "filename": "libc/netbsd/resolv/res_cache.c",
        "patchSetId": 3
      },
      "lineNbr": 1594,
      "author": {
        "id": 1004783
      },
      "writtenOn": "2011-05-24T06:49:46Z",
      "side": 1,
      "message": "I\u0027ll will update",
      "parentUuid": "AAABAn///FM\u003d",
      "revId": "10120530a3b9ffd7bbf9d561dc51e0ef53a22538",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAABAn///FU\u003d",
        "filename": "libc/netbsd/resolv/res_cache.c",
        "patchSetId": 3
      },
      "lineNbr": 1597,
      "author": {
        "id": 1002609
      },
      "writtenOn": "2011-05-19T21:23:09Z",
      "side": 1,
      "message": "if (default_ifname[0] \u003d\u003d \u0027\\0\u0027) ?  it can\u0027t be null.  If it can be null should be:\n\nif (default_ifname \u003d\u003d NULL || default_ifname[0] \u003d\u003d \u0027\\0\u0027) {",
      "revId": "10120530a3b9ffd7bbf9d561dc51e0ef53a22538",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAABBn///7E\u003d",
        "filename": "libc/netbsd/resolv/res_cache.c",
        "patchSetId": 3
      },
      "lineNbr": 1597,
      "author": {
        "id": 1004783
      },
      "writtenOn": "2011-05-24T06:49:46Z",
      "side": 1,
      "message": "That\u0027s true default_ifname can\u0027t be NULL. I\u0027ll update :)",
      "parentUuid": "AAABAn///FU\u003d",
      "revId": "10120530a3b9ffd7bbf9d561dc51e0ef53a22538",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAABAn///D0\u003d",
        "filename": "libc/netbsd/resolv/res_cache.c",
        "patchSetId": 3
      },
      "lineNbr": 1618,
      "author": {
        "id": 1002609
      },
      "writtenOn": "2011-05-19T21:23:09Z",
      "side": 1,
      "message": "we should lock the list here.  Two callers could otherwise both add elements for the same ifname.",
      "revId": "10120530a3b9ffd7bbf9d561dc51e0ef53a22538",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAABBn///7A\u003d",
        "filename": "libc/netbsd/resolv/res_cache.c",
        "patchSetId": 3
      },
      "lineNbr": 1618,
      "author": {
        "id": 1004783
      },
      "writtenOn": "2011-05-24T06:49:46Z",
      "side": 1,
      "message": "Agree",
      "parentUuid": "AAABAn///D0\u003d",
      "revId": "10120530a3b9ffd7bbf9d561dc51e0ef53a22538",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAABAn///Dw\u003d",
        "filename": "libc/netbsd/resolv/res_cache.c",
        "patchSetId": 3
      },
      "lineNbr": 1672,
      "author": {
        "id": 1002609
      },
      "writtenOn": "2011-05-19T21:23:09Z",
      "side": 1,
      "message": "unlock.",
      "revId": "10120530a3b9ffd7bbf9d561dc51e0ef53a22538",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAABBX///6E\u003d",
        "filename": "libc/netbsd/resolv/res_cache.c",
        "patchSetId": 3
      },
      "lineNbr": 1672,
      "author": {
        "id": 1004783
      },
      "writtenOn": "2011-05-24T06:49:46Z",
      "side": 1,
      "message": "I\u0027m embarrassed. I\u0027ll correct",
      "parentUuid": "AAABAn///Dw\u003d",
      "revId": "10120530a3b9ffd7bbf9d561dc51e0ef53a22538",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAABAn///DA\u003d",
        "filename": "libc/netbsd/resolv/res_cache.c",
        "patchSetId": 3
      },
      "lineNbr": 1701,
      "author": {
        "id": 1002609
      },
      "writtenOn": "2011-05-19T21:23:09Z",
      "side": 1,
      "message": "call _resolve_res_cache_list_get and then deref the cache from the returned cache_info.  remove all this code.",
      "revId": "10120530a3b9ffd7bbf9d561dc51e0ef53a22538",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAABBn///68\u003d",
        "filename": "libc/netbsd/resolv/res_cache.c",
        "patchSetId": 3
      },
      "lineNbr": 1701,
      "author": {
        "id": 1004783
      },
      "writtenOn": "2011-05-24T06:49:46Z",
      "side": 1,
      "message": "Thanks agree it\u0027s much better",
      "parentUuid": "AAABAn///DA\u003d",
      "revId": "10120530a3b9ffd7bbf9d561dc51e0ef53a22538",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAABAn///Ao\u003d",
        "filename": "libc/netbsd/resolv/res_cache.c",
        "patchSetId": 3
      },
      "lineNbr": 1776,
      "author": {
        "id": 1002609
      },
      "writtenOn": "2011-05-19T21:23:09Z",
      "side": 1,
      "message": "should you pthread_once here and bleow or are you sure that will have been called before this?",
      "revId": "10120530a3b9ffd7bbf9d561dc51e0ef53a22538",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAABBn///64\u003d",
        "filename": "libc/netbsd/resolv/res_cache.c",
        "patchSetId": 3
      },
      "lineNbr": 1776,
      "author": {
        "id": 1004783
      },
      "writtenOn": "2011-05-24T06:49:46Z",
      "side": 1,
      "message": "__get_res_cache_for_iface calls pthread_once and creates the cache for the given interface if it isn\u0027t created already",
      "parentUuid": "AAABAn///Ao\u003d",
      "revId": "10120530a3b9ffd7bbf9d561dc51e0ef53a22538",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAABAn///As\u003d",
        "filename": "libc/netbsd/resolv/res_cache.c",
        "patchSetId": 3
      },
      "lineNbr": 1881,
      "author": {
        "id": 1002609
      },
      "writtenOn": "2011-05-19T21:23:09Z",
      "side": 1,
      "message": "you don\u0027t dup this and it will get freed when the cache is reset.  Should it be duplicated?",
      "revId": "10120530a3b9ffd7bbf9d561dc51e0ef53a22538",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAABBn///6w\u003d",
        "filename": "libc/netbsd/resolv/res_cache.c",
        "patchSetId": 3
      },
      "lineNbr": 1881,
      "author": {
        "id": 1004783
      },
      "writtenOn": "2011-05-24T06:49:46Z",
      "side": 1,
      "message": "Agree, safer to duplicate the returned addrinfo since API function. \n\nI used the function in res_init, which doesn\u0027t hold on the returned value it just copied it. But never the less I\u0027ll change and return a duplicte",
      "parentUuid": "AAABAn///As\u003d",
      "revId": "10120530a3b9ffd7bbf9d561dc51e0ef53a22538",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}