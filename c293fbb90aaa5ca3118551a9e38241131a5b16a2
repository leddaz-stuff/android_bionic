{
  "comments": [
    {
      "key": {
        "uuid": "32df8f9d_1db758f4",
        "filename": "libc/bionic/malloc_common.cpp",
        "patchSetId": 8
      },
      "lineNbr": 229,
      "author": {
        "id": 1130394
      },
      "writtenOn": "2018-09-06T18:34:27Z",
      "side": 1,
      "message": "libc already contains special code that ignores attempts by applications to block signals used for various internal purposes. Do you think that this list needs to be extended to include this signal?",
      "range": {
        "startLine": 229,
        "startChar": 17,
        "endLine": 229,
        "endChar": 33
      },
      "revId": "c293fbb90aaa5ca3118551a9e38241131a5b16a2",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "cd41ee51_c57e6444",
        "filename": "libc/bionic/malloc_common.cpp",
        "patchSetId": 8
      },
      "lineNbr": 229,
      "author": {
        "id": 1268571
      },
      "writtenOn": "2018-09-07T17:43:08Z",
      "side": 1,
      "message": "The changes in sigrtmin.h should cause this to happen. cferris@ can you confirm that?",
      "parentUuid": "32df8f9d_1db758f4",
      "range": {
        "startLine": 229,
        "startChar": 17,
        "endLine": 229,
        "endChar": 33
      },
      "revId": "c293fbb90aaa5ca3118551a9e38241131a5b16a2",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4cb641ee_7f700751",
        "filename": "libc/bionic/malloc_common.cpp",
        "patchSetId": 8
      },
      "lineNbr": 463,
      "author": {
        "id": 1019050
      },
      "writtenOn": "2018-09-06T18:21:34Z",
      "side": 1,
      "message": "const char",
      "range": {
        "startLine": 463,
        "startChar": 49,
        "endLine": 463,
        "endChar": 53
      },
      "revId": "c293fbb90aaa5ca3118551a9e38241131a5b16a2",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b6727359_1530835e",
        "filename": "libc/bionic/malloc_common.cpp",
        "patchSetId": 8
      },
      "lineNbr": 463,
      "author": {
        "id": 1268571
      },
      "writtenOn": "2018-09-07T17:43:08Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "4cb641ee_7f700751",
      "range": {
        "startLine": 463,
        "startChar": 49,
        "endLine": 463,
        "endChar": 53
      },
      "revId": "c293fbb90aaa5ca3118551a9e38241131a5b16a2",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "836afa37_574eb715",
        "filename": "libc/bionic/malloc_common.cpp",
        "patchSetId": 8
      },
      "lineNbr": 495,
      "author": {
        "id": 1130394
      },
      "writtenOn": "2018-09-06T18:34:27Z",
      "side": 1,
      "message": "Nit: not going to -1 over it or anything, but I *strongly* prefer to see sigaction in the codebase instead of old signal call. sigaction is much more explicit about which signal-handling options are being selected.",
      "range": {
        "startLine": 495,
        "startChar": 2,
        "endLine": 495,
        "endChar": 8
      },
      "revId": "c293fbb90aaa5ca3118551a9e38241131a5b16a2",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "afbc6b0b_62314294",
        "filename": "libc/bionic/malloc_common.cpp",
        "patchSetId": 8
      },
      "lineNbr": 495,
      "author": {
        "id": 1268571
      },
      "writtenOn": "2018-09-07T17:43:08Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "836afa37_574eb715",
      "range": {
        "startLine": 495,
        "startChar": 2,
        "endLine": 495,
        "endChar": 8
      },
      "revId": "c293fbb90aaa5ca3118551a9e38241131a5b16a2",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f473a4df_c346334c",
        "filename": "libc/bionic/malloc_common.cpp",
        "patchSetId": 8
      },
      "lineNbr": 521,
      "author": {
        "id": 1019050
      },
      "writtenOn": "2018-09-06T18:21:34Z",
      "side": 1,
      "message": "What\u0027s the expected case if you get the signal again. I think it\u0027s that it does nothing, but I wanted to verify that.",
      "range": {
        "startLine": 521,
        "startChar": 2,
        "endLine": 521,
        "endChar": 50
      },
      "revId": "c293fbb90aaa5ca3118551a9e38241131a5b16a2",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b8bcc937_e4898af2",
        "filename": "libc/bionic/malloc_common.cpp",
        "patchSetId": 8
      },
      "lineNbr": 521,
      "author": {
        "id": 1268571
      },
      "writtenOn": "2018-09-07T17:43:08Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "f473a4df_c346334c",
      "range": {
        "startLine": 521,
        "startChar": 2,
        "endLine": 521,
        "endChar": 50
      },
      "revId": "c293fbb90aaa5ca3118551a9e38241131a5b16a2",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c0e08e1b_1a76b8fa",
        "filename": "libc/bionic/malloc_common.cpp",
        "patchSetId": 8
      },
      "lineNbr": 534,
      "author": {
        "id": 1019050
      },
      "writtenOn": "2018-09-06T18:21:34Z",
      "side": 1,
      "message": "Add #include \u003cstdatomic.h\u003e at the top. Even though you are getting it from another header, it\u0027s better to be explicit.",
      "range": {
        "startLine": 534,
        "startChar": 6,
        "endLine": 534,
        "endChar": 14
      },
      "revId": "c293fbb90aaa5ca3118551a9e38241131a5b16a2",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0354bf64_c90e7392",
        "filename": "libc/bionic/malloc_common.cpp",
        "patchSetId": 8
      },
      "lineNbr": 534,
      "author": {
        "id": 1268571
      },
      "writtenOn": "2018-09-07T17:43:08Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "c0e08e1b_1a76b8fa",
      "range": {
        "startLine": 534,
        "startChar": 6,
        "endLine": 534,
        "endChar": 14
      },
      "revId": "c293fbb90aaa5ca3118551a9e38241131a5b16a2",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8a53eeb2_1c365abf",
        "filename": "libc/bionic/malloc_common.cpp",
        "patchSetId": 8
      },
      "lineNbr": 535,
      "author": {
        "id": 1019050
      },
      "writtenOn": "2018-09-06T18:21:34Z",
      "side": 1,
      "message": "It\u0027s not clear why you have this prototype. The function isn\u0027t used before it\u0027s declared down below.",
      "range": {
        "startLine": 535,
        "startChar": 0,
        "endLine": 535,
        "endChar": 45
      },
      "revId": "c293fbb90aaa5ca3118551a9e38241131a5b16a2",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "244a832c_cddab312",
        "filename": "libc/bionic/malloc_common.cpp",
        "patchSetId": 8
      },
      "lineNbr": 535,
      "author": {
        "id": 1268571
      },
      "writtenOn": "2018-09-07T17:43:08Z",
      "side": 1,
      "message": "Sorry, I had that before I reordered stuff and then forgot.",
      "parentUuid": "8a53eeb2_1c365abf",
      "range": {
        "startLine": 535,
        "startChar": 0,
        "endLine": 535,
        "endChar": 45
      },
      "revId": "c293fbb90aaa5ca3118551a9e38241131a5b16a2",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "10bbd331_e7e6a711",
        "filename": "libc/bionic/malloc_common.cpp",
        "patchSetId": 8
      },
      "lineNbr": 548,
      "author": {
        "id": 1019050
      },
      "writtenOn": "2018-09-06T18:21:34Z",
      "side": 1,
      "message": "Is this operation guaranteed to be atomic on all architectures?",
      "range": {
        "startLine": 548,
        "startChar": 6,
        "endLine": 548,
        "endChar": 47
      },
      "revId": "c293fbb90aaa5ca3118551a9e38241131a5b16a2",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "35b3aaf0_e280ce11",
        "filename": "libc/bionic/malloc_common.cpp",
        "patchSetId": 8
      },
      "lineNbr": 548,
      "author": {
        "id": 1130394
      },
      "writtenOn": "2018-09-06T18:34:27Z",
      "side": 1,
      "message": "+1. Using an atomic store will not hurt, and it would ensure proper ordering with the exchange.",
      "parentUuid": "10bbd331_e7e6a711",
      "range": {
        "startLine": 548,
        "startChar": 6,
        "endLine": 548,
        "endChar": 47
      },
      "revId": "c293fbb90aaa5ca3118551a9e38241131a5b16a2",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6a02912f_b1337006",
        "filename": "libc/bionic/malloc_common.cpp",
        "patchSetId": 8
      },
      "lineNbr": 548,
      "author": {
        "id": 1268571
      },
      "writtenOn": "2018-09-07T17:43:08Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "35b3aaf0_e280ce11",
      "range": {
        "startLine": 548,
        "startChar": 6,
        "endLine": 548,
        "endChar": 47
      },
      "revId": "c293fbb90aaa5ca3118551a9e38241131a5b16a2",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d2259b76_dc5bbc62",
        "filename": "libc/bionic/malloc_common.cpp",
        "patchSetId": 8
      },
      "lineNbr": 552,
      "author": {
        "id": 1130394
      },
      "writtenOn": "2018-09-06T18:34:27Z",
      "side": 1,
      "message": "Can you please name the thread?",
      "range": {
        "startLine": 552,
        "startChar": 8,
        "endLine": 552,
        "endChar": 22
      },
      "revId": "c293fbb90aaa5ca3118551a9e38241131a5b16a2",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4355f727_44338eea",
        "filename": "libc/bionic/malloc_common.cpp",
        "patchSetId": 8
      },
      "lineNbr": 552,
      "author": {
        "id": 1079148
      },
      "writtenOn": "2018-09-06T20:13:29Z",
      "side": 1,
      "message": "This can deadlock if the signal is received during a pthread_create (the obvious case is during __pthread_internal_add, but there might be other ones as well?)",
      "range": {
        "startLine": 551,
        "startChar": 24,
        "endLine": 552,
        "endChar": 74
      },
      "revId": "c293fbb90aaa5ca3118551a9e38241131a5b16a2",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f2ef4e4d_eeae58eb",
        "filename": "libc/bionic/malloc_common.cpp",
        "patchSetId": 8
      },
      "lineNbr": 552,
      "author": {
        "id": 1079148
      },
      "writtenOn": "2018-09-06T20:14:04Z",
      "side": 1,
      "message": "Sorry, ignore this, misread the code.",
      "parentUuid": "4355f727_44338eea",
      "range": {
        "startLine": 551,
        "startChar": 24,
        "endLine": 552,
        "endChar": 74
      },
      "revId": "c293fbb90aaa5ca3118551a9e38241131a5b16a2",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "086601c5_98276aec",
        "filename": "libc/bionic/malloc_common.cpp",
        "patchSetId": 8
      },
      "lineNbr": 552,
      "author": {
        "id": 1130394
      },
      "writtenOn": "2018-09-06T20:25:00Z",
      "side": 1,
      "message": "The requirement that pthread_create not deadlock if reentered via some internal call to malloc doesn\u0027t seem to be written down anywhere. It might be worth mentioning it explicitly.",
      "parentUuid": "f2ef4e4d_eeae58eb",
      "range": {
        "startLine": 551,
        "startChar": 24,
        "endLine": 552,
        "endChar": 74
      },
      "revId": "c293fbb90aaa5ca3118551a9e38241131a5b16a2",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a16498c0_7a23dbe3",
        "filename": "libc/bionic/malloc_common.cpp",
        "patchSetId": 8
      },
      "lineNbr": 552,
      "author": {
        "id": 1268571
      },
      "writtenOn": "2018-09-07T17:43:08Z",
      "side": 1,
      "message": "This is only a problem if pthread_create calls malloc.\n\nAFAIK it only uses mmap directly for allocations. Chris could you confirm?",
      "parentUuid": "086601c5_98276aec",
      "range": {
        "startLine": 551,
        "startChar": 24,
        "endLine": 552,
        "endChar": 74
      },
      "revId": "c293fbb90aaa5ca3118551a9e38241131a5b16a2",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "351c4f03_cde49944",
        "filename": "libc/bionic/malloc_common.cpp",
        "patchSetId": 8
      },
      "lineNbr": 552,
      "author": {
        "id": 1268571
      },
      "writtenOn": "2018-09-07T17:43:08Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "d2259b76_dc5bbc62",
      "range": {
        "startLine": 552,
        "startChar": 8,
        "endLine": 552,
        "endChar": 22
      },
      "revId": "c293fbb90aaa5ca3118551a9e38241131a5b16a2",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}