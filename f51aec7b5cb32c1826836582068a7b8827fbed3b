{
  "comments": [
    {
      "key": {
        "uuid": "e0b678f0_f9292ada",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 16,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2018-02-02T18:39:03Z",
      "side": 1,
      "message": "what projects are using this? glibc doesn\u0027t expose these either. (and the struct is already in the uapi headers.)",
      "revId": "f51aec7b5cb32c1826836582068a7b8827fbed3b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "673243f4_b48bf87e",
        "filename": "libc/include/sched.h",
        "patchSetId": 1
      },
      "lineNbr": 63,
      "author": {
        "id": 1124848
      },
      "writtenOn": "2018-02-07T00:22:41Z",
      "side": 1,
      "message": "Elliott, it seems that libc doesn\u0027t use uapi sched.h for sched_aatr. Don\u0027t know why.\nOn my Ubuntu machine, sched_attr is actually defined in \"bits/sched.h\" which is included by the main /usr/include/sched.h\n\nFollowing that model, it seems logical to include the struct definition in this file as Alessio did. If you look at sched_param (which is already here in this file before Alessio\u0027s patch), even that is provided by UAPI but is still defined here in this file.\n\nCould you guide us on what is the right approach for this?",
      "revId": "f51aec7b5cb32c1826836582068a7b8827fbed3b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    }
  ]
}