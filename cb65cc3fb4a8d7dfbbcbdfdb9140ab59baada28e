{
  "comments": [
    {
      "key": {
        "uuid": "f9466f41_0052b62c",
        "filename": "libc/include/machine/ieee.h",
        "patchSetId": 1
      },
      "lineNbr": 53,
      "author": {
        "id": 1019050
      },
      "writtenOn": "2014-04-16T23:51:16Z",
      "side": 1,
      "message": "Is this needed? I don\u0027t see anything obviously that requires it, but I\u0027m probably just missing it.",
      "range": {
        "startLine": 53,
        "startChar": 0,
        "endLine": 53,
        "endChar": 13
      },
      "revId": "cb65cc3fb4a8d7dfbbcbdfdb9140ab59baada28e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e5f7a345_8c1faf4d",
        "filename": "libc/include/machine/ieee.h",
        "patchSetId": 1
      },
      "lineNbr": 53,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2014-04-16T23:56:37Z",
      "side": 1,
      "message": "no, it\u0027s not. (neither are the include guards, since the BSD source that uses this header expects to be using files without it.) i\u0027m just bringing the header into normal form.\n\ninteresting question: should we hide this header file somewhere? we only need it internally, so we don\u0027t actually need to have it under libc\u0027s public include directory at all...",
      "parentUuid": "f9466f41_0052b62c",
      "range": {
        "startLine": 53,
        "startChar": 0,
        "endLine": 53,
        "endChar": 13
      },
      "revId": "cb65cc3fb4a8d7dfbbcbdfdb9140ab59baada28e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f9466f41_c0698ed0",
        "filename": "libc/include/machine/ieee.h",
        "patchSetId": 1
      },
      "lineNbr": 53,
      "author": {
        "id": 1019050
      },
      "writtenOn": "2014-04-16T23:58:59Z",
      "side": 1,
      "message": "I don\u0027t know, there might be some project we pull in that wants to use these definitions. I think it\u0027s okay to leave it here unless we really do not want anybody to use it.",
      "parentUuid": "e5f7a345_8c1faf4d",
      "range": {
        "startLine": 53,
        "startChar": 0,
        "endLine": 53,
        "endChar": 13
      },
      "revId": "cb65cc3fb4a8d7dfbbcbdfdb9140ab59baada28e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "45586f41_a8013bd1",
        "filename": "libc/include/machine/ieee.h",
        "patchSetId": 1
      },
      "lineNbr": 53,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2014-04-17T16:20:45Z",
      "side": 1,
      "message": "no: that would imply that you\u0027re trying to build LP64 code for LP32, which seems like a mistake. worse, you\u0027d need to have a different set of fields and/or different values for the #defines, so you\u0027d have no guarantee that code written for ld128 ieee_ext would actually work. it\u0027s a bit of a mess really; they should have called this ieee_quad or something to make it unambiguous which of the various \"extended\" float types they meant.",
      "parentUuid": "f9466f41_c0698ed0",
      "range": {
        "startLine": 53,
        "startChar": 0,
        "endLine": 53,
        "endChar": 13
      },
      "revId": "cb65cc3fb4a8d7dfbbcbdfdb9140ab59baada28e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "25445b56_af3939f0",
        "filename": "libc/include/machine/ieee.h",
        "patchSetId": 1
      },
      "lineNbr": 105,
      "author": {
        "id": 1022077
      },
      "writtenOn": "2014-04-17T09:30:59Z",
      "side": 1,
      "message": "don\u0027t we need this for LP32  as well? even if it\u0027s the same with ieee_double.",
      "range": {
        "startLine": 105,
        "startChar": 0,
        "endLine": 105,
        "endChar": 15
      },
      "revId": "cb65cc3fb4a8d7dfbbcbdfdb9140ab59baada28e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}