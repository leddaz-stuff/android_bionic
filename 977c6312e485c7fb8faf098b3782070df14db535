{
  "comments": [
    {
      "key": {
        "uuid": "1a9fd9b3_dfde7196",
        "filename": "libc/stdio/stdio.cpp",
        "patchSetId": 1
      },
      "lineNbr": 78,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2017-10-05T23:38:53Z",
      "side": 1,
      "message": "why not just \u003d\u003d nullptr?",
      "range": {
        "startLine": 78,
        "startChar": 24,
        "endLine": 78,
        "endChar": 63
      },
      "revId": "977c6312e485c7fb8faf098b3782070df14db535",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "cca954c0_5f9bea58",
        "filename": "libc/stdio/stdio.cpp",
        "patchSetId": 1
      },
      "lineNbr": 78,
      "author": {
        "id": 1079148
      },
      "writtenOn": "2017-10-12T20:53:04Z",
      "side": 1,
      "message": "The rationale was to catch null pointer dereferences of a containing struct, which upon reflection will only happen if someone copies the private FILE struct definition into their code. There are definitely people poking at fields, it\u0027s probably worth doing this check for that anyway, since this doesn\u0027t cost us anything.",
      "parentUuid": "1a9fd9b3_dfde7196",
      "range": {
        "startLine": 78,
        "startChar": 24,
        "endLine": 78,
        "endChar": 63
      },
      "revId": "977c6312e485c7fb8faf098b3782070df14db535",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5d1f27e7_580d43b4",
        "filename": "libc/stdio/stdio.cpp",
        "patchSetId": 1
      },
      "lineNbr": 78,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2017-10-12T21:13:30Z",
      "side": 1,
      "message": "but that would only happen if they were poking into a struct that _contains_ a FILE*. except for res_static, deep in the bowels of the DNS resolver, we don\u0027t have any such structs.\n\ni\u0027d like to see at least one instance of such a crash first.",
      "parentUuid": "cca954c0_5f9bea58",
      "range": {
        "startLine": 78,
        "startChar": 24,
        "endLine": 78,
        "endChar": 63
      },
      "revId": "977c6312e485c7fb8faf098b3782070df14db535",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}