{
  "comments": [
    {
      "key": {
        "uuid": "95085a86_3ae6855f",
        "filename": "tests/dlext_test.cpp",
        "patchSetId": 3
      },
      "lineNbr": 1764,
      "author": {
        "id": 1041673
      },
      "writtenOn": "2018-01-23T15:01:19Z",
      "side": 1,
      "message": "no - create a separate method for that - do not use magic strings.",
      "range": {
        "startLine": 1764,
        "startChar": 50,
        "endLine": 1764,
        "endChar": 65
      },
      "revId": "a6ef67796405629f2c0ae752de2ff5d414b03a57",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2d448752_aecb5b25",
        "filename": "tests/dlext_test.cpp",
        "patchSetId": 3
      },
      "lineNbr": 1764,
      "author": {
        "id": 1132673
      },
      "writtenOn": "2018-01-23T15:15:40Z",
      "side": 1,
      "message": "then the ld.config.txt syntax becomes ambiguous.\n\nnamespace.foo.link.bar.shared_libs \u003d libX.so:libY.so\nnamespace.foo.link.bar.allow_all_shared_libs \u003d true\n\nthese shouldn\u0027t specified at the same time but the syntax is not disallowing this. I would rather think it as a reserved keyword (though I don\u0027t think /*all-libs*/ is the best name for the keyword.",
      "parentUuid": "95085a86_3ae6855f",
      "range": {
        "startLine": 1764,
        "startChar": 50,
        "endLine": 1764,
        "endChar": 65
      },
      "revId": "a6ef67796405629f2c0ae752de2ff5d414b03a57",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f0819325_28065d89",
        "filename": "tests/dlext_test.cpp",
        "patchSetId": 3
      },
      "lineNbr": 1764,
      "author": {
        "id": 1041673
      },
      "writtenOn": "2018-01-23T15:28:23Z",
      "side": 1,
      "message": "My comment is about the method parameter.\n\nHaving said that I think it is clearer to have allow_all_shared_libs \u003d true instead of using magic value in config file as well.",
      "parentUuid": "2d448752_aecb5b25",
      "range": {
        "startLine": 1764,
        "startChar": 50,
        "endLine": 1764,
        "endChar": 65
      },
      "revId": "a6ef67796405629f2c0ae752de2ff5d414b03a57",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8143ca8b_98c18f94",
        "filename": "tests/libs/Android.bp",
        "patchSetId": 3
      },
      "lineNbr": 277,
      "author": {
        "id": 1041673
      },
      "writtenOn": "2018-01-23T15:01:19Z",
      "side": 1,
      "message": "As far as I understand the point here is to fix situation where public3 is present in both namesapces no? If so - this dependency tree does not demonstrate the problem. The test needs to build 2 different version of public3 and check that the right one was loaded when resolving dependencies.",
      "revId": "a6ef67796405629f2c0ae752de2ff5d414b03a57",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f4d3859d_bb4a3051",
        "filename": "tests/libs/Android.bp",
        "patchSetId": 3
      },
      "lineNbr": 277,
      "author": {
        "id": 1014807
      },
      "writtenOn": "2018-01-23T18:08:17Z",
      "side": 1,
      "message": "Although I have a plan for this in the future, this is beyond the scope of this CL.  This CL only provides an option to skip the soname filter on the fallback links.  This CL does not change the search order.  The shared lib within the caller namespace always has higher priority.\n\nIf there are two public3.so (one in namespace a and the other in namespace b), then public1.so must link with the one in namespace a.  This is the behavior we have today.\n\nBTW, although writing a unit test to keep track of this behavior is desirable, to best of my knowledge we don\u0027t have a good way to build two shared libs with the same soname for testing (p.s. stem does not work on shared libs).  It may be difficult to be done in a short term.",
      "parentUuid": "8143ca8b_98c18f94",
      "revId": "a6ef67796405629f2c0ae752de2ff5d414b03a57",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    }
  ]
}