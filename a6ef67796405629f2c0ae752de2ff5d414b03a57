{
  "comments": [
    {
      "key": {
        "uuid": "95085a86_3ae6855f",
        "filename": "tests/dlext_test.cpp",
        "patchSetId": 3
      },
      "lineNbr": 1764,
      "author": {
        "id": 1041673
      },
      "writtenOn": "2018-01-23T15:01:19Z",
      "side": 1,
      "message": "no - create a separate method for that - do not use magic strings.",
      "range": {
        "startLine": 1764,
        "startChar": 50,
        "endLine": 1764,
        "endChar": 65
      },
      "revId": "a6ef67796405629f2c0ae752de2ff5d414b03a57",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2d448752_aecb5b25",
        "filename": "tests/dlext_test.cpp",
        "patchSetId": 3
      },
      "lineNbr": 1764,
      "author": {
        "id": 1132673
      },
      "writtenOn": "2018-01-23T15:15:40Z",
      "side": 1,
      "message": "then the ld.config.txt syntax becomes ambiguous.\n\nnamespace.foo.link.bar.shared_libs \u003d libX.so:libY.so\nnamespace.foo.link.bar.allow_all_shared_libs \u003d true\n\nthese shouldn\u0027t specified at the same time but the syntax is not disallowing this. I would rather think it as a reserved keyword (though I don\u0027t think /*all-libs*/ is the best name for the keyword.",
      "parentUuid": "95085a86_3ae6855f",
      "range": {
        "startLine": 1764,
        "startChar": 50,
        "endLine": 1764,
        "endChar": 65
      },
      "revId": "a6ef67796405629f2c0ae752de2ff5d414b03a57",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8143ca8b_98c18f94",
        "filename": "tests/libs/Android.bp",
        "patchSetId": 3
      },
      "lineNbr": 277,
      "author": {
        "id": 1041673
      },
      "writtenOn": "2018-01-23T15:01:19Z",
      "side": 1,
      "message": "As far as I understand the point here is to fix situation where public3 is present in both namesapces no? If so - this dependency tree does not demonstrate the problem. The test needs to build 2 different version of public3 and check that the right one was loaded when resolving dependencies.",
      "revId": "a6ef67796405629f2c0ae752de2ff5d414b03a57",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    }
  ]
}