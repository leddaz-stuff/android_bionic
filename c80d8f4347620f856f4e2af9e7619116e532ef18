{
  "comments": [
    {
      "key": {
        "uuid": "22fe51bd_8b56f1fc",
        "filename": "libc/bionic/ifaddrs.cpp",
        "patchSetId": 1
      },
      "lineNbr": 71,
      "author": {
        "id": 1000835
      },
      "writtenOn": "2016-03-02T02:27:07Z",
      "side": 1,
      "message": "What if IFA_LOCAL appears before IFA_ADDRESS in the netlink message? Do we set ifa_addr when we see IFA_LOCAL, and then overwrite it when we see ifa_address? If so, then we should either a) not do that or b) document that are relying on the order in which the kernel puts these attributes in the message.",
      "range": {
        "startLine": 71,
        "startChar": 4,
        "endLine": 71,
        "endChar": 30
      },
      "revId": "c80d8f4347620f856f4e2af9e7619116e532ef18",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c26bb568_4c29fdca",
        "filename": "libc/bionic/ifaddrs.cpp",
        "patchSetId": 1
      },
      "lineNbr": 71,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2016-03-02T02:45:27Z",
      "side": 1,
      "message": "yeah, i\u0027m relying on no-one reordering the code in the kernel. we could add the condition here, but since we can\u0027t test it without a modified kernel, i think i\u0027ll just add the comment.",
      "parentUuid": "22fe51bd_8b56f1fc",
      "range": {
        "startLine": 71,
        "startChar": 4,
        "endLine": 71,
        "endChar": 30
      },
      "revId": "c80d8f4347620f856f4e2af9e7619116e532ef18",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "42034591_4c3ff36b",
        "filename": "libc/bionic/ifaddrs.cpp",
        "patchSetId": 1
      },
      "lineNbr": 75,
      "author": {
        "id": 1000835
      },
      "writtenOn": "2016-03-02T02:27:07Z",
      "side": 1,
      "message": "Nit: it\u0027s possible to have an interface that has local, peer, *and* broadcast addresses, e.g., by running this:\n\nsudo ip addr add dev tun0 10.0.0.1/32 peer 192.0.2.1 brd 10.255.255.255\n\nGiven that this seems a fairly unlikely / meaningless configuration, this CL\u0027s \"overwrite ifu_dstaddr with whatever attribute appears last in the netlink messsage\" behaviour is fine by me, but we might want to add a comment to that effect.\n\nIf we were so inclined, we could also do something else, such as always prefer the peer address over the broadcast address, but I\u0027m not sure if it\u0027s worth complicating the code for this.",
      "range": {
        "startLine": 75,
        "startChar": 4,
        "endLine": 75,
        "endChar": 35
      },
      "revId": "c80d8f4347620f856f4e2af9e7619116e532ef18",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "02594de9_8ec61c11",
        "filename": "libc/bionic/ifaddrs.cpp",
        "patchSetId": 1
      },
      "lineNbr": 75,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2016-03-02T02:45:27Z",
      "side": 1,
      "message": "i don\u0027t think it is. at least for me, the kernel says \"fuck off\" if i try to do that. well, EEXIST.\n\n(which makes sense since there\u0027s no way to represent this configuration.)",
      "parentUuid": "42034591_4c3ff36b",
      "range": {
        "startLine": 75,
        "startChar": 4,
        "endLine": 75,
        "endChar": 35
      },
      "revId": "c80d8f4347620f856f4e2af9e7619116e532ef18",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8209bdb1_5c89dd4f",
        "filename": "libc/bionic/ifaddrs.cpp",
        "patchSetId": 1
      },
      "lineNbr": 75,
      "author": {
        "id": 1000835
      },
      "writtenOn": "2016-03-02T03:36:52Z",
      "side": 1,
      "message": "My workstation is able to do (see below), but I agree it\u0027s a corner case and I think what you have is fine. \n\nshell 1 (as before):\n\n\u003d\u003d\u003d\u003d\u003d\u003d\u003d\nsudo python\n\nimport struct\nimport fcntl\n\nIFF_TUN \u003d 1\nIFF_NO_PI \u003d 0x1000\nTUNSETIFF \u003d 0x400454ca\n\nf \u003d open(\"/dev/net/tun\", \"r+b\")\nifr \u003d struct.pack(\"16sH\", \"tun0\", IFF_TUN | IFF_NO_PI)\nifr +\u003d \"\\x00\" * (40 - len(ifr))\nfcntl.ioctl(f, TUNSETIFF, ifr)\n\u0027tun0\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x01\\x10\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\u0027\n\u003d\u003d\u003d\u003d\u003d\u003d\u003d\n\nshell 2:\n\n$ sudo ip -4 addr add dev tun0 10.0.0.1 peer 192.0.2.1 brd 10.255.255.255\n$ ip -4 a l dev tun0\n5: tun0: \u003cPOINTOPOINT,MULTICAST,NOARP\u003e mtu 1500 qdisc noop state DOWN group default qlen 500\n    inet 10.0.0.1 peer 192.0.2.1/32 brd 10.255.255.255 scope global tun0\n       valid_lft forever preferred_lft forever",
      "parentUuid": "02594de9_8ec61c11",
      "range": {
        "startLine": 75,
        "startChar": 4,
        "endLine": 75,
        "endChar": 35
      },
      "revId": "c80d8f4347620f856f4e2af9e7619116e532ef18",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a26ec178_fa6187e0",
        "filename": "libc/bionic/ifaddrs.cpp",
        "patchSetId": 1
      },
      "lineNbr": 75,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2016-03-02T03:59:10Z",
      "side": 1,
      "message": "ah, i did the new \"sudo ip\" on top of the old one. yes, this succeeds for me too, and shows that glibc 2.19 at least behaves the same as this code. i\u0027ll add a comment.\n\n(we could potentially remove the union [though we\u0027d have to do that before N ships!]. but then i worry about glibc code that assumes they overlap and has been lazy and accesses the same field regardless of whether IFF_POINTOPOINT or IFF_BROADCAST is set. i guess it comes down to which we think we\u0027re more likely to see: sloppy code or interfaces with both broadcast and destination addresses...)",
      "parentUuid": "8209bdb1_5c89dd4f",
      "range": {
        "startLine": 75,
        "startChar": 4,
        "endLine": 75,
        "endChar": 35
      },
      "revId": "c80d8f4347620f856f4e2af9e7619116e532ef18",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c2e65528_7b25d3a1",
        "filename": "libc/bionic/ifaddrs.cpp",
        "patchSetId": 1
      },
      "lineNbr": 75,
      "author": {
        "id": 1000835
      },
      "writtenOn": "2016-03-02T04:10:54Z",
      "side": 1,
      "message": "I think it makes more sense to accommodate sloppy callers and be consistent with glibc instead of attempting to accommodate dubious network configurations that netd and our various RILs might well never create.",
      "parentUuid": "a26ec178_fa6187e0",
      "range": {
        "startLine": 75,
        "startChar": 4,
        "endLine": 75,
        "endChar": 35
      },
      "revId": "c80d8f4347620f856f4e2af9e7619116e532ef18",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c2e65528_9b8877e0",
        "filename": "libc/bionic/ifaddrs.cpp",
        "patchSetId": 1
      },
      "lineNbr": 208,
      "author": {
        "id": 1000835
      },
      "writtenOn": "2016-03-02T02:27:07Z",
      "side": 1,
      "message": "Nit: suggest:\n\n    else if (rta-\u003erta_type \u003d\u003d IFA_BROADCAST \u0026\u0026 msg-\u003eifa_family \u003d\u003d AF_INET) {",
      "range": {
        "startLine": 207,
        "startChar": 49,
        "endLine": 208,
        "endChar": 41
      },
      "revId": "c80d8f4347620f856f4e2af9e7619116e532ef18",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "82ea9d1e_f11ac7b3",
        "filename": "libc/bionic/ifaddrs.cpp",
        "patchSetId": 1
      },
      "lineNbr": 208,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2016-03-02T02:45:27Z",
      "side": 1,
      "message": "yeah, i was tempted but since the other two can\u0027t fit on their lines, i wanted to stay consistent with them.\n\nif only we had _one_ space indents...",
      "parentUuid": "c2e65528_9b8877e0",
      "range": {
        "startLine": 207,
        "startChar": 49,
        "endLine": 208,
        "endChar": 41
      },
      "revId": "c80d8f4347620f856f4e2af9e7619116e532ef18",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}