{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "8a6f4f60_c83b6a1c",
        "filename": "libc/include/bits/ctype_inlines.h",
        "patchSetId": 1
      },
      "lineNbr": 64,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2023-04-27T19:07:32Z",
      "side": 1,
      "message": "shouldn\u0027t be, right?",
      "range": {
        "startLine": 64,
        "startChar": 19,
        "endLine": 64,
        "endChar": 28
      },
      "revId": "651a3fb1ae01df296311a75ab4e804c6f06e8cd1",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8aea7fae_e44aabf5",
        "filename": "libc/include/bits/ctype_inlines.h",
        "patchSetId": 1
      },
      "lineNbr": 64,
      "author": {
        "id": 1890456
      },
      "writtenOn": "2023-04-27T22:45:33Z",
      "side": 1,
      "message": "If don\u0027t annotate, there will be compiled error ðŸ˜‚ So I mark it as `_Nullable`.",
      "parentUuid": "8a6f4f60_c83b6a1c",
      "range": {
        "startLine": 64,
        "startChar": 19,
        "endLine": 64,
        "endChar": 28
      },
      "revId": "651a3fb1ae01df296311a75ab4e804c6f06e8cd1",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3dd1b641_2d947179",
        "filename": "libc/include/bits/ctype_inlines.h",
        "patchSetId": 1
      },
      "lineNbr": 64,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2023-04-27T22:50:50Z",
      "side": 1,
      "message": "what\u0027s the error if you say _Nonnull?",
      "parentUuid": "8aea7fae_e44aabf5",
      "range": {
        "startLine": 64,
        "startChar": 19,
        "endLine": 64,
        "endChar": 28
      },
      "revId": "651a3fb1ae01df296311a75ab4e804c6f06e8cd1",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f73eedc2_25274db5",
        "filename": "libc/include/bits/ctype_inlines.h",
        "patchSetId": 1
      },
      "lineNbr": 64,
      "author": {
        "id": 1890456
      },
      "writtenOn": "2023-04-27T23:47:33Z",
      "side": 1,
      "message": "Everything is going well ðŸ˜‚ but why? I think it should be `_Nullable` because it is not allowed to be used and it can be left as null.",
      "parentUuid": "3dd1b641_2d947179",
      "range": {
        "startLine": 64,
        "startChar": 19,
        "endLine": 64,
        "endChar": 28
      },
      "revId": "651a3fb1ae01df296311a75ab4e804c6f06e8cd1",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e15d7b4b_698b1011",
        "filename": "libc/include/bits/ctype_inlines.h",
        "patchSetId": 1
      },
      "lineNbr": 64,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2023-04-28T15:35:44Z",
      "side": 1,
      "message": "it _is_ used --- it\u0027s how old versions of libc++ implement the equivalent C++ functions. i think they use their own table in newer versions, but we need this to keep old binaries working. and if we ever can really get rid of it (which i doubt --- such \"cleanup\" is almost never worth the disruption), we\u0027ll remove the symbol, not just make it a nullptr :-)",
      "parentUuid": "f73eedc2_25274db5",
      "range": {
        "startLine": 64,
        "startChar": 19,
        "endLine": 64,
        "endChar": 28
      },
      "revId": "651a3fb1ae01df296311a75ab4e804c6f06e8cd1",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "6cc479ab_5a2f12d2",
        "filename": "libc/include/bits/ctype_inlines.h",
        "patchSetId": 1
      },
      "lineNbr": 64,
      "author": {
        "id": 1890456
      },
      "writtenOn": "2023-04-28T18:29:27Z",
      "side": 1,
      "message": "I see. Thank you!",
      "parentUuid": "e15d7b4b_698b1011",
      "range": {
        "startLine": 64,
        "startChar": 19,
        "endLine": 64,
        "endChar": 28
      },
      "revId": "651a3fb1ae01df296311a75ab4e804c6f06e8cd1",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}