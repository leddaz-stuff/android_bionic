{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "2fdf44b5_25b3ca32",
        "filename": "tests/fortify_test.cpp",
        "patchSetId": 1
      },
      "lineNbr": 463,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2023-04-26T22:04:44Z",
      "side": 1,
      "message": "just test snprintf directly to avoid the need for a helper?",
      "range": {
        "startLine": 463,
        "startChar": 11,
        "endLine": 463,
        "endChar": 28
      },
      "revId": "70f3ebe02018352709054e39429b1a69da76a00f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "af79dc43_a3a1b87f",
        "filename": "tests/fortify_test.cpp",
        "patchSetId": 1
      },
      "lineNbr": 463,
      "author": {
        "id": 1890456
      },
      "writtenOn": "2023-04-26T22:08:25Z",
      "side": 1,
      "message": "`sprintf`, `vsprintf`, `snprintf` all call `vsnprintf` finally. So I think test `vsnprintf` is testing the original one. If the tests pass, they can also apply to the whole `vsnprintf` family",
      "parentUuid": "2fdf44b5_25b3ca32",
      "range": {
        "startLine": 463,
        "startChar": 11,
        "endLine": 463,
        "endChar": 28
      },
      "revId": "70f3ebe02018352709054e39429b1a69da76a00f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e1837a44_c076d616",
        "filename": "tests/fortify_test.cpp",
        "patchSetId": 1
      },
      "lineNbr": 463,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2023-04-26T22:13:21Z",
      "side": 1,
      "message": "true, but if you\u0027re going to make that argument, then i\u0027d argue back that testing snprintf tests slightly _more_ than testing vsnprintf :-)\n\nbut my point was just \"having this helper function makes the test harder to read\". all you really want to test is \"nullptr and 0 works\". all this other stuff makes that a lot harder to see.",
      "parentUuid": "af79dc43_a3a1b87f",
      "range": {
        "startLine": 463,
        "startChar": 11,
        "endLine": 463,
        "endChar": 28
      },
      "revId": "70f3ebe02018352709054e39429b1a69da76a00f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0e27f55b_742af6b3",
        "filename": "tests/fortify_test.cpp",
        "patchSetId": 1
      },
      "lineNbr": 482,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2023-04-26T22:13:21Z",
      "side": 1,
      "message": "...to the extent that i didn\u0027t even really notice this test, which feels a bit like it over-specifies the behavior. do we actually care about this? do we want to preclude the possibility of adding a FORTIFY check in future? or a compiler warning?",
      "revId": "70f3ebe02018352709054e39429b1a69da76a00f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d738bb8b_646e60fe",
        "filename": "tests/fortify_test.cpp",
        "patchSetId": 1
      },
      "lineNbr": 482,
      "author": {
        "id": 1890456
      },
      "writtenOn": "2023-04-26T22:49:32Z",
      "side": 1,
      "message": "The reason I add this test is to explain why `__BIONIC_COMPLICATED_NULLNESS`: it depends. Nullptr is fine if the size is 0 ONLY ðŸ˜‚ Nullptr is NOT allowed when the size is a positive integer.",
      "parentUuid": "0e27f55b_742af6b3",
      "revId": "70f3ebe02018352709054e39429b1a69da76a00f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "215e9c44_d7777a19",
        "filename": "tests/fortify_test.cpp",
        "patchSetId": 1
      },
      "lineNbr": 482,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2023-04-26T22:51:35Z",
      "side": 1,
      "message": "yes, but testing the \"undefined behavior\" side of things is unusual. a test is really asserting that we care about something. and while we definitely care that nullptr and 0 works, do we care _at all_ about what nullptr and non-0 does? and even if we do, do we specifically care that it dies with SIGSEGV? (rather than, say, SIGABRT?)",
      "parentUuid": "d738bb8b_646e60fe",
      "revId": "70f3ebe02018352709054e39429b1a69da76a00f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5a77310b_3fe05e07",
        "filename": "tests/fortify_test.cpp",
        "patchSetId": 1
      },
      "lineNbr": 482,
      "author": {
        "id": 1890456
      },
      "writtenOn": "2023-04-26T22:57:33Z",
      "side": 1,
      "message": "ohhh I see. We test what we care. Developers will be not sure if it is allowed to pass a nullptr with size 0 but no one will pass a nullptr with non-0 maliciously(or stupidly or meaninglessly) ðŸ˜‚",
      "parentUuid": "215e9c44_d7777a19",
      "revId": "70f3ebe02018352709054e39429b1a69da76a00f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2ea9b777_3e09e33d",
        "filename": "tests/fortify_test.cpp",
        "patchSetId": 1
      },
      "lineNbr": 486,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2023-04-26T22:13:21Z",
      "side": 1,
      "message": "and here it\u0027s not obvious (without going away to read the helper that we\u0027re really testing the \"nullptr and 0\" case). whereas it would be really obvious if this was just `ASSERT_EQ(10, snprintf(nullptr, 0, \"0123456789\"));` instead --- that even makes it clear _why_ this is useful (because it tells you the length you would need).",
      "revId": "70f3ebe02018352709054e39429b1a69da76a00f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}