{
  "comments": [
    {
      "key": {
        "uuid": "7bfc0800_92fc57ac",
        "filename": "libc/malloc_hooks/malloc_hooks.cpp",
        "patchSetId": 1
      },
      "lineNbr": 225,
      "author": {
        "id": 1268571
      },
      "writtenOn": "2020-02-04T15:19:41Z",
      "side": 1,
      "message": "how about this?",
      "range": {
        "startLine": 225,
        "startChar": 8,
        "endLine": 225,
        "endChar": 30
      },
      "revId": "ca8258fd4dca9535b3c09fb4fb2cf20734753031",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d449fa35_302c9460",
        "filename": "libc/malloc_hooks/malloc_hooks.cpp",
        "patchSetId": 1
      },
      "lineNbr": 225,
      "author": {
        "id": 1453063
      },
      "writtenOn": "2020-02-04T15:22:26Z",
      "side": 1,
      "message": "This is part of the global functions, not part of the dispatch table set. malloc_backtrace (which calls this function) doesn\u0027t do any of the allocator-chaining that the dispatch table does.",
      "parentUuid": "7bfc0800_92fc57ac",
      "range": {
        "startLine": 225,
        "startChar": 8,
        "endLine": 225,
        "endChar": 30
      },
      "revId": "ca8258fd4dca9535b3c09fb4fb2cf20734753031",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d7257436_0fd017a5",
        "filename": "libc/malloc_hooks/malloc_hooks.cpp",
        "patchSetId": 1
      },
      "lineNbr": 225,
      "author": {
        "id": 1268571
      },
      "writtenOn": "2020-02-04T15:56:12Z",
      "side": 1,
      "message": "Ah, thanks! Sorry for the noise.",
      "parentUuid": "d449fa35_302c9460",
      "range": {
        "startLine": 225,
        "startChar": 8,
        "endLine": 225,
        "endChar": 30
      },
      "revId": "ca8258fd4dca9535b3c09fb4fb2cf20734753031",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}