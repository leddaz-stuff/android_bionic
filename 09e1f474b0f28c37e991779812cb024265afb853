{
  "comments": [
    {
      "key": {
        "uuid": "c19b530e_fda926be",
        "filename": "libc/dns/resolv/res_send.c",
        "patchSetId": 1
      },
      "lineNbr": 1011,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2018-06-18T15:06:21Z",
      "side": 1,
      "message": "the old code would update the timeout if it retried.\n\nswitching to ppoll instead of poll will let you reuse the existing timespec-based timeout code.\n\notherwise, you can just put TEMP_FAILURE_RETRY around the call to poll and lose the goto.",
      "range": {
        "startLine": 1011,
        "startChar": 23,
        "endLine": 1011,
        "endChar": 36
      },
      "revId": "09e1f474b0f28c37e991779812cb024265afb853",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1448eec4_b503624f",
        "filename": "libc/dns/resolv/res_send.c",
        "patchSetId": 1
      },
      "lineNbr": 1011,
      "author": {
        "id": 1273909
      },
      "writtenOn": "2018-06-26T04:48:34Z",
      "side": 1,
      "message": "I opted for the simplicity of TEMP_FAILURE_RETRY().\n\nI will switch to ppoll() in case you think there might be callers of this code for which not adjusting the timeout after a trapped signal would lead to incorrect behavior.",
      "parentUuid": "c19b530e_fda926be",
      "range": {
        "startLine": 1011,
        "startChar": 23,
        "endLine": 1011,
        "endChar": 36
      },
      "revId": "09e1f474b0f28c37e991779812cb024265afb853",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "329b6add_20f5db1c",
        "filename": "libc/dns/resolv/res_send.c",
        "patchSetId": 1
      },
      "lineNbr": 1011,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2018-06-26T17:09:43Z",
      "side": 1,
      "message": "potentially this means that anyone doing DNS might never timeout, depending on unrelated things happening in the system. seems undesirable?",
      "parentUuid": "1448eec4_b503624f",
      "range": {
        "startLine": 1011,
        "startChar": 23,
        "endLine": 1011,
        "endChar": 36
      },
      "revId": "09e1f474b0f28c37e991779812cb024265afb853",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9cd4dea0_6b5681e7",
        "filename": "libc/dns/resolv/res_send.c",
        "patchSetId": 1
      },
      "lineNbr": 1011,
      "author": {
        "id": 1273909
      },
      "writtenOn": "2018-06-27T08:23:10Z",
      "side": 1,
      "message": "Isn\u0027t netd the only actual caller of this code? And we\u0027re even going to move the entire resolver into netd...\n\nThough the fix you proposed seems very simple. I didn\u0027t know that the ppoll() syscall modified its timespec argument; the manpage says that the glibc wrapper hides this behavior by making a copy.",
      "parentUuid": "329b6add_20f5db1c",
      "range": {
        "startLine": 1011,
        "startChar": 23,
        "endLine": 1011,
        "endChar": 36
      },
      "revId": "09e1f474b0f28c37e991779812cb024265afb853",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "164e1f41_914bc41b",
        "filename": "libc/dns/resolv/res_send.c",
        "patchSetId": 1
      },
      "lineNbr": 1030,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2018-06-18T15:06:21Z",
      "side": 1,
      "message": "indentation",
      "revId": "09e1f474b0f28c37e991779812cb024265afb853",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9883bab5_5ede6b74",
        "filename": "libc/dns/resolv/res_send.c",
        "patchSetId": 1
      },
      "lineNbr": 1030,
      "author": {
        "id": 1273909
      },
      "writtenOn": "2018-06-26T04:48:34Z",
      "side": 1,
      "message": "ugh, forgot to disable tab expansion!",
      "parentUuid": "164e1f41_914bc41b",
      "revId": "09e1f474b0f28c37e991779812cb024265afb853",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3716082a_7452bd2f",
        "filename": "libc/dns/resolv/res_send.c",
        "patchSetId": 1
      },
      "lineNbr": 1031,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2018-06-18T15:06:21Z",
      "side": 1,
      "message": "here too.",
      "revId": "09e1f474b0f28c37e991779812cb024265afb853",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "004c1eef_1f2700b1",
        "filename": "libc/dns/resolv/res_send.c",
        "patchSetId": 1
      },
      "lineNbr": 1031,
      "author": {
        "id": 1273909
      },
      "writtenOn": "2018-06-27T08:23:10Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "3716082a_7452bd2f",
      "revId": "09e1f474b0f28c37e991779812cb024265afb853",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9e4bf60a_f33d9077",
        "filename": "libc/dns/resolv/res_send.c",
        "patchSetId": 1
      },
      "lineNbr": 1031,
      "author": {
        "id": 1273909
      },
      "writtenOn": "2018-06-27T08:23:10Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "3716082a_7452bd2f",
      "revId": "09e1f474b0f28c37e991779812cb024265afb853",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}