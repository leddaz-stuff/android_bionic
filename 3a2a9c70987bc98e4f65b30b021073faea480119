{
  "comments": [
    {
      "key": {
        "uuid": "1d63054a_056ede7f",
        "filename": "libc/tools/genseccomp.py",
        "patchSetId": 1
      },
      "lineNbr": 49,
      "author": {
        "id": 1058860
      },
      "writtenOn": "2018-08-03T18:02:24Z",
      "side": 1,
      "message": "The clang-stable path is going to always be present - so people to get to a clang-format without worrying about build numbers.  Hence the rest of the function that finds the latest prebuilts will be unused.",
      "revId": "3a2a9c70987bc98e4f65b30b021073faea480119",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b78b318e_0d93c941",
        "filename": "libc/tools/genseccomp.py",
        "patchSetId": 1
      },
      "lineNbr": 49,
      "author": {
        "id": 1066743
      },
      "writtenOn": "2018-08-03T18:06:23Z",
      "side": 1,
      "message": "clang-stable will be present, but clang-stable/bin/clang is not currently present :(",
      "parentUuid": "1d63054a_056ede7f",
      "revId": "3a2a9c70987bc98e4f65b30b021073faea480119",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "25e08a07_5eb25b6c",
        "filename": "libc/tools/genseccomp.py",
        "patchSetId": 1
      },
      "lineNbr": 49,
      "author": {
        "id": 1058860
      },
      "writtenOn": "2018-08-03T18:30:42Z",
      "side": 1,
      "message": "Aah, I see. srhines@ updated clang-stable from being a symlink to just hold clang-format recently.  I am not sure if omitting clang binary was intentional or accidental.",
      "parentUuid": "b78b318e_0d93c941",
      "revId": "3a2a9c70987bc98e4f65b30b021073faea480119",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "937958d7_fde4a7e4",
        "filename": "libc/tools/genseccomp.py",
        "patchSetId": 1
      },
      "lineNbr": 53,
      "author": {
        "id": 1058860
      },
      "writtenOn": "2018-08-03T18:02:24Z",
      "side": 1,
      "message": "Starting from the current prebuilds, we started using \u0027clang-r\u003csvn-revision-no\u003e\u0027 instead of \u0027clang-\u003cbuild-id-from-build-server\u003e\u0027.  So you should include \u0027r\u0027 in the regex.  There\u0027ll always be a \u0027clang-rXYZ\u0027 in the prebuilts and it\u0027ll be strictly newer than anything with the old numbering scheme.",
      "range": {
        "startLine": 53,
        "startChar": 55,
        "endLine": 53,
        "endChar": 77
      },
      "revId": "3a2a9c70987bc98e4f65b30b021073faea480119",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e56dce67_db56f8b8",
        "filename": "libc/tools/genseccomp.py",
        "patchSetId": 1
      },
      "lineNbr": 53,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2018-08-03T18:05:50Z",
      "side": 1,
      "message": "on the bug, srhines said they should get the clang path from the build system. any idea how that works? (i\u0027d ask dwillemsen or srhines but they\u0027re both out.)",
      "parentUuid": "937958d7_fde4a7e4",
      "range": {
        "startLine": 53,
        "startChar": 55,
        "endLine": 53,
        "endChar": 77
      },
      "revId": "3a2a9c70987bc98e4f65b30b021073faea480119",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "22ff7f23_82bfbe63",
        "filename": "libc/tools/genseccomp.py",
        "patchSetId": 1
      },
      "lineNbr": 53,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2018-08-03T18:06:19Z",
      "side": 1,
      "message": "\"the bug\" being http://b/66509804.",
      "parentUuid": "e56dce67_db56f8b8",
      "range": {
        "startLine": 53,
        "startChar": 55,
        "endLine": 53,
        "endChar": 77
      },
      "revId": "3a2a9c70987bc98e4f65b30b021073faea480119",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "93b1811e_2fdfe458",
        "filename": "libc/tools/genseccomp.py",
        "patchSetId": 1
      },
      "lineNbr": 53,
      "author": {
        "id": 1066743
      },
      "writtenOn": "2018-08-03T18:06:23Z",
      "side": 1,
      "message": "ah! i was intentionally avoiding the r one because the version number was smaller. but \u0027r\u0027 collates after the digits, so that it will still work :D\n\nI\u0027ll add some copious comments.",
      "parentUuid": "937958d7_fde4a7e4",
      "range": {
        "startLine": 53,
        "startChar": 55,
        "endLine": 53,
        "endChar": 77
      },
      "revId": "3a2a9c70987bc98e4f65b30b021073faea480119",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "fd1edcbe_00d57a91",
        "filename": "libc/tools/genseccomp.py",
        "patchSetId": 1
      },
      "lineNbr": 53,
      "author": {
        "id": 1058860
      },
      "writtenOn": "2018-08-03T18:30:42Z",
      "side": 1,
      "message": "I considered suggesting to parse build/soong/cc/config/global.go.  It should have:\n    ClangDefaultVersion      \u003d \"clang-r328903\"\n\nAssuming someone gets notified when this script breaks (i.e. if soong variable\u0027s location or name gets changed), you can use that.",
      "parentUuid": "93b1811e_2fdfe458",
      "range": {
        "startLine": 53,
        "startChar": 55,
        "endLine": 53,
        "endChar": 77
      },
      "revId": "3a2a9c70987bc98e4f65b30b021073faea480119",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "613ad166_815267e5",
        "filename": "libc/tools/genseccomp.py",
        "patchSetId": 1
      },
      "lineNbr": 53,
      "author": {
        "id": 1066743
      },
      "writtenOn": "2018-08-03T20:02:04Z",
      "side": 1,
      "message": "I tried using ninja to parse the generated .ninja file so that it could inspect it regardless of the structure of this one file, but failed. so i went ahead with your suggestion.\n\ni think this is as far as we can go for this one change, but next i\u0027m going to try to make an Android.bp change such that this is always run during build to avoid having to generate the .cc files by hand.",
      "parentUuid": "fd1edcbe_00d57a91",
      "range": {
        "startLine": 53,
        "startChar": 55,
        "endLine": 53,
        "endChar": 77
      },
      "revId": "3a2a9c70987bc98e4f65b30b021073faea480119",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}