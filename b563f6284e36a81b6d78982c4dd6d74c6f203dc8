{
  "comments": [
    {
      "key": {
        "uuid": "AAAJxn//+zw\u003d",
        "filename": "libc/bionic/pthread.c",
        "patchSetId": 1
      },
      "lineNbr": 188,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2012-10-03T16:36:39Z",
      "side": 1,
      "message": "where does this magic number come from?",
      "revId": "b563f6284e36a81b6d78982c4dd6d74c6f203dc8",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAJyH//+F0\u003d",
        "filename": "libc/bionic/pthread.c",
        "patchSetId": 1
      },
      "lineNbr": 188,
      "author": {
        "id": 1012356
      },
      "writtenOn": "2012-10-03T18:30:37Z",
      "side": 1,
      "message": "It is just a random value I made up. I tried reading from /dev/urandom here, but it always caused segfaults. I assumed that since libc is not mapped, it is not possible to do disk I/O here.",
      "parentUuid": "AAAJxn//+zw\u003d",
      "revId": "b563f6284e36a81b6d78982c4dd6d74c6f203dc8",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAJ7H//9ns\u003d",
        "filename": "libc/bionic/pthread.c",
        "patchSetId": 1
      },
      "lineNbr": 188,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2012-10-09T19:18:38Z",
      "side": 1,
      "message": "sounds like this ought to be fixable though?",
      "parentUuid": "AAAJyH//+F0\u003d",
      "revId": "b563f6284e36a81b6d78982c4dd6d74c6f203dc8",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAJ7H//9no\u003d",
        "filename": "libc/bionic/ssp.c",
        "patchSetId": 1
      },
      "lineNbr": 40,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2012-10-09T19:18:38Z",
      "side": 1,
      "message": "we might want to keep the global anyway, so we can support binaries built with either x86 GCC configuration.",
      "revId": "b563f6284e36a81b6d78982c4dd6d74c6f203dc8",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAJ9X///3A\u003d",
        "filename": "libc/private/bionic_tls.h",
        "patchSetId": 1
      },
      "lineNbr": 64,
      "author": {
        "id": 1011068
      },
      "writtenOn": "2012-10-09T07:35:30Z",
      "side": 1,
      "message": "What about change this as:\n#define TLS_SLOT_SELF               0\n\n#define TLS_SLOT_THREAD_ID          (TLS_SLOT_SELF + 1)\n\n\n#ifdef THREAD_HAS_STACK_GUARD_X86\n\n  #define TLS_SLOT_X86_STACK_GUARD    (TLS_SLOT_THREAD_ID + 1)\n\n#else\n\n  #define TLS_SLOT_X86_STACK_GUARD    (TLS_SLOT_THREAD_ID)\n\n#endif\n\n#define TLS_SLOT_ERRNO          \t(TLS_SLOT_X86_STACK_GUARD + 1)\n\n#define TLS_SLOT_OPENGL_API         (TLS_SLOT_ERRNO + 1)\n\n#define TLS_SLOT_OPENGL             (TLS_SLOT_OPENGL_API + 1)\n\n#define TLS_SLOT_PREALLOC_MAX\t\t(TLS_SLOT_OPENGL + 1)\n\n\n\n#define TLS_DEFAULT_ALLOC_MAP\t\t(1 \u003c\u003c TLS_SLOT_PREALLOC_MAX - 1)\n\nAnd remove the change in TLSMAP?",
      "revId": "b563f6284e36a81b6d78982c4dd6d74c6f203dc8",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAJ63//9rE\u003d",
        "filename": "libc/private/bionic_tls.h",
        "patchSetId": 1
      },
      "lineNbr": 64,
      "author": {
        "id": 1012356
      },
      "writtenOn": "2012-10-09T14:51:39Z",
      "side": 1,
      "message": "GCC looks specifically at gs:%20 for stack canary, which is the sixth slot in tls map. Also, when I was testing, OPENGL* has to be 3 and 4. Changing these causes problems with graphics.",
      "parentUuid": "AAAJ9X///3A\u003d",
      "revId": "b563f6284e36a81b6d78982c4dd6d74c6f203dc8",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAJ7H//9nw\u003d",
        "filename": "libc/private/bionic_tls.h",
        "patchSetId": 1
      },
      "lineNbr": 64,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2012-10-09T19:18:38Z",
      "side": 1,
      "message": "how about we just \"waste\" a slot on other architectures? i\u0027d rather keep things simple and avoid all the conditionals.",
      "parentUuid": "AAAJ63//9rE\u003d",
      "revId": "b563f6284e36a81b6d78982c4dd6d74c6f203dc8",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAKBX////8\u003d",
        "filename": "libc/private/bionic_tls.h",
        "patchSetId": 1
      },
      "lineNbr": 64,
      "author": {
        "id": 1011068
      },
      "writtenOn": "2012-10-10T01:15:46Z",
      "side": 1,
      "message": "Sounds good. We may need one more slot for x86 sysenter/sysexit in the near future. :).",
      "parentUuid": "AAAJ7H//9nw\u003d",
      "revId": "b563f6284e36a81b6d78982c4dd6d74c6f203dc8",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}