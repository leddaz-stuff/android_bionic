{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "8acd929c_ed1d30be",
        "filename": "libc/include/android/set_abort_message.h",
        "patchSetId": 14
      },
      "lineNbr": 71,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2024-02-09T01:25:44Z",
      "side": 1,
      "message": "i think what i really dislike about this is probably just the word \"STRING\" and its [unintended] connotations. how about \"RAW\"/\"HEX\" or \"PRINTABLE\"/\"BINARY\"? and do we really want HEX or do we want something like base64? and isn\u0027t it weird that this is meaningless in the proto format, only the [deprecated] text format? should we just not include this in the text format, as a carrot/stick to encourage peopleÂ to move over? or maybe this is actually a \"show as text in the text format\" switch? so \"arbitrary bytes that you can get out of the proto\" is the special case, and \"this is utf8 that shows up in the text\" is the default?\n\n(and it\u0027s really a _display_ type.)\n\n(also i\u0027d leave this documentation in the enum, not here.)",
      "range": {
        "startLine": 71,
        "startChar": 19,
        "endLine": 71,
        "endChar": 38
      },
      "revId": "d60cc9cdf3f0327bd32fae4a8fde90429dbef14b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "186c115d_982fb1b5",
        "filename": "libc/include/android/set_abort_message.h",
        "patchSetId": 14
      },
      "lineNbr": 71,
      "author": {
        "id": 1268571
      },
      "writtenOn": "2024-02-09T04:43:21Z",
      "side": 1,
      "message": "it\u0027s not fully meaningless in the proto, because some runtimes use different types for string vs bytes, C++ is just dumb in that it doesn\u0027t have that :) For instance, Go: https://protobuf.dev/reference/go/go-generated/#oneof. Also, the runtime is supposed to validate utf8-ness of `strings` unless told otherwise: https://protobuf.dev/editions/features/#utf8_validation\n\nI like PRINTABLE / BINARY.",
      "parentUuid": "8acd929c_ed1d30be",
      "range": {
        "startLine": 71,
        "startChar": 19,
        "endLine": 71,
        "endChar": 38
      },
      "revId": "d60cc9cdf3f0327bd32fae4a8fde90429dbef14b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3cafd25d_13b6e1c4",
        "filename": "libc/include/android/set_abort_message.h",
        "patchSetId": 14
      },
      "lineNbr": 71,
      "author": {
        "id": 1268571
      },
      "writtenOn": "2024-02-09T21:20:50Z",
      "side": 1,
      "message": "\u003e (and it\u0027s really a display type.)\n\njust to double clarify: it makes a difference in the proto output in that it uses a `string` or a `bytes` field there.\n\n\u003e (also i\u0027d leave this documentation in the enum, not here.)\n\n@danalbert@google.com please advise. your comment \"IDEs aren\u0027t going to show anything more than the docs for this function, so that\u0027s a very helpful hint if the developer isn\u0027t looking at the header or online API docs\" made me think it\u0027s a good idea to  repeat the doc in here.",
      "parentUuid": "186c115d_982fb1b5",
      "range": {
        "startLine": 71,
        "startChar": 19,
        "endLine": 71,
        "endChar": 38
      },
      "revId": "d60cc9cdf3f0327bd32fae4a8fde90429dbef14b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c0fa5427_889d4d11",
        "filename": "libc/include/android/set_abort_message.h",
        "patchSetId": 14
      },
      "lineNbr": 71,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2024-02-09T21:33:37Z",
      "side": 1,
      "message": "\u003e just to double clarify: it makes a difference in the proto output in that it uses a string or a bytes field there.\n\ni still think that\u0027s a bug though? i\u0027d still argue for \"all bytes, all the time\" unless we can confirm _in advance_ that it\u0027s legit utf8 (and i don\u0027t think we want to pay for that anyway).\n\nletting people do something that only fails when they try to collect their tombstone just isn\u0027t helpful. (i mean, \"this is invalid utf8\" could even be the bug they\u0027re chasing!)",
      "parentUuid": "3cafd25d_13b6e1c4",
      "range": {
        "startLine": 71,
        "startChar": 19,
        "endLine": 71,
        "endChar": 38
      },
      "revId": "d60cc9cdf3f0327bd32fae4a8fde90429dbef14b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}