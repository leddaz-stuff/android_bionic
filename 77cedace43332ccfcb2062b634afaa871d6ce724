{
  "comments": [
    {
      "key": {
        "uuid": "069dc1be_92c807d0",
        "filename": "benchmarks/stdio_benchmark.cpp",
        "patchSetId": 1
      },
      "lineNbr": 87,
      "author": {
        "id": 1019050
      },
      "writtenOn": "2017-08-09T16:56:36Z",
      "side": 1,
      "message": "I\u0027m not sure how useful this is since /proc/version might change between runs, so you can\u0027t compare this data between versions.\n\nIs it possible to use /dev/zero and read a specific number of bytes?",
      "range": {
        "startLine": 87,
        "startChar": 21,
        "endLine": 87,
        "endChar": 37
      },
      "revId": "77cedace43332ccfcb2062b634afaa871d6ce724",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "edfad2eb_09fff3c9",
        "filename": "benchmarks/string_benchmark.cpp",
        "patchSetId": 1
      },
      "lineNbr": 282,
      "author": {
        "id": 1019050
      },
      "writtenOn": "2017-08-09T16:56:36Z",
      "side": 1,
      "message": "I think you can remove the volatile stuff if you change the code:\n\nif (strchr(...) !\u003d nullptr) {\n  abort();\n}\n\nAssuming that this should always return nullptr. You can also use this technique to avoid the volatile in the code above.",
      "range": {
        "startLine": 282,
        "startChar": 35,
        "endLine": 282,
        "endChar": 66
      },
      "revId": "77cedace43332ccfcb2062b634afaa871d6ce724",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e00f8dd2_0c56bfbb",
        "filename": "benchmarks/suites/full.xml",
        "patchSetId": 1
      },
      "lineNbr": 283,
      "author": {
        "id": 1019050
      },
      "writtenOn": "2017-08-09T16:56:36Z",
      "side": 1,
      "message": "These aren\u0027t in the CL, did you forget to upload a change?",
      "range": {
        "startLine": 283,
        "startChar": 8,
        "endLine": 283,
        "endChar": 29
      },
      "revId": "77cedace43332ccfcb2062b634afaa871d6ce724",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "fc45abfc_3525673f",
        "filename": "benchmarks/util.cpp",
        "patchSetId": 1
      },
      "lineNbr": 53,
      "author": {
        "id": 1019050
      },
      "writtenOn": "2017-08-09T16:56:36Z",
      "side": 1,
      "message": "Is there any issue here if wchar_t is not 1 byte? I think Android uses 1 byte.\n\nI think this is okay, but I\u0027m not positive.",
      "range": {
        "startLine": 53,
        "startChar": 14,
        "endLine": 53,
        "endChar": 36
      },
      "revId": "77cedace43332ccfcb2062b634afaa871d6ce724",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "dad05d21_9cca9a0b",
        "filename": "benchmarks/util.cpp",
        "patchSetId": 1
      },
      "lineNbr": 54,
      "author": {
        "id": 1019050
      },
      "writtenOn": "2017-08-09T16:56:36Z",
      "side": 1,
      "message": "Use C++ casts (like reinterpret_cast\u003c\u003e), same with the char * cast.",
      "range": {
        "startLine": 54,
        "startChar": 9,
        "endLine": 54,
        "endChar": 19
      },
      "revId": "77cedace43332ccfcb2062b634afaa871d6ce724",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    }
  ]
}