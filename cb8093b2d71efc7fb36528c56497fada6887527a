{
  "comments": [
    {
      "key": {
        "uuid": "42ce32f9_dbd69f64",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 11,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2018-08-08T18:26:24Z",
      "side": 1,
      "message": "how big is the difference? i\u0027d rather just use the same routines everywhere for consistency. especially since you already found that the x86-64 routines fail some of the tests.",
      "range": {
        "startLine": 10,
        "startChar": 21,
        "endLine": 11,
        "endChar": 41
      },
      "revId": "cb8093b2d71efc7fb36528c56497fada6887527a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "27911001_eab7643c",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 11,
      "author": {
        "id": 1331125
      },
      "writtenOn": "2018-08-08T19:23:47Z",
      "side": 1,
      "message": "On x86_64 I am seeing:\n          throughput   latency\nlog            1.08x     0.95x\npow            0.77x     0.89x\n\nSo log is pretty much equal in performance, while pow is roughly 10% slower.",
      "parentUuid": "42ce32f9_dbd69f64",
      "range": {
        "startLine": 10,
        "startChar": 21,
        "endLine": 11,
        "endChar": 41
      },
      "revId": "cb8093b2d71efc7fb36528c56497fada6887527a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e2e61ab9_ac3d0954",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 11,
      "author": {
        "id": 1333281
      },
      "writtenOn": "2018-08-10T12:29:15Z",
      "side": 1,
      "message": "I guess this is the non-FMA variant, if FMA is enabled it should beat the x64 assembly code.",
      "parentUuid": "27911001_eab7643c",
      "range": {
        "startLine": 10,
        "startChar": 21,
        "endLine": 11,
        "endChar": 41
      },
      "revId": "cb8093b2d71efc7fb36528c56497fada6887527a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "88fa51a2_9d87f9ee",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 11,
      "author": {
        "id": 1331125
      },
      "writtenOn": "2018-08-10T12:40:13Z",
      "side": 1,
      "message": "I will recheck, but last time I tried to explicit add HAVE_FAST_FMA and -mavx2 without much success.",
      "parentUuid": "e2e61ab9_ac3d0954",
      "range": {
        "startLine": 10,
        "startChar": 21,
        "endLine": 11,
        "endChar": 41
      },
      "revId": "cb8093b2d71efc7fb36528c56497fada6887527a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "30d26a14_5ab792c1",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 11,
      "author": {
        "id": 1333281
      },
      "writtenOn": "2018-08-10T14:12:18Z",
      "side": 1,
      "message": "Did you use -O2 -ffp-contract\u003dfast -mavx2 -mfma -DHAVE_FAST_FMA\u003d1?",
      "parentUuid": "88fa51a2_9d87f9ee",
      "range": {
        "startLine": 10,
        "startChar": 21,
        "endLine": 11,
        "endChar": 41
      },
      "revId": "cb8093b2d71efc7fb36528c56497fada6887527a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8de9c838_ff6a09a2",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 11,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2018-08-10T15:18:03Z",
      "side": 1,
      "message": "all architectures get these flags:\n\n    cflags: [\n        \"-Werror\",\n        \"-O2\",\n        \"-DWANT_ROUNDING\u003d0\",\n        \"-DWANT_ERRNO\u003d0\",\n        \"-DFLT_EVAL_METHOD\u003d0\",\n        \"-ffp-contract\u003dfast\",\n    ],\n\nbut currently only arm64 has HAVE_FAST_FMA:\n\n    arch: {\n        arm64: {\n            cflags: [\n                \"-DHAVE_FAST_FMA\u003d1\",\n            ],\n        },\n    },\n\nnote that the Android x86-64 ABI does not include AVX2:\n\n  https://developer.android.com/ndk/guides/abis#86-64\n\nyou\u0027d need to add avx2 to\n\n\tx86_64ArchFeatureCflags \u003d map[string][]string{\n\t\t\"ssse3\":  []string{\"-DUSE_SSSE3\", \"-mssse3\"},\n\t\t\"sse4\":   []string{\"-msse4\"},\n\t\t\"sse4_1\": []string{\"-msse4.1\"},\n\t\t\"sse4_2\": []string{\"-msse4.2\"},\n\t\t\"popcnt\": []string{\"-mpopcnt\"},\n\t\t\"avx\":    []string{\"-mavx\"},\n\t\t\"aes_ni\": []string{\"-maes\"},\n\t}\n\nin build/soong/cc/config/x86_64_device.go.\n\nalthough it looks like we do already automatically set -march\u003dcore-avx2 for haswell processors:\n\n\tx86_64ArchVariantCflags \u003d map[string][]string{\n\t\t\"\": []string{\n\t\t\t\"-march\u003dx86-64\",\n\t\t},\n\t\t\"haswell\": []string{\n\t\t\t\"-march\u003dcore-avx2\",\n\t\t},",
      "parentUuid": "30d26a14_5ab792c1",
      "range": {
        "startLine": 10,
        "startChar": 21,
        "endLine": 11,
        "endChar": 41
      },
      "revId": "cb8093b2d71efc7fb36528c56497fada6887527a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9d7669ca_5f8b9189",
        "filename": "libm/Android.bp",
        "patchSetId": 1
      },
      "lineNbr": 273,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2018-08-08T18:24:45Z",
      "side": 1,
      "message": "just do this in the existing fake-long-double.cpp?",
      "revId": "cb8093b2d71efc7fb36528c56497fada6887527a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "aca68745_fe81e562",
        "filename": "libm/Android.bp",
        "patchSetId": 1
      },
      "lineNbr": 273,
      "author": {
        "id": 1331125
      },
      "writtenOn": "2018-08-08T19:23:47Z",
      "side": 1,
      "message": "I added a per architecture one mainly because my initial idea of no interpose pow and log for x86. If the idea is to use them on x86, this could be simplified to use fake-long-double.cpp.",
      "parentUuid": "9d7669ca_5f8b9189",
      "revId": "cb8093b2d71efc7fb36528c56497fada6887527a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "92ef57ff_cbf346e5",
        "filename": "libm/Android.bp",
        "patchSetId": 1
      },
      "lineNbr": 273,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2018-08-08T20:06:49Z",
      "side": 1,
      "message": "i think we should, especially because the existing ones fail tests.",
      "parentUuid": "aca68745_fe81e562",
      "revId": "cb8093b2d71efc7fb36528c56497fada6887527a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6856940e_f4675634",
        "filename": "libm/Android.bp",
        "patchSetId": 1
      },
      "lineNbr": 273,
      "author": {
        "id": 1331125
      },
      "writtenOn": "2018-08-08T20:28:41Z",
      "side": 1,
      "message": "Right, I will adjust the patch to include all double precision routine from arm-optimized-routines for all architectures.",
      "parentUuid": "92ef57ff_cbf346e5",
      "revId": "cb8093b2d71efc7fb36528c56497fada6887527a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "51e51dc1_0eb575f3",
        "filename": "libm/Android.bp",
        "patchSetId": 1
      },
      "lineNbr": 303,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2018-08-08T18:24:45Z",
      "side": 1,
      "message": "this should never be needed because we\u0027ll get the msun/ld128 implementations?",
      "revId": "cb8093b2d71efc7fb36528c56497fada6887527a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e470ab56_aa5ba21e",
        "filename": "libm/Android.bp",
        "patchSetId": 1
      },
      "lineNbr": 303,
      "author": {
        "id": 1331125
      },
      "writtenOn": "2018-08-08T19:23:47Z",
      "side": 1,
      "message": "Indeed this is not required for arm64. I will fix it.",
      "parentUuid": "51e51dc1_0eb575f3",
      "revId": "cb8093b2d71efc7fb36528c56497fada6887527a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0a1e7554_dc4c3286",
        "filename": "libm/Android.bp",
        "patchSetId": 1
      },
      "lineNbr": 448,
      "author": {
        "id": 1331125
      },
      "writtenOn": "2018-08-08T19:23:47Z",
      "side": 1,
      "message": "It does not need this as well.",
      "revId": "cb8093b2d71efc7fb36528c56497fada6887527a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    }
  ]
}