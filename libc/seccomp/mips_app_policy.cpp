// Autogenerated file - edit at your peril!!

#include <linux/filter.h>
#include <errno.h>

#include "seccomp_bpfs.h"
const sock_filter mips_app_filter[] = {
BPF_JUMP(BPF_JMP|BPF_JGE|BPF_K, 4001, 0, 124),
BPF_JUMP(BPF_JMP|BPF_JGE|BPF_K, 4151, 61, 0),
BPF_JUMP(BPF_JMP|BPF_JGE|BPF_K, 4066, 31, 0),
BPF_JUMP(BPF_JMP|BPF_JGE|BPF_K, 4041, 15, 0),
BPF_JUMP(BPF_JMP|BPF_JGE|BPF_K, 4024, 7, 0),
BPF_JUMP(BPF_JMP|BPF_JGE|BPF_K, 4010, 3, 0),
BPF_JUMP(BPF_JMP|BPF_JGE|BPF_K, 4008, 1, 0),
BPF_JUMP(BPF_JMP|BPF_JGE|BPF_K, 4007, 117, 116), //exit|fork|read|write|open|close
BPF_JUMP(BPF_JMP|BPF_JGE|BPF_K, 4009, 116, 115), //creat
BPF_JUMP(BPF_JMP|BPF_JGE|BPF_K, 4019, 1, 0),
BPF_JUMP(BPF_JMP|BPF_JGE|BPF_K, 4013, 114, 113), //unlink|execve|chdir
BPF_JUMP(BPF_JMP|BPF_JGE|BPF_K, 4021, 113, 112), //lseek|getpid
BPF_JUMP(BPF_JMP|BPF_JGE|BPF_K, 4033, 3, 0),
BPF_JUMP(BPF_JMP|BPF_JGE|BPF_K, 4026, 1, 0),
BPF_JUMP(BPF_JMP|BPF_JGE|BPF_K, 4025, 110, 109), //getuid
BPF_JUMP(BPF_JMP|BPF_JGE|BPF_K, 4027, 109, 108), //ptrace
BPF_JUMP(BPF_JMP|BPF_JGE|BPF_K, 4036, 1, 0),
BPF_JUMP(BPF_JMP|BPF_JGE|BPF_K, 4034, 107, 106), //access
BPF_JUMP(BPF_JMP|BPF_JGE|BPF_K, 4040, 106, 105), //sync|kill|rename|mkdir
BPF_JUMP(BPF_JMP|BPF_JGE|BPF_K, 4054, 7, 0),
BPF_JUMP(BPF_JMP|BPF_JGE|BPF_K, 4047, 3, 0),
BPF_JUMP(BPF_JMP|BPF_JGE|BPF_K, 4045, 1, 0),
BPF_JUMP(BPF_JMP|BPF_JGE|BPF_K, 4044, 102, 101), //dup|pipe|times
BPF_JUMP(BPF_JMP|BPF_JGE|BPF_K, 4046, 101, 100), //brk
BPF_JUMP(BPF_JMP|BPF_JGE|BPF_K, 4049, 1, 0),
BPF_JUMP(BPF_JMP|BPF_JGE|BPF_K, 4048, 99, 98), //getgid
BPF_JUMP(BPF_JMP|BPF_JGE|BPF_K, 4051, 98, 97), //geteuid|getegid
BPF_JUMP(BPF_JMP|BPF_JGE|BPF_K, 4060, 3, 0),
BPF_JUMP(BPF_JMP|BPF_JGE|BPF_K, 4057, 1, 0),
BPF_JUMP(BPF_JMP|BPF_JGE|BPF_K, 4056, 95, 94), //ioctl|fcntl
BPF_JUMP(BPF_JMP|BPF_JGE|BPF_K, 4058, 94, 93), //setpgid
BPF_JUMP(BPF_JMP|BPF_JGE|BPF_K, 4063, 1, 0),
BPF_JUMP(BPF_JMP|BPF_JGE|BPF_K, 4061, 92, 91), //umask
BPF_JUMP(BPF_JMP|BPF_JGE|BPF_K, 4065, 91, 90), //dup2|getppid
BPF_JUMP(BPF_JMP|BPF_JGE|BPF_K, 4116, 15, 0),
BPF_JUMP(BPF_JMP|BPF_JGE|BPF_K, 4090, 7, 0),
BPF_JUMP(BPF_JMP|BPF_JGE|BPF_K, 4075, 3, 0),
BPF_JUMP(BPF_JMP|BPF_JGE|BPF_K, 4071, 1, 0),
BPF_JUMP(BPF_JMP|BPF_JGE|BPF_K, 4068, 86, 85), //setsid|sigaction
BPF_JUMP(BPF_JMP|BPF_JGE|BPF_K, 4072, 85, 84), //setregid
BPF_JUMP(BPF_JMP|BPF_JGE|BPF_K, 4080, 1, 0),
BPF_JUMP(BPF_JMP|BPF_JGE|BPF_K, 4079, 83, 82), //setrlimit|getrlimit|getrusage|gettimeofday
BPF_JUMP(BPF_JMP|BPF_JGE|BPF_K, 4081, 82, 81), //getgroups
BPF_JUMP(BPF_JMP|BPF_JGE|BPF_K, 4104, 3, 0),
BPF_JUMP(BPF_JMP|BPF_JGE|BPF_K, 4094, 1, 0),
BPF_JUMP(BPF_JMP|BPF_JGE|BPF_K, 4093, 79, 78), //mmap|munmap|truncate
BPF_JUMP(BPF_JMP|BPF_JGE|BPF_K, 4098, 78, 77), //fchmod|fchown|getpriority|setpriority
BPF_JUMP(BPF_JMP|BPF_JGE|BPF_K, 4114, 1, 0),
BPF_JUMP(BPF_JMP|BPF_JGE|BPF_K, 4106, 76, 75), //setitimer|getitimer
BPF_JUMP(BPF_JMP|BPF_JGE|BPF_K, 4115, 75, 74), //wait4
BPF_JUMP(BPF_JMP|BPF_JGE|BPF_K, 4131, 7, 0),
BPF_JUMP(BPF_JMP|BPF_JGE|BPF_K, 4122, 3, 0),
BPF_JUMP(BPF_JMP|BPF_JGE|BPF_K, 4118, 1, 0),
BPF_JUMP(BPF_JMP|BPF_JGE|BPF_K, 4117, 71, 70), //sysinfo
BPF_JUMP(BPF_JMP|BPF_JGE|BPF_K, 4119, 70, 69), //fsync
BPF_JUMP(BPF_JMP|BPF_JGE|BPF_K, 4125, 1, 0),
BPF_JUMP(BPF_JMP|BPF_JGE|BPF_K, 4123, 68, 67), //uname
BPF_JUMP(BPF_JMP|BPF_JGE|BPF_K, 4126, 67, 66), //mprotect
BPF_JUMP(BPF_JMP|BPF_JGE|BPF_K, 4140, 3, 0),
BPF_JUMP(BPF_JMP|BPF_JGE|BPF_K, 4136, 1, 0),
BPF_JUMP(BPF_JMP|BPF_JGE|BPF_K, 4134, 64, 63), //quotactl|getpgid|fchdir
BPF_JUMP(BPF_JMP|BPF_JGE|BPF_K, 4137, 63, 62), //personality
BPF_JUMP(BPF_JMP|BPF_JGE|BPF_K, 4148, 62, 61), //_llseek|getdents|_newselect|flock|msync|readv|writev|cacheflush
BPF_JUMP(BPF_JMP|BPF_JGE|BPF_K, 4246, 31, 0),
BPF_JUMP(BPF_JMP|BPF_JGE|BPF_K, 4194, 15, 0),
BPF_JUMP(BPF_JMP|BPF_JGE|BPF_K, 4179, 7, 0),
BPF_JUMP(BPF_JMP|BPF_JGE|BPF_K, 4169, 3, 0),
BPF_JUMP(BPF_JMP|BPF_JGE|BPF_K, 4154, 1, 0),
BPF_JUMP(BPF_JMP|BPF_JGE|BPF_K, 4153, 56, 55), //getsid|fdatasync
BPF_JUMP(BPF_JMP|BPF_JGE|BPF_K, 4168, 55, 54), //mlock|munlock|mlockall|munlockall|sched_setparam|sched_getparam|sched_setscheduler|sched_getscheduler|sched_yield|sched_get_priority_max|sched_get_priority_min|sched_rr_get_interval|nanosleep|mremap
BPF_JUMP(BPF_JMP|BPF_JGE|BPF_K, 4176, 1, 0),
BPF_JUMP(BPF_JMP|BPF_JGE|BPF_K, 4175, 53, 52), //bind|connect|getpeername|getsockname|getsockopt|listen
BPF_JUMP(BPF_JMP|BPF_JGE|BPF_K, 4178, 52, 51), //recvfrom|recvmsg
BPF_JUMP(BPF_JMP|BPF_JGE|BPF_K, 4188, 3, 0),
BPF_JUMP(BPF_JMP|BPF_JGE|BPF_K, 4186, 1, 0),
BPF_JUMP(BPF_JMP|BPF_JGE|BPF_K, 4185, 49, 48), //sendmsg|sendto|setsockopt|shutdown|socket|socketpair
BPF_JUMP(BPF_JMP|BPF_JGE|BPF_K, 4187, 48, 47), //getresuid
BPF_JUMP(BPF_JMP|BPF_JGE|BPF_K, 4191, 1, 0),
BPF_JUMP(BPF_JMP|BPF_JGE|BPF_K, 4189, 46, 45), //poll
BPF_JUMP(BPF_JMP|BPF_JGE|BPF_K, 4193, 45, 44), //getresgid|prctl
BPF_JUMP(BPF_JMP|BPF_JGE|BPF_K, 4217, 7, 0),
BPF_JUMP(BPF_JMP|BPF_JGE|BPF_K, 4206, 3, 0),
BPF_JUMP(BPF_JMP|BPF_JGE|BPF_K, 4203, 1, 0),
BPF_JUMP(BPF_JMP|BPF_JGE|BPF_K, 4202, 41, 40), //rt_sigaction|rt_sigprocmask|rt_sigpending|rt_sigtimedwait|rt_sigqueueinfo|rt_sigsuspend|pread64|pwrite64
BPF_JUMP(BPF_JMP|BPF_JGE|BPF_K, 4205, 40, 39), //getcwd|capget
BPF_JUMP(BPF_JMP|BPF_JGE|BPF_K, 4210, 1, 0),
BPF_JUMP(BPF_JMP|BPF_JGE|BPF_K, 4208, 38, 37), //sigaltstack|sendfile
BPF_JUMP(BPF_JMP|BPF_JGE|BPF_K, 4216, 37, 36), //mmap2|truncate64|ftruncate64|stat64|lstat64|fstat64
BPF_JUMP(BPF_JMP|BPF_JGE|BPF_K, 4237, 3, 0),
BPF_JUMP(BPF_JMP|BPF_JGE|BPF_K, 4223, 1, 0),
BPF_JUMP(BPF_JMP|BPF_JGE|BPF_K, 4221, 34, 33), //mincore|madvise|getdents64|fcntl64
BPF_JUMP(BPF_JMP|BPF_JGE|BPF_K, 4236, 33, 32), //readahead|setxattr|lsetxattr|fsetxattr|getxattr|lgetxattr|fgetxattr|listxattr|llistxattr|flistxattr|removexattr|lremovexattr|fremovexattr
BPF_JUMP(BPF_JMP|BPF_JGE|BPF_K, 4239, 1, 0),
BPF_JUMP(BPF_JMP|BPF_JGE|BPF_K, 4238, 31, 30), //sendfile64
BPF_JUMP(BPF_JMP|BPF_JGE|BPF_K, 4241, 30, 29), //sched_setaffinity|sched_getaffinity
BPF_JUMP(BPF_JMP|BPF_JGE|BPF_K, 4312, 15, 0),
BPF_JUMP(BPF_JMP|BPF_JGE|BPF_K, 4278, 7, 0),
BPF_JUMP(BPF_JMP|BPF_JGE|BPF_K, 4254, 3, 0),
BPF_JUMP(BPF_JMP|BPF_JGE|BPF_K, 4248, 1, 0),
BPF_JUMP(BPF_JMP|BPF_JGE|BPF_K, 4247, 25, 24), //exit_group
BPF_JUMP(BPF_JMP|BPF_JGE|BPF_K, 4253, 24, 23), //epoll_create|epoll_ctl|epoll_wait|remap_file_pages|set_tid_address
BPF_JUMP(BPF_JMP|BPF_JGE|BPF_K, 4263, 1, 0),
BPF_JUMP(BPF_JMP|BPF_JGE|BPF_K, 4262, 22, 21), //fadvise64|statfs64|fstatfs64|timer_create|timer_settime|timer_gettime|timer_getoverrun|timer_delete
BPF_JUMP(BPF_JMP|BPF_JGE|BPF_K, 4267, 21, 20), //clock_gettime|clock_getres|clock_nanosleep|tgkill
BPF_JUMP(BPF_JMP|BPF_JGE|BPF_K, 4288, 3, 0),
BPF_JUMP(BPF_JMP|BPF_JGE|BPF_K, 4283, 1, 0),
BPF_JUMP(BPF_JMP|BPF_JGE|BPF_K, 4279, 18, 17), //waitid
BPF_JUMP(BPF_JMP|BPF_JGE|BPF_K, 4287, 17, 16), //set_thread_area|inotify_init|inotify_add_watch|inotify_rm_watch
BPF_JUMP(BPF_JMP|BPF_JGE|BPF_K, 4293, 1, 0),
BPF_JUMP(BPF_JMP|BPF_JGE|BPF_K, 4292, 15, 14), //openat|mkdirat|mknodat|fchownat
BPF_JUMP(BPF_JMP|BPF_JGE|BPF_K, 4308, 14, 13), //fstatat64|unlinkat|renameat|linkat|symlinkat|readlinkat|fchmodat|faccessat|pselect6|ppoll|unshare|splice|sync_file_range|tee|vmsplice
BPF_JUMP(BPF_JMP|BPF_JGE|BPF_K, 4338, 7, 0),
BPF_JUMP(BPF_JMP|BPF_JGE|BPF_K, 4319, 3, 0),
BPF_JUMP(BPF_JMP|BPF_JGE|BPF_K, 4316, 1, 0),
BPF_JUMP(BPF_JMP|BPF_JGE|BPF_K, 4314, 10, 9), //getcpu|epoll_pwait
BPF_JUMP(BPF_JMP|BPF_JGE|BPF_K, 4317, 9, 8), //utimensat
BPF_JUMP(BPF_JMP|BPF_JGE|BPF_K, 4334, 1, 0),
BPF_JUMP(BPF_JMP|BPF_JGE|BPF_K, 4332, 7, 6), //eventfd|fallocate|timerfd_create|timerfd_gettime|timerfd_settime|signalfd4|eventfd2|epoll_create1|dup3|pipe2|inotify_init1|preadv|pwritev
BPF_JUMP(BPF_JMP|BPF_JGE|BPF_K, 4336, 6, 5), //accept4|recvmmsg
BPF_JUMP(BPF_JMP|BPF_JGE|BPF_K, 4353, 3, 0),
BPF_JUMP(BPF_JMP|BPF_JGE|BPF_K, 4342, 1, 0),
BPF_JUMP(BPF_JMP|BPF_JGE|BPF_K, 4339, 3, 2), //prlimit64
BPF_JUMP(BPF_JMP|BPF_JGE|BPF_K, 4347, 2, 1), //syncfs|sendmmsg|setns|process_vm_readv|process_vm_writev
BPF_JUMP(BPF_JMP|BPF_JGE|BPF_K, 4354, 1, 0), //getrandom
BPF_STMT(BPF_RET|BPF_K, SECCOMP_RET_ALLOW),
};

const size_t mips_app_filter_size = sizeof(mips_app_filter) / sizeof(struct sock_filter);
