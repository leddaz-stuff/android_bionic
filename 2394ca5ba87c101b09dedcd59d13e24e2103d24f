{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "e825f4d9_614d9cdc",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1096946
      },
      "writtenOn": "2023-01-31T00:52:20Z",
      "side": 1,
      "message": "thanks",
      "revId": "2394ca5ba87c101b09dedcd59d13e24e2103d24f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1af78555_e320ab59",
        "filename": "libc/include/common.h",
        "patchSetId": 1
      },
      "lineNbr": 1,
      "author": {
        "id": 1096946
      },
      "writtenOn": "2023-01-31T00:52:20Z",
      "side": 1,
      "message": "nit: i\u0027d normally put this in a bits/* file rather than creating a new one, but i defer to enh or danalbert\u0027s opinions :)",
      "range": {
        "startLine": 1,
        "startChar": 1,
        "endLine": 1,
        "endChar": 2
      },
      "revId": "2394ca5ba87c101b09dedcd59d13e24e2103d24f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "89e2a75b_69245d43",
        "filename": "libc/include/common.h",
        "patchSetId": 1
      },
      "lineNbr": 1,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2023-01-31T01:00:57Z",
      "side": 1,
      "message": "i actually liked your original suggestion of sticking `__BIONIC_COMPLICATED_NULLNESS` (with the two leading underscores) in \u003csys/cdefs.h\u003e with `__BIONIC_CAST` and `__BIONIC_ALIGN`...",
      "parentUuid": "1af78555_e320ab59",
      "range": {
        "startLine": 1,
        "startChar": 1,
        "endLine": 1,
        "endChar": 2
      },
      "revId": "2394ca5ba87c101b09dedcd59d13e24e2103d24f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b4e07bed_190a80fd",
        "filename": "libc/include/common.h",
        "patchSetId": 1
      },
      "lineNbr": 1,
      "author": {
        "id": 1890456
      },
      "writtenOn": "2023-01-31T19:56:14Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "89e2a75b_69245d43",
      "range": {
        "startLine": 1,
        "startChar": 1,
        "endLine": 1,
        "endChar": 2
      },
      "revId": "2394ca5ba87c101b09dedcd59d13e24e2103d24f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "54d58520_50b41c00",
        "filename": "libc/include/common.h",
        "patchSetId": 1
      },
      "lineNbr": 2,
      "author": {
        "id": 1096946
      },
      "writtenOn": "2023-01-31T00:52:20Z",
      "side": 1,
      "message": "2023?",
      "range": {
        "startLine": 2,
        "startChar": 17,
        "endLine": 2,
        "endChar": 21
      },
      "revId": "2394ca5ba87c101b09dedcd59d13e24e2103d24f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "81ed99e2_fb306059",
        "filename": "libc/include/common.h",
        "patchSetId": 1
      },
      "lineNbr": 2,
      "author": {
        "id": 1890456
      },
      "writtenOn": "2023-01-31T00:58:42Z",
      "side": 1,
      "message": "oops, good point ðŸ˜‚",
      "parentUuid": "54d58520_50b41c00",
      "range": {
        "startLine": 2,
        "startChar": 17,
        "endLine": 2,
        "endChar": 21
      },
      "revId": "2394ca5ba87c101b09dedcd59d13e24e2103d24f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "52b821d0_b3fbc4e9",
        "filename": "libc/include/common.h",
        "patchSetId": 1
      },
      "lineNbr": 2,
      "author": {
        "id": 1890456
      },
      "writtenOn": "2023-01-31T19:56:14Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "81ed99e2_fb306059",
      "range": {
        "startLine": 2,
        "startChar": 17,
        "endLine": 2,
        "endChar": 21
      },
      "revId": "2394ca5ba87c101b09dedcd59d13e24e2103d24f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "04252ff6_9d24fb4a",
        "filename": "libc/include/common.h",
        "patchSetId": 1
      },
      "lineNbr": 31,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2023-01-31T01:00:57Z",
      "side": 1,
      "message": "(s/devs/developers/)",
      "range": {
        "startLine": 31,
        "startChar": 56,
        "endLine": 31,
        "endChar": 60
      },
      "revId": "2394ca5ba87c101b09dedcd59d13e24e2103d24f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d0ebdf1a_bcfc6fa5",
        "filename": "libc/include/regex.h",
        "patchSetId": 1
      },
      "lineNbr": 54,
      "author": {
        "id": 1890456
      },
      "writtenOn": "2023-01-31T00:58:42Z",
      "side": 1,
      "message": "A far reply to where the directory of `common.h` should be. Yes, I am also thinking of this too. I am also thinking of whether we need to add another macro to differentiate struct(this also needs to read code according to aosp/2290254) and function.",
      "range": {
        "startLine": 54,
        "startChar": 14,
        "endLine": 54,
        "endChar": 41
      },
      "revId": "2394ca5ba87c101b09dedcd59d13e24e2103d24f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}