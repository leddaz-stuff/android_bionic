{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "0f6ccd28_4064879c",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 13,
      "author": {
        "id": 1038039
      },
      "writtenOn": "2023-04-28T13:47:10Z",
      "side": 1,
      "message": "My opinion:\n\nI think you\u0027re saying above that you had to make changes and so this isn\u0027t just a change containing upstream patches. I can\u0027t tell at a glance what is an upstream change and what you\u0027ve done locally. What did you have to change?\n\nIf you have had to make changes, increasing our patches over upstream, can they be marked with an Android change marker with a comment explaining why they\u0027re needed (perhaps a bug reference)?\n\nCurious of the history for int_fast32_t too, but I assume it\u0027s something like the time_t issue, and it seems like we\u0027ve been exposed to int_fast32_t in upstream code for some time without issues.",
      "range": {
        "startLine": 13,
        "startChar": 4,
        "endLine": 13,
        "endChar": 13
      },
      "revId": "35cb7de51b79a8e689e733a0970fddaf864e53b8",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e7addc53_a2828498",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 13,
      "author": {
        "id": 1793992
      },
      "writtenOn": "2023-04-28T13:53:39Z",
      "side": 1,
      "message": "I\u0027ve updated time_test only, and it\u0027s Android\u0027s. I\u0027d be very caseous to make changes there :) \n\n`int_fast32_t` on 64-bit devices is `int64_t` [1], so operations around the year INT_MAX do not always overflow. I\u0027ve tried to run `mktime_EOVERFLOW` on my workstation with pure tzcode, and its behaviour is the same.\n\n[1] https://source.corp.google.com/h/android/platform/superproject/+/master:bionic/libc/include/stdint.h;l\u003d94;drc\u003db36efa4343d79e3fb548d12d039193850246b892",
      "parentUuid": "0f6ccd28_4064879c",
      "range": {
        "startLine": 13,
        "startChar": 4,
        "endLine": 13,
        "endChar": 13
      },
      "revId": "35cb7de51b79a8e689e733a0970fddaf864e53b8",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "14c28b7e_89d47b1e",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 13,
      "author": {
        "id": 1038039
      },
      "writtenOn": "2023-04-28T13:59:40Z",
      "side": 1,
      "message": "Sorry - didn\u0027t notice it was a home-grown test. As you were.\n\nAnd after a quick search, apparently:\n\n\"int_fast32_t is the \"fastest\" integer for your current processor that is at last bigger or equal to an int32_t.\" so it\u0027s all good - just a test issue, then.",
      "parentUuid": "e7addc53_a2828498",
      "range": {
        "startLine": 13,
        "startChar": 4,
        "endLine": 13,
        "endChar": 13
      },
      "revId": "35cb7de51b79a8e689e733a0970fddaf864e53b8",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "116145d8_c3ebfcf4",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 13,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2023-04-28T15:50:40Z",
      "side": 1,
      "message": "yeah, this code is literally the only code (that isn\u0027t a test _of_ or libc/libc++ support _for_ the int_fast* types) that i\u0027ve ever seen. it\u0027s also just about the last code on the planet to give up on `register` too. and support C89. and... you get the idea :-)\n\n(and at the same time, it\u0027s the first code i\u0027ve seen try to use C23\u0027s \u003cstdckdint.h\u003e, which isn\u0027t in llvm yet. there may be a competition to simultaneously support both the oldest and newest systems possible that i just haven\u0027t heard about...)",
      "parentUuid": "14c28b7e_89d47b1e",
      "range": {
        "startLine": 13,
        "startChar": 4,
        "endLine": 13,
        "endChar": 13
      },
      "revId": "35cb7de51b79a8e689e733a0970fddaf864e53b8",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9cc33f4e_74ad9b6d",
        "filename": "tests/time_test.cpp",
        "patchSetId": 2
      },
      "lineNbr": 196,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2023-04-28T15:50:40Z",
      "side": 1,
      "message": "maybe just explicitly copy \u0026 paste the \"// This will overflow for LP32 or LP64.\" here too, for anyone who doesn\u0027t care about the _why_ and just wants to understand the _what_?",
      "revId": "35cb7de51b79a8e689e733a0970fddaf864e53b8",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}