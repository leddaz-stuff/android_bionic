{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "fb6c495c_216316af",
        "filename": "tests/uchar_test.cpp",
        "patchSetId": 1
      },
      "lineNbr": 301,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2023-07-18T23:37:51Z",
      "side": 1,
      "message": "i realize i should have said this before, but shouldn\u0027t this be _overlong_ rather than _long_? as it is, it\u0027s unclear that it\u0027s glibc that\u0027s incorrect :-)\n\n(it\u0027s a bit unfortunate that the sense of this boolean means the _bad_ result is in the `if` rather than the `else`, but i\u0027m struggling for a good name.)",
      "range": {
        "startLine": 301,
        "startChar": 6,
        "endLine": 301,
        "endChar": 36
      },
      "revId": "e9ba0ef4d92d9e6c83abbf5c6670f144bcd018a3",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d8c7a734_95e7e6dc",
        "filename": "tests/uchar_test.cpp",
        "patchSetId": 1
      },
      "lineNbr": 301,
      "author": {
        "id": 1043845
      },
      "writtenOn": "2023-07-19T17:53:31Z",
      "side": 1,
      "message": "glibc isn\u0027t exactly wrong either. The C spec doesn\u0027t say which version of UTF-8 uchar.h implements.\n\nI can rename it as `kLibcRejectsOverLongUtf8Sequences` if you prefer that. (do you want that in this CL?)",
      "parentUuid": "fb6c495c_216316af",
      "range": {
        "startLine": 301,
        "startChar": 6,
        "endLine": 301,
        "endChar": 36
      },
      "revId": "e9ba0ef4d92d9e6c83abbf5c6670f144bcd018a3",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4c7d4bc4_fc619767",
        "filename": "tests/uchar_test.cpp",
        "patchSetId": 1
      },
      "lineNbr": 301,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2023-07-19T17:56:28Z",
      "side": 1,
      "message": "\"if you don\u0027t specify a version explicitly, congratulations, you get the latest one\" :-) (and it\u0027s not like this is a _recent_ change.)\n\ni think the counterargument would be java and/or icu still accept the overlong sequences. then it\u0027s more of a hung jury!\n\n(oh, yeah, duh --- s/supports/rejects/ is a good solution!)\n\n(doesn\u0027t have to be in this cl, no.)",
      "parentUuid": "d8c7a734_95e7e6dc",
      "range": {
        "startLine": 301,
        "startChar": 6,
        "endLine": 301,
        "endChar": 36
      },
      "revId": "e9ba0ef4d92d9e6c83abbf5c6670f144bcd018a3",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "713fd5b4_0bd1a459",
        "filename": "tests/uchar_test.cpp",
        "patchSetId": 1
      },
      "lineNbr": 301,
      "author": {
        "id": 1043845
      },
      "writtenOn": "2023-07-19T18:02:12Z",
      "side": 1,
      "message": "I expect the reason is that they didn\u0027t want to break any users that relied on that support? (though since there are no valid code points in that range, there shouldn\u0027t be anyone relying on it? https://xkcd.com/1172/)",
      "parentUuid": "4c7d4bc4_fc619767",
      "range": {
        "startLine": 301,
        "startChar": 6,
        "endLine": 301,
        "endChar": 36
      },
      "revId": "e9ba0ef4d92d9e6c83abbf5c6670f144bcd018a3",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}