{
  "comments": [
    {
      "key": {
        "uuid": "b04df311_9b4d0b00",
        "filename": "tests/stack_unwinding_test.cpp",
        "patchSetId": 1
      },
      "lineNbr": 37,
      "author": {
        "id": 1019050
      },
      "writtenOn": "2014-09-18T00:37:44Z",
      "side": 1,
      "message": "Do you want a comment or a different define around this so that it\u0027s clear why this code exists? Maybe something like PRINT_SYMBOLS.",
      "range": {
        "startLine": 37,
        "startChar": 0,
        "endLine": 37,
        "endChar": 5
      },
      "revId": "621346c222b258d9931d853a1438e5a2b758acf4",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "901c6ffc_fa90c9cf",
        "filename": "tests/stack_unwinding_test.cpp",
        "patchSetId": 1
      },
      "lineNbr": 37,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2014-09-18T02:50:12Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "b04df311_9b4d0b00",
      "range": {
        "startLine": 37,
        "startChar": 0,
        "endLine": 37,
        "endChar": 5
      },
      "revId": "621346c222b258d9931d853a1438e5a2b758acf4",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "901c6ffc_da5dc55e",
        "filename": "tests/stack_unwinding_test.cpp",
        "patchSetId": 1
      },
      "lineNbr": 89,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2014-09-18T02:50:12Z",
      "side": 1,
      "message": "i\u0027ve switched this over to ScopedSignalHandler in ps2.",
      "revId": "621346c222b258d9931d853a1438e5a2b758acf4",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b04df311_db2cf321",
        "filename": "tests/stack_unwinding_test.cpp",
        "patchSetId": 1
      },
      "lineNbr": 93,
      "author": {
        "id": 1019050
      },
      "writtenOn": "2014-09-18T00:37:44Z",
      "side": 1,
      "message": "I know it probably doesn\u0027t matter, but maybe add a ASSERT_EQ(0, ...);",
      "range": {
        "startLine": 93,
        "startChar": 2,
        "endLine": 93,
        "endChar": 26
      },
      "revId": "621346c222b258d9931d853a1438e5a2b758acf4",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7021bb30_99267b3e",
        "filename": "tests/stack_unwinding_test.cpp",
        "patchSetId": 1
      },
      "lineNbr": 93,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2014-09-18T02:50:12Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "b04df311_db2cf321",
      "range": {
        "startLine": 93,
        "startChar": 2,
        "endLine": 93,
        "endChar": 26
      },
      "revId": "621346c222b258d9931d853a1438e5a2b758acf4",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3042e3dc_45e55eec",
        "filename": "tests/stack_unwinding_test_impl.c",
        "patchSetId": 1
      },
      "lineNbr": 58,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2014-09-18T00:24:21Z",
      "side": 1,
      "message": "this test is really testing \"does _Unwind_ForcedUnwind call cleanup functions as it unwinds through them?\", and the answer is \"no\" for all but x86. even x86-64 doesn\u0027t work. this feels like it should be a libgcc test rather than a bionic one, so i\u0027ll remove this test in a later patch. (now that we have simpler tests for \"can we unwind through a signal frame?\".)",
      "revId": "621346c222b258d9931d853a1438e5a2b758acf4",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}