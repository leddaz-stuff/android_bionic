{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "f82e0398_f036cb00",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 9,
      "author": {
        "id": 1279898
      },
      "writtenOn": "2023-06-02T22:35:59Z",
      "side": 1,
      "message": "nit: \"Define all argument registers for RISCV\"\nnit: Bug?",
      "range": {
        "startLine": 7,
        "startChar": 0,
        "endLine": 9,
        "endChar": 9
      },
      "revId": "36c70db3eb84bd2aa8f21c77ea0ba0c14127e132",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "bc825889_93830e5c",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1279898
      },
      "writtenOn": "2023-06-02T22:19:51Z",
      "side": 1,
      "message": "Hey Elliot, heads up on this - Lingxue is working on some WebView changes and found that the sandbox needs access to a few more registers out of mcontext_t.\n\nAs a side note - should we be adding them piecemeal here like this, or do the whole set at once?",
      "revId": "36c70db3eb84bd2aa8f21c77ea0ba0c14127e132",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "61535b25_abe55876",
        "filename": "libc/include/sys/ucontext.h",
        "patchSetId": 1
      },
      "lineNbr": 335,
      "author": {
        "id": 1279898
      },
      "writtenOn": "2023-06-02T22:28:12Z",
      "side": 1,
      "message": "This should be REG_A1 (here and below)?",
      "range": {
        "startLine": 335,
        "startChar": 8,
        "endLine": 335,
        "endChar": 14
      },
      "revId": "36c70db3eb84bd2aa8f21c77ea0ba0c14127e132",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "59405cdf_334d9bf0",
        "filename": "libc/include/sys/ucontext.h",
        "patchSetId": 1
      },
      "lineNbr": 335,
      "author": {
        "id": 1995630
      },
      "writtenOn": "2023-06-02T22:34:06Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "61535b25_abe55876",
      "range": {
        "startLine": 335,
        "startChar": 8,
        "endLine": 335,
        "endChar": 14
      },
      "revId": "36c70db3eb84bd2aa8f21c77ea0ba0c14127e132",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "692644b9_a425d7d4",
        "filename": "libc/include/sys/ucontext.h",
        "patchSetId": 1
      },
      "lineNbr": 345,
      "author": {
        "id": 1279898
      },
      "writtenOn": "2023-06-02T22:28:12Z",
      "side": 1,
      "message": "Should we just add REG_A6 while we\u0027re at it?",
      "revId": "36c70db3eb84bd2aa8f21c77ea0ba0c14127e132",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e57223e6_a2d6673f",
        "filename": "libc/include/sys/ucontext.h",
        "patchSetId": 1
      },
      "lineNbr": 345,
      "author": {
        "id": 1995630
      },
      "writtenOn": "2023-06-02T22:34:06Z",
      "side": 1,
      "message": "Added REG_A6 here but would like to hear Elliott\u0027s thought on this one.",
      "parentUuid": "692644b9_a425d7d4",
      "revId": "36c70db3eb84bd2aa8f21c77ea0ba0c14127e132",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "27a3c39a_0f0de44a",
        "filename": "libc/include/sys/ucontext.h",
        "patchSetId": 1
      },
      "lineNbr": 345,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2023-06-05T23:20:14Z",
      "side": 1,
      "message": "i wouldn\u0027t add any of these --- i don\u0027t think the other libcs plan to add them, so this wouldn\u0027t be portable anyway?\n\nthough if we do add any, yes, we should add everything. especially because the s and t registers aren\u0027t consecutive like the a registers are. which makes REG_S0 quite questionable, except for the fact that it\u0027s really the frame pointer, but llvm uses REG_S0 rather than REG_FP :-(\n\nglibc seems to have a pretty random set of \"ones we happen to use in the implementation\", musl has this subset, and freebsd actually reorders the registers into _logical_ rather than physical order (so all the ts are together, all the ses are together, and all the as are together; each as an array).\n\ndo you have a pointer to the caller? (in case that makes a more persuasive argument for why we should have these.)",
      "parentUuid": "e57223e6_a2d6673f",
      "revId": "36c70db3eb84bd2aa8f21c77ea0ba0c14127e132",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}