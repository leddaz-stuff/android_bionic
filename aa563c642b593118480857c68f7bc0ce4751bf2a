{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "fcc1a87c_739fba60",
        "filename": "libc/bionic/heap_tagging.cpp",
        "patchSetId": 3
      },
      "lineNbr": 170,
      "author": {
        "id": 1453063
      },
      "writtenOn": "2022-01-26T18:21:49Z",
      "side": 1,
      "message": "I think the journeys we want to support are:\n - Fast (called ASYNC) \u003d ASYNC | ASYMM | SYNC -\u003e ASYNC | SYNC -\u003e ASYNC\n - Precise (called SYNC) \u003d SYNC\n - ASYNC only (for testing) \u003d ASYNC\n - ASYMM only (for testing) \u003d ASYMM\n \nI\u0027m not sure what purpose the ASYMM | SYNC -\u003e SYNC mode fulfills. It\u0027s also a little confusing to me, because it doesn\u0027t follow the same \"I want X, I get X maybe with an auto-upgrade if it\u0027s fast enough\". It\u0027s instead, \"I want ASYMM, I might get SYNC if it\u0027s faster, or I might get SYNC if it\u0027s slow but ASYMM wasn\u0027t supported\".\n\n-----\nIf you disagree:\n-----\n\nWithout the historical context, this can be confusing as it doesn\u0027t follow the above patterns of \"if (ASYNC | SYNC) fails -\u003e try (ASYNC) because the kernel might not support auto-upgrade\".\n\nConsider adding:\n\n\"Because ASYMM support in the kernel was added after the auto-upgrade feature, the only reason why ASYMM | SYNC would fail is if the hardware doesn\u0027t have ASYMM mode. In this case, fallback to enabling SYNC mode.\"",
      "range": {
        "startLine": 170,
        "startChar": 24,
        "endLine": 170,
        "endChar": 79
      },
      "revId": "aa563c642b593118480857c68f7bc0ce4751bf2a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5c006518_ef9d865c",
        "filename": "libc/bionic/libc_init_static.cpp",
        "patchSetId": 3
      },
      "lineNbr": 317,
      "author": {
        "id": 1453063
      },
      "writtenOn": "2022-01-26T18:21:49Z",
      "side": 1,
      "message": "Add comment, \"Asymm came after the multiple TCF modes, so try that first.\"",
      "range": {
        "startLine": 317,
        "startChar": 0,
        "endLine": 317,
        "endChar": 49
      },
      "revId": "aa563c642b593118480857c68f7bc0ce4751bf2a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9332f7e2_1e5d53e3",
        "filename": "libc/include/malloc.h",
        "patchSetId": 3
      },
      "lineNbr": 333,
      "author": {
        "id": 1453063
      },
      "writtenOn": "2022-01-26T18:21:49Z",
      "side": 1,
      "message": "On MTE hardware, this call guarantees...",
      "range": {
        "startLine": 333,
        "startChar": 55,
        "endLine": 333,
        "endChar": 59
      },
      "revId": "aa563c642b593118480857c68f7bc0ce4751bf2a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "656b8198_16bd3d22",
        "filename": "libc/include/malloc.h",
        "patchSetId": 3
      },
      "lineNbr": 344,
      "author": {
        "id": 1453063
      },
      "writtenOn": "2022-01-26T18:21:49Z",
      "side": 1,
      "message": "On hardware with ASYMM MTE, this call guarantees...",
      "range": {
        "startLine": 344,
        "startChar": 55,
        "endLine": 344,
        "endChar": 59
      },
      "revId": "aa563c642b593118480857c68f7bc0ce4751bf2a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "cf8729f6_803bd06b",
        "filename": "tests/heap_tagging_level_test.cpp",
        "patchSetId": 3
      },
      "lineNbr": 201,
      "author": {
        "id": 1453063
      },
      "writtenOn": "2022-01-26T18:21:49Z",
      "side": 1,
      "message": "\u003e Common typo found: \"asymetric\" -- should it be \"asymmetric\"?\n\u003e Note: a line containing \"common_typos_disable\" or \"common_typos_enable\" will turn off or on (respectively) the linter for subsequent lines in the file. Alternatively include the token \"NOTYPO\" within a line to skip typo linting that line or include \u0027No-Typo-Check: \u003creason\u003e\u0027in the commit message.\n\nPlease fix.",
      "parentUuid": "c0d050af_22c2bac8",
      "range": {
        "startLine": 201,
        "startChar": 21,
        "endLine": 201,
        "endChar": 30
      },
      "revId": "aa563c642b593118480857c68f7bc0ce4751bf2a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}