{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "ee66b011_c504362f",
        "filename": "libc/include/bits/page_size.h",
        "patchSetId": 1
      },
      "lineNbr": 45,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2024-04-08T20:25:05Z",
      "side": 1,
      "message": "Elliott/Dan, I\u0027d like to remove these as well, for code portability. Though, it\u0027s a bit of work, so first, what do you think? All other suggestions appreciated.",
      "range": {
        "startLine": 43,
        "startChar": 0,
        "endLine": 45,
        "endChar": 23
      },
      "revId": "41eee441638db1a04fd4adba17e42ef7e2666d9f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fcadb226_30c6f713",
        "filename": "libc/include/bits/page_size.h",
        "patchSetId": 1
      },
      "lineNbr": 45,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2024-04-08T20:59:01Z",
      "side": 1,
      "message": "if anyone has arm32/x86-only code, does anyone benefit from the disruption of them having to change that? i\u0027d just ignore it until we come through and _remove_ 32-bit somewhere between now and 2038-\u003chowever long before that date people think it\u0027s okay to sell a device that will die then\u003e.\n\n(that said, the fact that we don\u0027t have PAGE_SIZE for x86-64 seems the most likely to cause trouble, since glibc/musl _do_ have that. but that would affect OS developers more than app developers, and there are orders of magnitude less of them.)\n\nif we do remove these, probably best to do them separately after everything we actually care about has landed, rather than tie something that doesn\u0027t matter (and is more likely to affect _unmaintained_ code) with something that does?",
      "parentUuid": "ee66b011_c504362f",
      "range": {
        "startLine": 43,
        "startChar": 0,
        "endLine": 45,
        "endChar": 23
      },
      "revId": "41eee441638db1a04fd4adba17e42ef7e2666d9f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "40930ea6_eda1b873",
        "filename": "libc/include/bits/page_size.h",
        "patchSetId": 1
      },
      "lineNbr": 45,
      "author": {
        "id": 1043845
      },
      "writtenOn": "2024-04-08T21:09:34Z",
      "side": 1,
      "message": "I could go either way on it. I wrote the NDK side of things for r27 like this as well, but since developers have to build both lp32 and lp64, I don\u0027t know that we\u0027re really doing them much of a favor. They don\u0027t have to port arm32/x86/rv64 specific code, but otoh it\u0027s yet another arch-specific behavior they need to be aware of.\n\nIf we\u0027ve already accepted that we\u0027re breaking source compat for arm64/x86_64, I don\u0027t know how much it helps developers to limit the breakage to only those ABIs. Maybe there are some projects out there with abandoned arm32 specific code they don\u0027t want to touch and this would help them.",
      "parentUuid": "ee66b011_c504362f",
      "range": {
        "startLine": 43,
        "startChar": 0,
        "endLine": 45,
        "endChar": 23
      },
      "revId": "41eee441638db1a04fd4adba17e42ef7e2666d9f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2f16dd1d_8a1a8763",
        "filename": "libc/include/bits/page_size.h",
        "patchSetId": 1
      },
      "lineNbr": 45,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2024-04-08T21:51:20Z",
      "side": 1,
      "message": "The main benefit is if you build/test on 32-bit, then you need to move to 64-bit. If you start with getpagesize(), it\u0027s one less thing that could bother you. Though it is also more bothering to begin with.\n\nThat being said, I figure land this like this, and if you want the other architectures cleaned up (or the other architectures cleaned up in Android platform but not the NDK), I can start doing that as well. Thanks!",
      "parentUuid": "40930ea6_eda1b873",
      "range": {
        "startLine": 43,
        "startChar": 0,
        "endLine": 45,
        "endChar": 23
      },
      "revId": "41eee441638db1a04fd4adba17e42ef7e2666d9f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "26e7fe38_3e50b3a4",
        "filename": "libc/include/bits/page_size.h",
        "patchSetId": 1
      },
      "lineNbr": 45,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2024-04-09T00:55:43Z",
      "side": 1,
      "message": "\u003e The main benefit is if you build/test on 32-bit, then you need to move to 64-bit.\n\ni don\u0027t think that way round happens any more. the emulator default is x86-64 now. and *that\u0027s* the one that i think is most likely to cause \"wtf?\" issues, since our emulator is the only place anyone will ever come across x86-64 pretending to have non-4KiB pages!\n\n\u003e That being said, I figure land this like this, and if you want the other architectures cleaned up (or the other architectures cleaned up in Android platform but not the NDK), I can start doing that as well. Thanks!\n\nfor most of this 32-bit shit, the end is sufficiently nigh that unless it\u0027s _actively_ causing pain, everyone\u0027s best off just ignoring it.\n\ni think you may as well leave `__riscv` off the exclusion list though? there\u0027s no extant Android/riscv64 code, and glibc/musl for riscv64 don\u0027t define PAGE_SIZE, so there\u0027s not likely to be any _other_ extant code that cares.\n\n(you may then feel that \"who cares about ILP32?\" is clearer as `!defined(__LP64__)`, but i think either\u0027s fine.)",
      "parentUuid": "2f16dd1d_8a1a8763",
      "range": {
        "startLine": 43,
        "startChar": 0,
        "endLine": 45,
        "endChar": 23
      },
      "revId": "41eee441638db1a04fd4adba17e42ef7e2666d9f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b3e5fc53_a35c1a04",
        "filename": "libc/include/bits/page_size.h",
        "patchSetId": 1
      },
      "lineNbr": 45,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2024-04-09T16:52:06Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "26e7fe38_3e50b3a4",
      "range": {
        "startLine": 43,
        "startChar": 0,
        "endLine": 45,
        "endChar": 23
      },
      "revId": "41eee441638db1a04fd4adba17e42ef7e2666d9f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}