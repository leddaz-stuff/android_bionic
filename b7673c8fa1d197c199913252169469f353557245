{
  "comments": [
    {
      "key": {
        "uuid": "2ef60aaf_263149ea",
        "filename": "libc/bionic/sys_thread_properties.cpp",
        "patchSetId": 12
      },
      "lineNbr": 42,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2020-10-02T22:43:50Z",
      "side": 1,
      "message": "unnecessary?",
      "range": {
        "startLine": 42,
        "startChar": 33,
        "endLine": 42,
        "endChar": 41
      },
      "revId": "b7673c8fa1d197c199913252169469f353557245",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "01a1097d_32f7146c",
        "filename": "libc/bionic/sys_thread_properties.cpp",
        "patchSetId": 12
      },
      "lineNbr": 42,
      "author": {
        "id": 1631819
      },
      "writtenOn": "2020-10-03T00:07:53Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "2ef60aaf_263149ea",
      "range": {
        "startLine": 42,
        "startChar": 33,
        "endLine": 42,
        "endChar": 41
      },
      "revId": "b7673c8fa1d197c199913252169469f353557245",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a1c153c8_47a2d639",
        "filename": "libc/bionic/sys_thread_properties.cpp",
        "patchSetId": 12
      },
      "lineNbr": 81,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2020-10-02T22:43:50Z",
      "side": 1,
      "message": "shouldn\u0027t this be `uintptr_t`? unsigned \u003d\u003d unsigned int, but you want an unsigned long, but uintptr_t is more intention-revealing.",
      "range": {
        "startLine": 81,
        "startChar": 2,
        "endLine": 81,
        "endChar": 10
      },
      "revId": "b7673c8fa1d197c199913252169469f353557245",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6294dc08_1c0f2e6e",
        "filename": "libc/bionic/sys_thread_properties.cpp",
        "patchSetId": 12
      },
      "lineNbr": 81,
      "author": {
        "id": 1229339
      },
      "writtenOn": "2020-10-02T23:50:38Z",
      "side": 1,
      "message": "tid?",
      "range": {
        "startLine": 81,
        "startChar": 45,
        "endLine": 81,
        "endChar": 50
      },
      "revId": "b7673c8fa1d197c199913252169469f353557245",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "20a3cc7d_6f9f94f1",
        "filename": "libc/bionic/sys_thread_properties.cpp",
        "patchSetId": 12
      },
      "lineNbr": 81,
      "author": {
        "id": 1631819
      },
      "writtenOn": "2020-10-03T00:07:53Z",
      "side": 1,
      "message": "Done. Clearly I hadn\u0027t tested with x86-64 ...:-)",
      "parentUuid": "6294dc08_1c0f2e6e",
      "range": {
        "startLine": 81,
        "startChar": 45,
        "endLine": 81,
        "endChar": 50
      },
      "revId": "b7673c8fa1d197c199913252169469f353557245",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "280d493d_41a20846",
        "filename": "libc/bionic/sys_thread_properties.cpp",
        "patchSetId": 12
      },
      "lineNbr": 81,
      "author": {
        "id": 1631819
      },
      "writtenOn": "2020-10-03T00:07:53Z",
      "side": 1,
      "message": "Done.",
      "parentUuid": "a1c153c8_47a2d639",
      "range": {
        "startLine": 81,
        "startChar": 2,
        "endLine": 81,
        "endChar": 10
      },
      "revId": "b7673c8fa1d197c199913252169469f353557245",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b2a933bd_f10ca554",
        "filename": "libc/bionic/sys_thread_properties.cpp",
        "patchSetId": 12
      },
      "lineNbr": 82,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2020-10-02T22:43:50Z",
      "side": 1,
      "message": "this is incorrect if something *before* ptrace() set errno. you need to clear errno first to do a test like this.\n\n(is it ever valid for fs_base to be -1?)",
      "revId": "b7673c8fa1d197c199913252169469f353557245",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b42b08b1_56e19e92",
        "filename": "libc/bionic/sys_thread_properties.cpp",
        "patchSetId": 12
      },
      "lineNbr": 82,
      "author": {
        "id": 1631819
      },
      "writtenOn": "2020-10-03T00:07:53Z",
      "side": 1,
      "message": "Done. Save and restore the errno.",
      "parentUuid": "b2a933bd_f10ca554",
      "revId": "b7673c8fa1d197c199913252169469f353557245",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "27ec7d39_1a92d23f",
        "filename": "libc/bionic/sys_thread_properties.cpp",
        "patchSetId": 12
      },
      "lineNbr": 85,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2020-10-02T22:43:50Z",
      "side": 1,
      "message": "again? what\u0027s going on here?",
      "range": {
        "startLine": 85,
        "startChar": 35,
        "endLine": 85,
        "endChar": 43
      },
      "revId": "b7673c8fa1d197c199913252169469f353557245",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a28f98aa_9b226c3a",
        "filename": "libc/bionic/sys_thread_properties.cpp",
        "patchSetId": 12
      },
      "lineNbr": 85,
      "author": {
        "id": 1631819
      },
      "writtenOn": "2020-10-03T00:07:53Z",
      "side": 1,
      "message": "Removed but from https://developer.android.com/ndk/guides/abis#x86, is there a plan to move away from hard-coding i386 when you really mean i686?",
      "parentUuid": "27ec7d39_1a92d23f",
      "range": {
        "startLine": 85,
        "startChar": 35,
        "endLine": 85,
        "endChar": 43
      },
      "revId": "b7673c8fa1d197c199913252169469f353557245",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b35d7433_dde7cdae",
        "filename": "libc/bionic/sys_thread_properties.cpp",
        "patchSetId": 12
      },
      "lineNbr": 85,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2020-10-05T18:00:15Z",
      "side": 1,
      "message": "no. why would we? i can\u0027t think of a case where we actually mean anything other than \"32-bit x86\".",
      "parentUuid": "a28f98aa_9b226c3a",
      "range": {
        "startLine": 85,
        "startChar": 35,
        "endLine": 85,
        "endChar": 43
      },
      "revId": "b7673c8fa1d197c199913252169469f353557245",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0c9def98_2e2fb0c9",
        "filename": "libc/bionic/sys_thread_properties.cpp",
        "patchSetId": 12
      },
      "lineNbr": 105,
      "author": {
        "id": 1229339
      },
      "writtenOn": "2020-10-03T00:23:47Z",
      "side": 1,
      "message": "Does this call also work with an arm32 kernel? I suspect that PTRACE_GET_THREAD_AREA is required for an arm32 kernel (as opposed to an arm32 program running on an arm64 kernel), but to verify it, I need to invoke ptrace (or invoke __get_bionic_tcb_for_thread with another tid), and I can\u0027t immediately figure out how to use ptrace. (For me, ptrace just fails with ESRCH: \"No such process\".)\n\nI don\u0027t see a test for __libc_iterate_dynamic_tls for a tid other than the current one.",
      "range": {
        "startLine": 105,
        "startChar": 6,
        "endLine": 105,
        "endChar": 56
      },
      "revId": "b7673c8fa1d197c199913252169469f353557245",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "fc6ec0b0_c68a7748",
        "filename": "libc/bionic/sys_thread_properties.cpp",
        "patchSetId": 12
      },
      "lineNbr": 105,
      "author": {
        "id": 1631819
      },
      "writtenOn": "2020-10-03T02:10:51Z",
      "side": 1,
      "message": "Maybe you could try something like this: https://paste.googleplex.com/6555193165479936",
      "parentUuid": "0c9def98_2e2fb0c9",
      "range": {
        "startLine": 105,
        "startChar": 6,
        "endLine": 105,
        "endChar": 56
      },
      "revId": "b7673c8fa1d197c199913252169469f353557245",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8cdfb4ab_ce6f73de",
        "filename": "libc/bionic/sys_thread_properties.cpp",
        "patchSetId": 12
      },
      "lineNbr": 105,
      "author": {
        "id": 1631819
      },
      "writtenOn": "2020-10-03T02:19:20Z",
      "side": 1,
      "message": "PS: I\u0027ll update the test to include the -iterate- for another pid. But I did try the snippet above for the x86 and arm64. Seemed to work for me. Please let me know what you found out on the arm32 (don\u0027t have access to one to test. I\u0027m hoping the presubmit bots here would do it for me once I write the test)",
      "parentUuid": "fc6ec0b0_c68a7748",
      "range": {
        "startLine": 105,
        "startChar": 6,
        "endLine": 105,
        "endChar": 56
      },
      "revId": "b7673c8fa1d197c199913252169469f353557245",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9fc1f074_343c2f54",
        "filename": "libc/bionic/sys_thread_properties.cpp",
        "patchSetId": 12
      },
      "lineNbr": 105,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2020-10-05T18:00:15Z",
      "side": 1,
      "message": "the \"wembley\" target has a 32-bit arm kernel, so, yes, if you write the test, the machines will run it.",
      "parentUuid": "8cdfb4ab_ce6f73de",
      "range": {
        "startLine": 105,
        "startChar": 6,
        "endLine": 105,
        "endChar": 56
      },
      "revId": "b7673c8fa1d197c199913252169469f353557245",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    }
  ]
}