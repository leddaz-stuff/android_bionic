{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "46f916d4_a2fec8d8",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1726181
      },
      "writtenOn": "2021-02-16T15:50:33Z",
      "side": 1,
      "message": "Side note: would there be any objection to also renaming ldd to ldd.sh? ",
      "revId": "a4583b7af3a71449370fc7273a5cc3c0a4aec4b6",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8e5fa359_43651544",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1726181
      },
      "writtenOn": "2021-02-16T15:53:41Z",
      "side": 1,
      "message": "(Then we could avoid https://android-review.googlesource.com/c/platform/build/soong/+/1590252)",
      "parentUuid": "46f916d4_a2fec8d8",
      "revId": "a4583b7af3a71449370fc7273a5cc3c0a4aec4b6",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "08023121_7fc0c3ef",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2021-02-16T20:26:53Z",
      "side": 1,
      "message": "depends whether you mean on the host or on the device? this is https://man7.org/linux/man-pages/man1/ldd.1.html so it needs to be called ldd on the device. but the module name and name on the host filesystem don\u0027t really matter.",
      "parentUuid": "8e5fa359_43651544",
      "revId": "a4583b7af3a71449370fc7273a5cc3c0a4aec4b6",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a0f83d05_3283caf2",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1726181
      },
      "writtenOn": "2021-02-16T23:29:27Z",
      "side": 1,
      "message": "Thanks!\n\nIn the Soong case, I am not 100% sure how ldd makes it to a device. In https://cs.android.com/android/platform/superproject/+/master:bionic/linker/Android.bp, the sh_binary target for ldd doesn\u0027t seem to be referenced anywhere else\n\nWhat I would like to do is change\n\nsh_binary {\n    name: \"ldd\",\n    src: \"ldd\",\n}\n\nto\n\nsh_binary {\n    name: \"ldd\",\n    src: \"ldd.sh\",\n}\n\nWhich would allow us to auto generate this Bazel equivalent (where the name and src need to be distinct, unlike in Soong?)\n\nsh_binary (\n    name \u003d \"ldd\",\n    srcs \u003d [\"ldd.sh\"],\n)\n\n+ Dan\n\nWould this break anything for Soong builds Dan? Am I missing something?",
      "parentUuid": "08023121_7fc0c3ef",
      "revId": "a4583b7af3a71449370fc7273a5cc3c0a4aec4b6",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5d00cc4d_6cdb9a97",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2021-02-16T23:51:14Z",
      "side": 1,
      "message": "i can answer the \"where?\" question:\n```\nphony {\n    name: \"shell_and_utilities_system\",\n    required: [\n        \"auditctl\",\n        \"awk\",\n        \"bc\",\n        \"bzip2\",\n!       \"ldd\",\n        \"logwrapper\",\n        \"mini-keyctl\",\n        \"mkshrc\",\n        \"newfs_msdos\",\n        \"reboot\",\n        \"sh\",\n        \"simpleperf\",\n        \"simpleperf_app_runner\",\n        \"tcpdump\",\n        \"toolbox\",\n        \"toybox\",\n        \"ziptool\",\n    ],\n}\n```\nin system/core/shell_and_utilities.\n\nbut like i said, the _module_ name doesn\u0027t matter much --- it\u0027s \"will this still be called `ldd` on the target file system?\" that\u0027s the important question (and it\u0027s not clear to me whether that\u0027s what the bazel sh_binary means).",
      "parentUuid": "a0f83d05_3283caf2",
      "revId": "a4583b7af3a71449370fc7273a5cc3c0a4aec4b6",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1e77ba7a_59b79587",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2021-02-16T23:52:08Z",
      "side": 1,
      "message": "(to clarify: it\u0027s not even clear to me from reading the bazel docs: https://docs.bazel.build/versions/master/be/shell.html )",
      "parentUuid": "5d00cc4d_6cdb9a97",
      "revId": "a4583b7af3a71449370fc7273a5cc3c0a4aec4b6",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c367222a_aba97dc2",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1074628
      },
      "writtenOn": "2021-02-17T00:01:03Z",
      "side": 1,
      "message": "Soong, unlike bazel, very strictly separates the source filesystem with the defined modules/intermediates/outputs. So there is no conflict here (or in any of the other places I expect this to show up).\n\nI think what Rupert is asking for is whether we can rename the source file, and keep the module name the same. Soong defaults the sh_binary\u0027s installed name as the module name (though that\u0027s overridable via `filename` and `filename_from_src`): https://cs.android.com/android/platform/superproject/+/master:build/soong/sh/sh_binary.go;drc\u003da1a56e8f82ec154a6856e2485d63fb1d74d3a2ca;l\u003d214\n\nI assume that with Bazel, what happens is going to entirely depend on the implementation of the packaging/installation rules and what it gets from the sh_binary rule. (Or whatever intermediate steps we end up taking)",
      "parentUuid": "1e77ba7a_59b79587",
      "revId": "a4583b7af3a71449370fc7273a5cc3c0a4aec4b6",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}