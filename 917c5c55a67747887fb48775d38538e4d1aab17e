{
  "comments": [
    {
      "key": {
        "uuid": "0e1b056c_b6252618",
        "filename": "libc/include/sys/ucontext.h",
        "patchSetId": 1
      },
      "lineNbr": 183,
      "author": {
        "id": 1019050
      },
      "writtenOn": "2015-01-05T21:50:45Z",
      "side": 1,
      "message": "Is there a reason you are using this instead of checking for __mips64__? It would make it easier to tell what\u0027s going on if you checked for mips64 explicitly.",
      "range": {
        "startLine": 183,
        "startChar": 4,
        "endLine": 183,
        "endChar": 24
      },
      "revId": "917c5c55a67747887fb48775d38538e4d1aab17e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ae0af911_be8aa141",
        "filename": "libc/include/sys/ucontext.h",
        "patchSetId": 1
      },
      "lineNbr": 183,
      "author": {
        "id": 1063673
      },
      "writtenOn": "2015-01-05T22:39:57Z",
      "side": 1,
      "message": "No clear reason, taking my cue from glibc and linux kernel sources here. Both use ABI to distinguish this bit, presumably because the layout of this struct is not part of architecture spec.\n\nJust to clarify, the __mips64__ segment below was removed because:\n\n(a) gcc #defines __mips64 and not __mips64__\n\n(b) __mips64 is defined in addition to __mips__. Since __mips__ is checked earlier, the later #ifdef would never have expanded as written.",
      "parentUuid": "0e1b056c_b6252618",
      "range": {
        "startLine": 183,
        "startChar": 4,
        "endLine": 183,
        "endChar": 24
      },
      "revId": "917c5c55a67747887fb48775d38538e4d1aab17e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8e445558_cf3ebdfa",
        "filename": "libc/include/sys/ucontext.h",
        "patchSetId": 1
      },
      "lineNbr": 183,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2015-01-05T22:46:17Z",
      "side": 1,
      "message": "if you don\u0027t plan on fixing the existing __mips__/__mips64 mess (which would be my recommendation, given that r6 is a new ABI anyway), i think we should try to use __LP64__ to differentiate the two mipses.",
      "parentUuid": "ae0af911_be8aa141",
      "range": {
        "startLine": 183,
        "startChar": 4,
        "endLine": 183,
        "endChar": 24
      },
      "revId": "917c5c55a67747887fb48775d38538e4d1aab17e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4e26ddb6_edb2a505",
        "filename": "libc/include/sys/ucontext.h",
        "patchSetId": 1
      },
      "lineNbr": 206,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2015-01-05T22:43:55Z",
      "side": 1,
      "message": "(format this like the one above.)",
      "revId": "917c5c55a67747887fb48775d38538e4d1aab17e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ae3f59b4_f335eaf6",
        "filename": "libc/include/sys/ucontext.h",
        "patchSetId": 1
      },
      "lineNbr": 218,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2015-01-05T22:43:55Z",
      "side": 1,
      "message": "uint32_t? (we\u0027re trying to move to explicitly-sized types for clarity.)",
      "revId": "917c5c55a67747887fb48775d38538e4d1aab17e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}