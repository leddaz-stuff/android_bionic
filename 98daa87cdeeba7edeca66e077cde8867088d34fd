{
  "comments": [
    {
      "key": {
        "uuid": "bb3987d2_9407aa9c",
        "filename": "linker/linked_list.h",
        "patchSetId": 3
      },
      "lineNbr": 52,
      "author": {
        "id": 1079148
      },
      "writtenOn": "2015-11-12T02:47:23Z",
      "side": 1,
      "message": "Shouldn\u0027t this be T\u0026? You\u0027re also missing an operator-\u003e, and a const version.",
      "range": {
        "startLine": 52,
        "startChar": 3,
        "endLine": 52,
        "endChar": 4
      },
      "revId": "98daa87cdeeba7edeca66e077cde8867088d34fd",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b6da7ea7_c1451d4a",
        "filename": "linker/linked_list.h",
        "patchSetId": 3
      },
      "lineNbr": 52,
      "author": {
        "id": 1041673
      },
      "writtenOn": "2015-11-12T07:47:43Z",
      "side": 1,
      "message": "linked list elements are pointers, so -\u003e is kind of useless in this context.. the const version is needed for linked_list::const_iterator which we do not support.",
      "parentUuid": "bb3987d2_9407aa9c",
      "range": {
        "startLine": 52,
        "startChar": 3,
        "endLine": 52,
        "endChar": 4
      },
      "revId": "98daa87cdeeba7edeca66e077cde8867088d34fd",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bb3987d2_3a46a536",
        "filename": "linker/linked_list.h",
        "patchSetId": 3
      },
      "lineNbr": 52,
      "author": {
        "id": 1079148
      },
      "writtenOn": "2015-11-12T19:30:57Z",
      "side": 1,
      "message": "But the iterator is supposed to pretend to be a pointer to the underlying T. For example, the following code works with std::forward_list, which is basically what your linked list is attempting to be:\n\n    struct foo { int a; };\n    std::forward_list\u003cfoo\u003e list;\n    list.push_front(foo{123});\n    printf(\"%d\\n\", (*list.begin()).a);\n    printf(\"%d\\n\", list.begin()-\u003ea);\n\nYour code would need to dereference the iterator twice.",
      "parentUuid": "b6da7ea7_c1451d4a",
      "range": {
        "startLine": 52,
        "startChar": 3,
        "endLine": 52,
        "endChar": 4
      },
      "revId": "98daa87cdeeba7edeca66e077cde8867088d34fd",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3b2597a9_4d04192e",
        "filename": "linker/linker.cpp",
        "patchSetId": 3
      },
      "lineNbr": 401,
      "author": {
        "id": 1079148
      },
      "writtenOn": "2015-11-12T02:47:23Z",
      "side": 1,
      "message": "\u003d\u003d 0 seems more natural to me. Also, we use TEMP_FAILURE_RETRY below. Is it unnecessary?",
      "range": {
        "startLine": 401,
        "startChar": 34,
        "endLine": 401,
        "endChar": 39
      },
      "revId": "98daa87cdeeba7edeca66e077cde8867088d34fd",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b6da7ea7_214b595f",
        "filename": "linker/linker.cpp",
        "patchSetId": 3
      },
      "lineNbr": 401,
      "author": {
        "id": 1041673
      },
      "writtenOn": "2015-11-12T07:47:43Z",
      "side": 1,
      "message": "done. stat does not return EINTR so no TEMP_FAILURE_RETRY necessary.",
      "parentUuid": "3b2597a9_4d04192e",
      "range": {
        "startLine": 401,
        "startChar": 34,
        "endLine": 401,
        "endChar": 39
      },
      "revId": "98daa87cdeeba7edeca66e077cde8867088d34fd",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}