{
  "comments": [
    {
      "key": {
        "uuid": "fe0bac5e_92c5ba4e",
        "filename": "libc/bionic/sigaction.cpp",
        "patchSetId": 2
      },
      "lineNbr": 57,
      "author": {
        "id": 1019050
      },
      "writtenOn": "2013-10-17T18:23:22Z",
      "side": 1,
      "message": "Why is this sizeof(sigset_t)? I see the same in the old code too, and I assume that it\u0027s correct, but it looks kind of odd.",
      "revId": "4ac6eaea8ef57215236ddb99bf9740cd87045d08",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3e02a442_d4bd7254",
        "filename": "libc/bionic/sigaction.cpp",
        "patchSetId": 2
      },
      "lineNbr": 57,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2013-10-17T18:36:29Z",
      "side": 1,
      "message": "because that\u0027s what the kernel wants :-)\n\nthe kernel still has old_sigset_t (what 32-bit bionic calls sigset_t) that\u0027s too small for the real-time signals. (hence the \u0027rt_\u0027 prefix on the syscalls that can take the large-enough sigset_t.)",
      "parentUuid": "fe0bac5e_92c5ba4e",
      "revId": "4ac6eaea8ef57215236ddb99bf9740cd87045d08",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fe0bac5e_b2c6fee7",
        "filename": "libc/bionic/sigaction.cpp",
        "patchSetId": 2
      },
      "lineNbr": 57,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2013-10-17T18:38:18Z",
      "side": 1,
      "message": "to be clear: if you don\u0027t supply the size of the new sigset_t you get EINVAL. the kernel doesn\u0027t just say \"okay, old code using new syscalls, let me accommodate that\". that\u0027s why there\u0027s the special case for the 32-bit ABIs below.",
      "parentUuid": "3e02a442_d4bd7254",
      "revId": "4ac6eaea8ef57215236ddb99bf9740cd87045d08",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "def0a8a0_31320a04",
        "filename": "libc/bionic/sigemptyset.cpp",
        "patchSetId": 2
      },
      "lineNbr": 36,
      "author": {
        "id": 1019050
      },
      "writtenOn": "2013-10-17T18:23:22Z",
      "side": 1,
      "message": "Shouldn\u0027t this be sizeof(sigset_t)? Or is this the preferred method of doing sizeofs?",
      "revId": "4ac6eaea8ef57215236ddb99bf9740cd87045d08",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fe0bac5e_929ada07",
        "filename": "libc/bionic/sigemptyset.cpp",
        "patchSetId": 2
      },
      "lineNbr": 36,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2013-10-17T18:36:29Z",
      "side": 1,
      "message": "some people prefer sizeof(*value) in case the argument type changes, but that ain\u0027t gonna happen here so i agree sizeof(sigset_t) seems clearer.",
      "parentUuid": "def0a8a0_31320a04",
      "revId": "4ac6eaea8ef57215236ddb99bf9740cd87045d08",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fe0bac5e_12e70ace",
        "filename": "libc/bionic/sigfillset.cpp",
        "patchSetId": 2
      },
      "lineNbr": 36,
      "author": {
        "id": 1019050
      },
      "writtenOn": "2013-10-17T18:23:22Z",
      "side": 1,
      "message": "Same comment sizeof(sigset_t) or this?",
      "revId": "4ac6eaea8ef57215236ddb99bf9740cd87045d08",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7ea41c87_0c45d6c3",
        "filename": "tests/pthread_test.cpp",
        "patchSetId": 2
      },
      "lineNbr": 293,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2013-10-17T05:36:11Z",
      "side": 1,
      "message": "not setting this back caused the new signal test to fail if you ran all the tests (because it wasn\u0027t expecting to see a signal handler for SIGALRM installed).",
      "revId": "4ac6eaea8ef57215236ddb99bf9740cd87045d08",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3e02a442_d4f57265",
        "filename": "tests/pthread_test.cpp",
        "patchSetId": 2
      },
      "lineNbr": 293,
      "author": {
        "id": 1019050
      },
      "writtenOn": "2013-10-17T18:23:22Z",
      "side": 1,
      "message": "I think there is a way to force this to fork a process for the test, would that be better so if this test fails it doesn\u0027t cause a bunch of other tests to fail?",
      "parentUuid": "7ea41c87_0c45d6c3",
      "revId": "4ac6eaea8ef57215236ddb99bf9740cd87045d08",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fe0bac5e_32d32ead",
        "filename": "tests/pthread_test.cpp",
        "patchSetId": 2
      },
      "lineNbr": 293,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2013-10-17T18:36:29Z",
      "side": 1,
      "message": "yeah, i don\u0027t have a strong preference either way, except that the fork style makes the tests slower :-)\n\n(though i don\u0027t know by how much. if it\u0027s not too expensive, i wouldn\u0027t be against making _all_ the tests run insolated.)",
      "parentUuid": "3e02a442_d4f57265",
      "revId": "4ac6eaea8ef57215236ddb99bf9740cd87045d08",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}