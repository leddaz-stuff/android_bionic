{
  "comments": [
    {
      "key": {
        "uuid": "df151930_195acbef",
        "filename": "libc/bionic/sysconf.cpp",
        "patchSetId": 4
      },
      "lineNbr": 32,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2014-11-21T05:13:07Z",
      "side": 1,
      "message": "comments should end with \u0027.\u0027",
      "revId": "d487ccedc406f929d5ac108d75d1cfe0e85cf8e2",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7f97cd02_274bf877",
        "filename": "libc/bionic/sysconf.cpp",
        "patchSetId": 4
      },
      "lineNbr": 32,
      "author": {
        "id": 1056364
      },
      "writtenOn": "2014-11-21T21:50:25Z",
      "side": 1,
      "message": "Done.",
      "parentUuid": "df151930_195acbef",
      "revId": "d487ccedc406f929d5ac108d75d1cfe0e85cf8e2",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "df151930_996c9ba6",
        "filename": "libc/bionic/sysconf.cpp",
        "patchSetId": 4
      },
      "lineNbr": 45,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2014-11-21T05:13:07Z",
      "side": 1,
      "message": "is it useful to have this extra layer of constants? would it be clearer to just inline these below?",
      "revId": "d487ccedc406f929d5ac108d75d1cfe0e85cf8e2",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7f97cd02_47e5e4ec",
        "filename": "libc/bionic/sysconf.cpp",
        "patchSetId": 4
      },
      "lineNbr": 45,
      "author": {
        "id": 1056364
      },
      "writtenOn": "2014-11-21T21:50:25Z",
      "side": 1,
      "message": "Macros like AIO_MAX are used in POSIX standard to refer to the variables returned by sysconf, like sysconf(_SC_AIO_MAX). \n_POSIX_AIO_MAX is the minumum value of AIO_MAX.\nThese variables may be declared in header files, like THREAD_THREADS_MAX. I add this layer to make up the missing macros like AIO_MAX.\nWhen people look at the code and POSIX standard, they will not surprise when they find AIO_MAX is returned for sysconf(_SC_AIO_MAX), but they may wonder if _POSIX_AIO_MAX is returned instead.",
      "parentUuid": "df151930_996c9ba6",
      "revId": "d487ccedc406f929d5ac108d75d1cfe0e85cf8e2",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bf586542_bc861972",
        "filename": "libc/bionic/sysconf.cpp",
        "patchSetId": 4
      },
      "lineNbr": 45,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2014-11-21T22:06:56Z",
      "side": 1,
      "message": "the ones in the header files are necessary, but these just seem like an extra layer (or two layers!) of indirection to jump through to understand what\u0027s going on.\n\nfor a case like AIO_MAX, the reader is _still_ left wondering \"is this right?\". an extra layer of macros doesn\u0027t mean anything. the comments you\u0027ve added are useful, but they\u0027d be more useful in the sysconf implementation directly because that would be one less jump through the source to find the answer.",
      "parentUuid": "7f97cd02_47e5e4ec",
      "revId": "d487ccedc406f929d5ac108d75d1cfe0e85cf8e2",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "df151930_59772377",
        "filename": "libc/bionic/sysconf.cpp",
        "patchSetId": 4
      },
      "lineNbr": 48,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2014-11-21T05:13:07Z",
      "side": 1,
      "message": "is it useful to have *this* extra layer of constants? would it be clearer to just inline these below?",
      "revId": "d487ccedc406f929d5ac108d75d1cfe0e85cf8e2",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "df151930_b96f5f9a",
        "filename": "libc/bionic/sysconf.cpp",
        "patchSetId": 4
      },
      "lineNbr": 51,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2014-11-21T05:13:07Z",
      "side": 1,
      "message": "is this really how one reports no limit? LONG_MAX?",
      "revId": "d487ccedc406f929d5ac108d75d1cfe0e85cf8e2",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bf586542_1c81a5d5",
        "filename": "libc/bionic/sysconf.cpp",
        "patchSetId": 4
      },
      "lineNbr": 51,
      "author": {
        "id": 1056364
      },
      "writtenOn": "2014-11-21T21:50:25Z",
      "side": 1,
      "message": "In POSIX standard, sysconf should return -1 without errno change to represent an unlimited value. glibc do something like that. But I hesitate to make the change, because it may confuse people/some code to set macros like ATEXIT_MAX/THREAD_THREADS_MAX to -1.",
      "parentUuid": "df151930_b96f5f9a",
      "revId": "d487ccedc406f929d5ac108d75d1cfe0e85cf8e2",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7f97cd02_b2b748f9",
        "filename": "libc/bionic/sysconf.cpp",
        "patchSetId": 4
      },
      "lineNbr": 51,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2014-11-21T22:06:56Z",
      "side": 1,
      "message": "okay, but we should do that in a separate change. (because it might confuse _correct_ code that we _don\u0027t_ do what POSIX says. we should prefer to make correct code run than incorrect code.)",
      "parentUuid": "bf586542_1c81a5d5",
      "revId": "d487ccedc406f929d5ac108d75d1cfe0e85cf8e2",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "df151930_99937b30",
        "filename": "libc/bionic/sysconf.cpp",
        "patchSetId": 4
      },
      "lineNbr": 56,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2014-11-21T05:13:07Z",
      "side": 1,
      "message": "i think there\u0027s a getauxval for this now?",
      "revId": "d487ccedc406f929d5ac108d75d1cfe0e85cf8e2",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "df151930_7972e788",
        "filename": "libc/bionic/sysconf.cpp",
        "patchSetId": 4
      },
      "lineNbr": 56,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2014-11-21T05:13:07Z",
      "side": 1,
      "message": "i think there\u0027s a getauxval for this now?",
      "revId": "d487ccedc406f929d5ac108d75d1cfe0e85cf8e2",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bf586542_bc6f399a",
        "filename": "libc/bionic/sysconf.cpp",
        "patchSetId": 4
      },
      "lineNbr": 56,
      "author": {
        "id": 1056364
      },
      "writtenOn": "2014-11-21T21:50:25Z",
      "side": 1,
      "message": "Done.",
      "parentUuid": "df151930_99937b30",
      "revId": "d487ccedc406f929d5ac108d75d1cfe0e85cf8e2",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bf0a2512_3b8d83c2",
        "filename": "libc/bionic/sysconf.cpp",
        "patchSetId": 4
      },
      "lineNbr": 58,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2014-11-21T05:13:07Z",
      "side": 1,
      "message": "LONG_MAX?",
      "revId": "d487ccedc406f929d5ac108d75d1cfe0e85cf8e2",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ff5e5d2a_df041f86",
        "filename": "libc/bionic/sysconf.cpp",
        "patchSetId": 4
      },
      "lineNbr": 58,
      "author": {
        "id": 1056364
      },
      "writtenOn": "2014-11-21T21:50:25Z",
      "side": 1,
      "message": "As the return type of timer_getoverrun is int, it may be not larger than INT_MAX.",
      "parentUuid": "bf0a2512_3b8d83c2",
      "revId": "d487ccedc406f929d5ac108d75d1cfe0e85cf8e2",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bf586542_172dfebc",
        "filename": "libc/bionic/sysconf.cpp",
        "patchSetId": 4
      },
      "lineNbr": 58,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2014-11-21T22:06:56Z",
      "side": 1,
      "message": "well, INT_MAX then. my point is that we shouldn\u0027t be repeating the literal value :-)",
      "parentUuid": "ff5e5d2a_df041f86",
      "revId": "d487ccedc406f929d5ac108d75d1cfe0e85cf8e2",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "df151930_795b07f7",
        "filename": "libc/bionic/sysconf.cpp",
        "patchSetId": 4
      },
      "lineNbr": 98,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2014-11-21T05:13:07Z",
      "side": 1,
      "message": "may as well just remove these.",
      "revId": "d487ccedc406f929d5ac108d75d1cfe0e85cf8e2",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7f97cd02_2718d816",
        "filename": "libc/bionic/sysconf.cpp",
        "patchSetId": 4
      },
      "lineNbr": 98,
      "author": {
        "id": 1056364
      },
      "writtenOn": "2014-11-21T21:50:25Z",
      "side": 1,
      "message": "If we remove the commented items here, there will be only macro definitions in sysconf.h, and people may wonder whether these macros are to be supported or just out of date.",
      "parentUuid": "df151930_795b07f7",
      "revId": "d487ccedc406f929d5ac108d75d1cfe0e85cf8e2",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ff5e5d2a_910e9bd7",
        "filename": "libc/bionic/sysconf.cpp",
        "patchSetId": 4
      },
      "lineNbr": 98,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2014-11-21T22:06:56Z",
      "side": 1,
      "message": "oh, i assumed you\u0027d removed those too. if we\u0027re keeping those, we need to report something here. if you\u0027re deliberately relying on these falling into the default case, it\u0027s clearer to not comment them out and have a case for all of these obsolete ones explaining what you\u0027re doing and why.",
      "parentUuid": "7f97cd02_2718d816",
      "revId": "d487ccedc406f929d5ac108d75d1cfe0e85cf8e2",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ff101d40_5a8ef510",
        "filename": "libc/bionic/sysconf.cpp",
        "patchSetId": 4
      },
      "lineNbr": 124,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2014-11-21T05:13:07Z",
      "side": 1,
      "message": "fall-through?\n\nghackmann mentioned the other day there\u0027s a getauxval for page size too. though we\u0027re in big trouble if it\u0027s not 4096 :-)",
      "revId": "d487ccedc406f929d5ac108d75d1cfe0e85cf8e2",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bf586542_5c139dfe",
        "filename": "libc/bionic/sysconf.cpp",
        "patchSetId": 4
      },
      "lineNbr": 124,
      "author": {
        "id": 1056364
      },
      "writtenOn": "2014-11-21T21:50:25Z",
      "side": 1,
      "message": "Done. I missed the words in POSIX standard that they should always be the same.",
      "parentUuid": "ff101d40_5a8ef510",
      "revId": "d487ccedc406f929d5ac108d75d1cfe0e85cf8e2",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ff101d40_7a89b906",
        "filename": "libc/bionic/sysconf.cpp",
        "patchSetId": 4
      },
      "lineNbr": 128,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2014-11-21T05:13:07Z",
      "side": 1,
      "message": "looks like they were called \"legacy\" even in 2001: http://www.open-std.org/jtc1/sc22/open/n3232/d6text.txt",
      "revId": "d487ccedc406f929d5ac108d75d1cfe0e85cf8e2",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ff5e5d2a_9f834762",
        "filename": "libc/bionic/sysconf.cpp",
        "patchSetId": 4
      },
      "lineNbr": 128,
      "author": {
        "id": 1056364
      },
      "writtenOn": "2014-11-21T21:50:25Z",
      "side": 1,
      "message": "Yes.",
      "parentUuid": "ff101d40_7a89b906",
      "revId": "d487ccedc406f929d5ac108d75d1cfe0e85cf8e2",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bf0a2512_9b27ef22",
        "filename": "libc/bionic/sysconf.cpp",
        "patchSetId": 4
      },
      "lineNbr": 187,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2014-11-21T05:13:07Z",
      "side": 1,
      "message": "if you know which POSIX version they were marked obsolescent in, add it to the comment.",
      "revId": "d487ccedc406f929d5ac108d75d1cfe0e85cf8e2",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ff101d40_da99e551",
        "filename": "libc/bionic/sysconf.cpp",
        "patchSetId": 4
      },
      "lineNbr": 187,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2014-11-21T05:13:07Z",
      "side": 1,
      "message": "if you know which POSIX version they were marked obsolescent in, add it to the comment.",
      "revId": "d487ccedc406f929d5ac108d75d1cfe0e85cf8e2",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bf586542_7c58a1d1",
        "filename": "libc/bionic/sysconf.cpp",
        "patchSetId": 4
      },
      "lineNbr": 187,
      "author": {
        "id": 1056364
      },
      "writtenOn": "2014-11-21T21:50:25Z",
      "side": 1,
      "message": "Items like _SC_V6_ILP32_OFF32 are introduced and obsolescent in POSIX.1-2008, just in different Issues. I hope I don\u0027t need to find exact Issue for them.",
      "parentUuid": "ff101d40_da99e551",
      "revId": "d487ccedc406f929d5ac108d75d1cfe0e85cf8e2",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ff5e5d2a_311daf07",
        "filename": "libc/bionic/sysconf.cpp",
        "patchSetId": 4
      },
      "lineNbr": 187,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2014-11-21T22:06:56Z",
      "side": 1,
      "message": "no, \"2008\" is sufficient.",
      "parentUuid": "bf586542_7c58a1d1",
      "revId": "d487ccedc406f929d5ac108d75d1cfe0e85cf8e2",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "df151930_b9487f26",
        "filename": "libc/include/machine/posix_limits.h",
        "patchSetId": 4
      },
      "lineNbr": 58,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2014-11-21T05:13:07Z",
      "side": 1,
      "message": "i wonder if we should change this. our pthread implementation (amongst other things) wouldn\u0027t work if we didn\u0027t have the monotonic clock.",
      "revId": "d487ccedc406f929d5ac108d75d1cfe0e85cf8e2",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7f97cd02_4703a47e",
        "filename": "libc/include/machine/posix_limits.h",
        "patchSetId": 4
      },
      "lineNbr": 58,
      "author": {
        "id": 1056364
      },
      "writtenOn": "2014-11-21T21:50:25Z",
      "side": 1,
      "message": "I don\u0027t know. I checked glibc, they use the same way as we currently use.",
      "parentUuid": "df151930_b9487f26",
      "revId": "d487ccedc406f929d5ac108d75d1cfe0e85cf8e2",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ff101d40_3a5581c1",
        "filename": "libc/include/machine/posix_limits.h",
        "patchSetId": 4
      },
      "lineNbr": 84,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2014-11-21T05:13:07Z",
      "side": 1,
      "message": "does this actually exist? if it does, the value seems suspiciously low. (and implausible; are we to believe that ssize_t is a signed 17-bit type?)",
      "revId": "d487ccedc406f929d5ac108d75d1cfe0e85cf8e2",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ff5e5d2a_71fa07d7",
        "filename": "libc/include/machine/posix_limits.h",
        "patchSetId": 4
      },
      "lineNbr": 84,
      "author": {
        "id": 1056364
      },
      "writtenOn": "2014-11-21T21:50:25Z",
      "side": 1,
      "message": "Yes, It is SHORT_MAX, defined in POSIX standard. I increased it to INT_MAX as ssize_t is int type on 32bit platforms.",
      "parentUuid": "ff101d40_3a5581c1",
      "revId": "d487ccedc406f929d5ac108d75d1cfe0e85cf8e2",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bf586542_975b2e3f",
        "filename": "libc/include/machine/posix_limits.h",
        "patchSetId": 4
      },
      "lineNbr": 84,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2014-11-21T22:06:56Z",
      "side": 1,
      "message": "but ssize_t isn\u0027t an int on LP64. i\u0027m sure you can find a more appropriate constant...",
      "parentUuid": "ff5e5d2a_71fa07d7",
      "revId": "d487ccedc406f929d5ac108d75d1cfe0e85cf8e2",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bf0a2512_1b4abfa1",
        "filename": "tests/unistd_test.cpp",
        "patchSetId": 4
      },
      "lineNbr": 525,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2014-11-21T05:13:07Z",
      "side": 1,
      "message": "2008 is the year, so \"2008 (2013 edition)\" doesn\u0027t make sense.\n\nhow many of these actually pass on glibc? it would be nice to have those run on both, with the aim being that we get closer over time.",
      "revId": "d487ccedc406f929d5ac108d75d1cfe0e85cf8e2",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7f97cd02_47d5e476",
        "filename": "tests/unistd_test.cpp",
        "patchSetId": 4
      },
      "lineNbr": 525,
      "author": {
        "id": 1056364
      },
      "writtenOn": "2014-11-21T21:50:25Z",
      "side": 1,
      "message": "Done. I split the test to which can run on both bionic and glibc(at least on my workstation), and which can run only on bionic. The difference is smaller than I expected.",
      "parentUuid": "bf0a2512_1b4abfa1",
      "revId": "d487ccedc406f929d5ac108d75d1cfe0e85cf8e2",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}