{
  "comments": [
    {
      "key": {
        "uuid": "3f854c8a_11482b72",
        "filename": "libc/bionic/malloc_debug_check.cpp",
        "patchSetId": 1
      },
      "lineNbr": 540,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2014-06-12T02:20:42Z",
      "side": 1,
      "message": "didn\u0027t you say you were going to put an alignment macro/inline function in macros.h?",
      "revId": "679ef0ba214a8c74ba8c82573f6648fdb08b35f4",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "df74307d_bbd04fda",
        "filename": "libc/bionic/malloc_debug_check.cpp",
        "patchSetId": 1
      },
      "lineNbr": 540,
      "author": {
        "id": 1019050
      },
      "writtenOn": "2014-06-12T19:12:34Z",
      "side": 1,
      "message": "Filed a b/15590152 so I don\u0027t forget.",
      "parentUuid": "3f854c8a_11482b72",
      "revId": "679ef0ba214a8c74ba8c82573f6648fdb08b35f4",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1f6328c5_c6760c59",
        "filename": "libc/bionic/malloc_debug_leak.cpp",
        "patchSetId": 1
      },
      "lineNbr": 388,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2014-06-12T02:20:42Z",
      "side": 1,
      "message": "how did you catch this?",
      "revId": "679ef0ba214a8c74ba8c82573f6648fdb08b35f4",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "df74307d_5b601b8a",
        "filename": "libc/bionic/malloc_debug_leak.cpp",
        "patchSetId": 1
      },
      "lineNbr": 388,
      "author": {
        "id": 1019050
      },
      "writtenOn": "2014-06-12T19:12:34Z",
      "side": 1,
      "message": "My realloc_overflow test would segfault because the ptr got double freed.",
      "parentUuid": "1f6328c5_c6760c59",
      "revId": "679ef0ba214a8c74ba8c82573f6648fdb08b35f4",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ff77347c_bf759ba6",
        "filename": "libc/upstream-dlmalloc/malloc.c",
        "patchSetId": 1
      },
      "lineNbr": 5322,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2014-06-12T02:20:42Z",
      "side": 1,
      "message": "don\u0027t forget to report this upstream.\n\nshould we move this check into our wrapper for now?",
      "revId": "679ef0ba214a8c74ba8c82573f6648fdb08b35f4",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "df74307d_1be063ab",
        "filename": "libc/upstream-dlmalloc/malloc.c",
        "patchSetId": 1
      },
      "lineNbr": 5322,
      "author": {
        "id": 1019050
      },
      "writtenOn": "2014-06-12T19:12:34Z",
      "side": 1,
      "message": "Good point, I assumed that this was our own issue.\n\nDo you mean we should implement our own wrapper for this, or do it in the pvalloc code that just calls the dispatch table version?",
      "parentUuid": "ff77347c_bf759ba6",
      "revId": "679ef0ba214a8c74ba8c82573f6648fdb08b35f4",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1f6328c5_3687f1c1",
        "filename": "libc/upstream-dlmalloc/malloc.c",
        "patchSetId": 1
      },
      "lineNbr": 5322,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2014-06-12T19:56:14Z",
      "side": 1,
      "message": "either\u0027s fine, but i was thinking the latter.",
      "parentUuid": "df74307d_1be063ab",
      "revId": "679ef0ba214a8c74ba8c82573f6648fdb08b35f4",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bf713c8e_1dda17a8",
        "filename": "libc/upstream-dlmalloc/malloc.c",
        "patchSetId": 1
      },
      "lineNbr": 5322,
      "author": {
        "id": 1019050
      },
      "writtenOn": "2014-06-12T20:51:30Z",
      "side": 1,
      "message": "I sent a note to the upstream dlmalloc maintainer.\n\nI\u0027d rather avoid putting code directly in the dispatch function. How about I leave it like this (with an ANDROID update comment) and if the dlmalloc guy accepts my small change, then I can just update the file after that? If not, we can leave it with the small comment.",
      "parentUuid": "1f6328c5_3687f1c1",
      "revId": "679ef0ba214a8c74ba8c82573f6648fdb08b35f4",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ff77347c_df7a5795",
        "filename": "tests/malloc_test.cpp",
        "patchSetId": 1
      },
      "lineNbr": 52,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2014-06-12T02:20:42Z",
      "side": 1,
      "message": "check errno?",
      "revId": "679ef0ba214a8c74ba8c82573f6648fdb08b35f4",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bf713c8e_971d26fd",
        "filename": "tests/malloc_test.cpp",
        "patchSetId": 1
      },
      "lineNbr": 52,
      "author": {
        "id": 1019050
      },
      "writtenOn": "2014-06-12T19:12:34Z",
      "side": 1,
      "message": "Tests added and debug malloc code updated to actually set this.",
      "parentUuid": "ff77347c_df7a5795",
      "revId": "679ef0ba214a8c74ba8c82573f6648fdb08b35f4",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3f854c8a_b1393fee",
        "filename": "tests/malloc_test.cpp",
        "patchSetId": 1
      },
      "lineNbr": 89,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2014-06-12T02:20:42Z",
      "side": 1,
      "message": "blank line.",
      "revId": "679ef0ba214a8c74ba8c82573f6648fdb08b35f4",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1f6328c5_80c3171a",
        "filename": "tests/malloc_test.cpp",
        "patchSetId": 1
      },
      "lineNbr": 89,
      "author": {
        "id": 1019050
      },
      "writtenOn": "2014-06-12T19:12:34Z",
      "side": 1,
      "message": "Deleted.",
      "parentUuid": "3f854c8a_b1393fee",
      "revId": "679ef0ba214a8c74ba8c82573f6648fdb08b35f4",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1f6328c5_6660e08a",
        "filename": "tests/malloc_test.cpp",
        "patchSetId": 1
      },
      "lineNbr": 95,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2014-06-12T02:20:42Z",
      "side": 1,
      "message": "no blank line.\n\nchoose either style :-)",
      "revId": "679ef0ba214a8c74ba8c82573f6648fdb08b35f4",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bf713c8e_f71c9afd",
        "filename": "tests/malloc_test.cpp",
        "patchSetId": 1
      },
      "lineNbr": 95,
      "author": {
        "id": 1019050
      },
      "writtenOn": "2014-06-12T19:12:34Z",
      "side": 1,
      "message": "Since I do the no blank line in most places, I\u0027ll stick with that.",
      "parentUuid": "1f6328c5_6660e08a",
      "revId": "679ef0ba214a8c74ba8c82573f6648fdb08b35f4",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}