{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "0fe36483_a5fc0199",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2021-11-29T17:47:14Z",
      "side": 1,
      "message": "has glibc or musl committed to adding a libc wrapper for this? if not, unless this is something that\u0027s likely to see a lot of unrelated call sites, usually we\u0027d just recommend you call it via syscall(3) instead.\n\nthis seems like a reasonable addition to musl/glibc, though, so i\u0027d probably go that route.\n\n(aiui, this new syscall originates with google, right? so we\u0027re responsible for dotting the is and crossing the ts.)",
      "revId": "7b4661eb8d0f81c783ebac1363b0a1dc1d192fd3",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c047647f_c8a70e0d",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1157738
      },
      "writtenOn": "2021-12-06T17:10:27Z",
      "side": 1,
      "message": "What is the process for including a new syscall into  glibc or musl?",
      "parentUuid": "0fe36483_a5fc0199",
      "revId": "7b4661eb8d0f81c783ebac1363b0a1dc1d192fd3",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "05d5b80a_8c36f440",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2021-12-06T17:13:37Z",
      "side": 1,
      "message": "no idea --- you\u0027ll have to talk to them :-)",
      "parentUuid": "c047647f_c8a70e0d",
      "revId": "7b4661eb8d0f81c783ebac1363b0a1dc1d192fd3",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c5ed0bd0_7f5bca48",
        "filename": "libc/include/sys/mman.h",
        "patchSetId": 1
      },
      "lineNbr": 175,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2021-11-29T17:47:14Z",
      "side": 1,
      "message": "no man page yet? are you working with upstream to fix that? https://www.kernel.org/doc/man-pages/contributing.html",
      "revId": "7b4661eb8d0f81c783ebac1363b0a1dc1d192fd3",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1c23a6e4_e2be1470",
        "filename": "libc/include/sys/mman.h",
        "patchSetId": 1
      },
      "lineNbr": 175,
      "author": {
        "id": 1157738
      },
      "writtenOn": "2021-12-06T17:10:27Z",
      "side": 1,
      "message": "It\u0027s on my todo list to write a manpage for this syscall but I didn\u0027t get to it yet.\nMaybe until all these pieces are in place it\u0027s better to use syscall(3)?",
      "parentUuid": "c5ed0bd0_7f5bca48",
      "revId": "7b4661eb8d0f81c783ebac1363b0a1dc1d192fd3",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2544c1e0_7e692bb2",
        "filename": "libc/include/sys/mman.h",
        "patchSetId": 1
      },
      "lineNbr": 175,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2021-12-06T17:13:37Z",
      "side": 1,
      "message": "how many distinct call sites are you expecting? if it\u0027s not many (and _especially_ if you think everyone\u0027s actually supposed to use some library instead of messing with this themselves) then, yeah, i don\u0027t think exposing it in libc makes sense. (but that\u0027s another reason to work with the other libcs.)\n\n(note that you will still need a libc change, so that the appropriate seccomp policy doesn\u0027t block this syscall [which it will by default]. note also that adding a syscall to SYSCALLS.TXT makes it available to *all* seccomp contexts, which may or may not be what you actually intended, depending on who\u0027s supposed to be calling this.)",
      "parentUuid": "1c23a6e4_e2be1470",
      "revId": "7b4661eb8d0f81c783ebac1363b0a1dc1d192fd3",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3379df0d_52587e65",
        "filename": "libc/include/sys/mman.h",
        "patchSetId": 1
      },
      "lineNbr": 175,
      "author": {
        "id": 1157738
      },
      "writtenOn": "2021-12-06T18:53:36Z",
      "side": 1,
      "message": "lmkd is the only current user and I don\u0027t think any other component will ever need this.",
      "parentUuid": "2544c1e0_7e692bb2",
      "revId": "7b4661eb8d0f81c783ebac1363b0a1dc1d192fd3",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c31e65d9_036a7fd7",
        "filename": "libc/include/sys/mman.h",
        "patchSetId": 1
      },
      "lineNbr": 175,
      "author": {
        "id": 1275554
      },
      "writtenOn": "2021-12-06T19:10:13Z",
      "side": 1,
      "message": "IMO, many kill users to reclaim the memory will want use the this syscall in the future, for example, Android ActivityManager and others complicated apps.",
      "parentUuid": "3379df0d_52587e65",
      "revId": "7b4661eb8d0f81c783ebac1363b0a1dc1d192fd3",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f9624549_10162662",
        "filename": "libc/include/sys/mman.h",
        "patchSetId": 1
      },
      "lineNbr": 175,
      "author": {
        "id": 1157738
      },
      "writtenOn": "2021-12-06T19:17:57Z",
      "side": 1,
      "message": "I don\u0027t see why they would want to do their memory reaping... They are not responsible to handle memory pressure like lmkd, instead they do proactive mitigation for which memory reaping is unnecessary I think.",
      "parentUuid": "c31e65d9_036a7fd7",
      "revId": "7b4661eb8d0f81c783ebac1363b0a1dc1d192fd3",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}