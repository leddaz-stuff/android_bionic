{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "762beb3f_8875c8df",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2023-07-11T20:44:10Z",
      "side": 1,
      "message": "(otherwise lgtm)",
      "revId": "22967000770fc6d89a42fcac661814dfd103fee1",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "510212d3_d9acc5c0",
        "filename": "libc/bionic/pthread_create.cpp",
        "patchSetId": 1
      },
      "lineNbr": 144,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2023-07-11T20:44:10Z",
      "side": 1,
      "message": "(i don\u0027t think you need this comment ... no reason to convince people of https://en.wikipedia.org/wiki/Standard_operating_procedure :-) )",
      "range": {
        "startLine": 140,
        "startChar": 2,
        "endLine": 144,
        "endChar": 74
      },
      "revId": "22967000770fc6d89a42fcac661814dfd103fee1",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "56127d22_eb81b9b8",
        "filename": "libc/bionic/pthread_create.cpp",
        "patchSetId": 1
      },
      "lineNbr": 144,
      "author": {
        "id": 1710792
      },
      "writtenOn": "2023-07-11T21:09:24Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "510212d3_d9acc5c0",
      "range": {
        "startLine": 140,
        "startChar": 2,
        "endLine": 144,
        "endChar": 74
      },
      "revId": "22967000770fc6d89a42fcac661814dfd103fee1",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "76674649_aa106c75",
        "filename": "libc/bionic/pthread_create.cpp",
        "patchSetId": 1
      },
      "lineNbr": 145,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2023-07-11T20:44:10Z",
      "side": 1,
      "message": "prefer `\u003d\u003d -1` in bionic.",
      "range": {
        "startLine": 145,
        "startChar": 54,
        "endLine": 145,
        "endChar": 57
      },
      "revId": "22967000770fc6d89a42fcac661814dfd103fee1",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "7b94af65_a410ead8",
        "filename": "libc/bionic/pthread_create.cpp",
        "patchSetId": 1
      },
      "lineNbr": 145,
      "author": {
        "id": 1710792
      },
      "writtenOn": "2023-07-11T21:09:24Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "76674649_aa106c75",
      "range": {
        "startLine": 145,
        "startChar": 54,
        "endLine": 145,
        "endChar": 57
      },
      "revId": "22967000770fc6d89a42fcac661814dfd103fee1",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "baef0f1b_47bb5164",
        "filename": "libc/bionic/pthread_create.cpp",
        "patchSetId": 1
      },
      "lineNbr": 146,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2023-07-11T20:44:10Z",
      "side": 1,
      "message": "don\u0027t print raw errno values. they differ between architectures. you can use the \nGNU `%m` extension (or strerror() for code that needs to run on windows/macOS too, but this doesn\u0027t).",
      "range": {
        "startLine": 146,
        "startChar": 60,
        "endLine": 146,
        "endChar": 76
      },
      "revId": "22967000770fc6d89a42fcac661814dfd103fee1",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "cff2a05e_d9e64a56",
        "filename": "libc/bionic/pthread_create.cpp",
        "patchSetId": 1
      },
      "lineNbr": 146,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2023-07-11T20:44:10Z",
      "side": 1,
      "message": "prefer to include the non-constants, so here %p scs and %zu SCS_SIZE.\n\n(your same confused engineer is probably going to want to know what was wrong with the inputs next, after all :-) )",
      "range": {
        "startLine": 146,
        "startChar": 40,
        "endLine": 146,
        "endChar": 42
      },
      "revId": "22967000770fc6d89a42fcac661814dfd103fee1",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "940cd604_e383a3ba",
        "filename": "libc/bionic/pthread_create.cpp",
        "patchSetId": 1
      },
      "lineNbr": 146,
      "author": {
        "id": 1710792
      },
      "writtenOn": "2023-07-11T21:09:24Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "baef0f1b_47bb5164",
      "range": {
        "startLine": 146,
        "startChar": 60,
        "endLine": 146,
        "endChar": 76
      },
      "revId": "22967000770fc6d89a42fcac661814dfd103fee1",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "03cf0cec_eb16b5ab",
        "filename": "libc/bionic/pthread_create.cpp",
        "patchSetId": 1
      },
      "lineNbr": 146,
      "author": {
        "id": 1710792
      },
      "writtenOn": "2023-07-11T21:09:24Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "cff2a05e_d9e64a56",
      "range": {
        "startLine": 146,
        "startChar": 40,
        "endLine": 146,
        "endChar": 42
      },
      "revId": "22967000770fc6d89a42fcac661814dfd103fee1",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}