{
  "comments": [
    {
      "key": {
        "uuid": "88caee81_7bfd0370",
        "filename": "libc/bionic/malloc_heapprofd.cpp",
        "patchSetId": 31
      },
      "lineNbr": 113,
      "author": {
        "id": 1453063
      },
      "writtenOn": "2020-03-10T15:43:13Z",
      "side": 1,
      "message": "nit:space",
      "range": {
        "startLine": 113,
        "startChar": 64,
        "endLine": 113,
        "endChar": 65
      },
      "revId": "e5ca91c04ed5dac7fc5484a9e2c0716abfa5f7fa",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "057db2f0_3909f763",
        "filename": "libc/bionic/malloc_heapprofd.cpp",
        "patchSetId": 31
      },
      "lineNbr": 113,
      "author": {
        "id": 1268571
      },
      "writtenOn": "2020-03-11T11:37:33Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "88caee81_7bfd0370",
      "range": {
        "startLine": 113,
        "startChar": 64,
        "endLine": 113,
        "endChar": 65
      },
      "revId": "e5ca91c04ed5dac7fc5484a9e2c0716abfa5f7fa",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "cadf8235_e8d8e03d",
        "filename": "libc/bionic/malloc_heapprofd.cpp",
        "patchSetId": 31
      },
      "lineNbr": 335,
      "author": {
        "id": 1453063
      },
      "writtenOn": "2020-03-10T16:23:31Z",
      "side": 1,
      "message": "This needs to be updated",
      "range": {
        "startLine": 335,
        "startChar": 5,
        "endLine": 335,
        "endChar": 29
      },
      "revId": "e5ca91c04ed5dac7fc5484a9e2c0716abfa5f7fa",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "edf7b854_1deb1cb3",
        "filename": "libc/bionic/malloc_heapprofd.cpp",
        "patchSetId": 31
      },
      "lineNbr": 335,
      "author": {
        "id": 1268571
      },
      "writtenOn": "2020-03-11T11:37:33Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "cadf8235_e8d8e03d",
      "range": {
        "startLine": 335,
        "startChar": 5,
        "endLine": 335,
        "endChar": 29
      },
      "revId": "e5ca91c04ed5dac7fc5484a9e2c0716abfa5f7fa",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9025b5e3_30953933",
        "filename": "libc/bionic/malloc_heapprofd.cpp",
        "patchSetId": 31
      },
      "lineNbr": 346,
      "author": {
        "id": 1453063
      },
      "writtenOn": "2020-03-10T15:43:13Z",
      "side": 1,
      "message": "Why is this lock-free? libc should be initialized enough to lock here IIUC, and it\u0027s possible to get the profiling signal at libc init time.",
      "range": {
        "startLine": 346,
        "startChar": 21,
        "endLine": 346,
        "endChar": 33
      },
      "revId": "e5ca91c04ed5dac7fc5484a9e2c0716abfa5f7fa",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "445cf817_d18984ba",
        "filename": "libc/bionic/malloc_heapprofd.cpp",
        "patchSetId": 31
      },
      "lineNbr": 346,
      "author": {
        "id": 1268571
      },
      "writtenOn": "2020-03-11T11:37:33Z",
      "side": 1,
      "message": "kWithoutLock does *not* mean there is no mutual exclusion, just that we do not also use the pthreads mutex. kWithLock only makes conflicts less likely, not impossible.",
      "parentUuid": "9025b5e3_30953933",
      "range": {
        "startLine": 346,
        "startChar": 21,
        "endLine": 346,
        "endChar": 33
      },
      "revId": "e5ca91c04ed5dac7fc5484a9e2c0716abfa5f7fa",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "71bc6b8c_2534ba71",
        "filename": "libc/bionic/malloc_heapprofd.cpp",
        "patchSetId": 31
      },
      "lineNbr": 346,
      "author": {
        "id": 1453063
      },
      "writtenOn": "2020-03-11T17:00:31Z",
      "side": 1,
      "message": "Yep - but why wouldn\u0027t we use kWithLock here?",
      "parentUuid": "445cf817_d18984ba",
      "range": {
        "startLine": 346,
        "startChar": 21,
        "endLine": 346,
        "endChar": 33
      },
      "revId": "e5ca91c04ed5dac7fc5484a9e2c0716abfa5f7fa",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3003a857_c6658130",
        "filename": "libc/bionic/malloc_heapprofd.cpp",
        "patchSetId": 31
      },
      "lineNbr": 389,
      "author": {
        "id": 1453063
      },
      "writtenOn": "2020-03-10T16:23:31Z",
      "side": 1,
      "message": "If the detached thread finishes before the call to `pthread_setname_np`, then this is racy as well.\n\nProbably best to create -\u003e setname -\u003e detach (ideally pthread_attr_setname_np would exist, but apparently that\u0027s an extension).",
      "range": {
        "startLine": 389,
        "startChar": 17,
        "endLine": 389,
        "endChar": 31
      },
      "revId": "e5ca91c04ed5dac7fc5484a9e2c0716abfa5f7fa",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f43eb550_b1cd0474",
        "filename": "libc/bionic/malloc_heapprofd.cpp",
        "patchSetId": 31
      },
      "lineNbr": 389,
      "author": {
        "id": 1268571
      },
      "writtenOn": "2020-03-11T11:37:33Z",
      "side": 1,
      "message": "Good catch, thanks!",
      "parentUuid": "3003a857_c6658130",
      "range": {
        "startLine": 389,
        "startChar": 17,
        "endLine": 389,
        "endChar": 31
      },
      "revId": "e5ca91c04ed5dac7fc5484a9e2c0716abfa5f7fa",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2547ed1b_fe6fd8d7",
        "filename": "libc/bionic/malloc_heapprofd.cpp",
        "patchSetId": 31
      },
      "lineNbr": 392,
      "author": {
        "id": 1453063
      },
      "writtenOn": "2020-03-10T15:43:13Z",
      "side": 1,
      "message": "This is UB if pthread_create failed.",
      "range": {
        "startLine": 392,
        "startChar": 0,
        "endLine": 392,
        "endChar": 64
      },
      "revId": "e5ca91c04ed5dac7fc5484a9e2c0716abfa5f7fa",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5e6c6b77_fa3ace3e",
        "filename": "libc/bionic/malloc_heapprofd.cpp",
        "patchSetId": 31
      },
      "lineNbr": 392,
      "author": {
        "id": 1268571
      },
      "writtenOn": "2020-03-11T11:37:33Z",
      "side": 1,
      "message": "Good catch, thanks!",
      "parentUuid": "2547ed1b_fe6fd8d7",
      "range": {
        "startLine": 392,
        "startChar": 0,
        "endLine": 392,
        "endChar": 64
      },
      "revId": "e5ca91c04ed5dac7fc5484a9e2c0716abfa5f7fa",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "589b319a_2ff69d78",
        "filename": "libc/bionic/malloc_heapprofd.cpp",
        "patchSetId": 31
      },
      "lineNbr": 404,
      "author": {
        "id": 1453063
      },
      "writtenOn": "2020-03-10T15:43:13Z",
      "side": 1,
      "message": "This is now racy, right? `gHeapProfdState` is now either `kInitialState` (if `InitHeapprofd`) hasn\u0027t completed (or failed), or `kHookInstalled`. Another thread can handle the Heapprofd signal, and set the dispatch table.",
      "range": {
        "startLine": 404,
        "startChar": 2,
        "endLine": 404,
        "endChar": 73
      },
      "revId": "e5ca91c04ed5dac7fc5484a9e2c0716abfa5f7fa",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9b9ee4e5_2f18cf5f",
        "filename": "libc/bionic/malloc_heapprofd.cpp",
        "patchSetId": 31
      },
      "lineNbr": 404,
      "author": {
        "id": 1268571
      },
      "writtenOn": "2020-03-11T11:37:33Z",
      "side": 1,
      "message": "I don\u0027t think this is racy, because both states are okay. If another initialization happens between L401 and L404, and we dispatch to that, that\u0027s also okay. We spawn the thread and then dispatch to the system allocator. That is WAI.",
      "parentUuid": "589b319a_2ff69d78",
      "range": {
        "startLine": 404,
        "startChar": 2,
        "endLine": 404,
        "endChar": 73
      },
      "revId": "e5ca91c04ed5dac7fc5484a9e2c0716abfa5f7fa",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9527f42d_18fdf2c9",
        "filename": "libc/bionic/malloc_heapprofd.cpp",
        "patchSetId": 31
      },
      "lineNbr": 404,
      "author": {
        "id": 1453063
      },
      "writtenOn": "2020-03-11T17:00:31Z",
      "side": 1,
      "message": "It may be benign, but it\u0027s still a race between the read (here) and the write (in `HandleHeapprofdSignal`). If you\u0027re okay with the race, I\u0027d suggest making `gPreviousDefaultDispatchTable` atomic and loading/storing using relaxed atomics (and document that this is a race-by-design).",
      "parentUuid": "9b9ee4e5_2f18cf5f",
      "range": {
        "startLine": 404,
        "startChar": 2,
        "endLine": 404,
        "endChar": 73
      },
      "revId": "e5ca91c04ed5dac7fc5484a9e2c0716abfa5f7fa",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7db8b970_c156a00f",
        "filename": "libc/bionic/malloc_heapprofd.cpp",
        "patchSetId": 31
      },
      "lineNbr": 440,
      "author": {
        "id": 1453063
      },
      "writtenOn": "2020-03-10T16:23:31Z",
      "side": 1,
      "message": "kEphemeralHookInstalled -\u003e kUninstallingHook is not a transition",
      "range": {
        "startLine": 440,
        "startChar": 53,
        "endLine": 440,
        "endChar": 76
      },
      "revId": "e5ca91c04ed5dac7fc5484a9e2c0716abfa5f7fa",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "179b3880_c19085df",
        "filename": "libc/bionic/malloc_heapprofd.cpp",
        "patchSetId": 31
      },
      "lineNbr": 440,
      "author": {
        "id": 1268571
      },
      "writtenOn": "2020-03-11T11:37:33Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "7db8b970_c156a00f",
      "range": {
        "startLine": 440,
        "startChar": 53,
        "endLine": 440,
        "endChar": 76
      },
      "revId": "e5ca91c04ed5dac7fc5484a9e2c0716abfa5f7fa",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}