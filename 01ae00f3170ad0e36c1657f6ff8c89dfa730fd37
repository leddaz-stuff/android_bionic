{
  "comments": [
    {
      "key": {
        "uuid": "05caf7dd_b04795d8",
        "filename": "libc/stdio/fileext.h",
        "patchSetId": 1
      },
      "lineNbr": 39,
      "author": {
        "id": 1019050
      },
      "writtenOn": "2014-04-29T23:39:40Z",
      "side": 1,
      "message": "Don\u0027t you need wcio.h for this structure definition?",
      "range": {
        "startLine": 39,
        "startChar": 1,
        "endLine": 39,
        "endChar": 21
      },
      "revId": "01ae00f3170ad0e36c1657f6ff8c89dfa730fd37",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "05caf7dd_633715fa",
        "filename": "libc/stdio/fileext.h",
        "patchSetId": 1
      },
      "lineNbr": 39,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2014-04-29T23:57:08Z",
      "side": 1,
      "message": "heh. that\u0027s how it used to be, but now wcio.h is the upstream file. that\u0027s a problem because that uses mbstate_t without #include\u0027ing \u003cwchar.h\u003e. so rather than start copying that into our files, i removed it instead. upstream conveniently always #includes stuff in the right order by using \"local.h\" instead, where we now do have the right thing (and which also brings that file closer to upstream).",
      "parentUuid": "05caf7dd_b04795d8",
      "range": {
        "startLine": 39,
        "startChar": 1,
        "endLine": 39,
        "endChar": 21
      },
      "revId": "01ae00f3170ad0e36c1657f6ff8c89dfa730fd37",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "aa9d7827_bbff2779",
        "filename": "libc/stdio/fileext.h",
        "patchSetId": 1
      },
      "lineNbr": 39,
      "author": {
        "id": 1022077
      },
      "writtenOn": "2014-05-02T11:15:57Z",
      "side": 1,
      "message": "Unfortunately this also have the nasty side effect of screwing up analysis tools which try to compile headers.",
      "parentUuid": "05caf7dd_633715fa",
      "range": {
        "startLine": 39,
        "startChar": 1,
        "endLine": 39,
        "endChar": 21
      },
      "revId": "01ae00f3170ad0e36c1657f6ff8c89dfa730fd37",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4a66bc13_fed59978",
        "filename": "libc/stdio/fileext.h",
        "patchSetId": 1
      },
      "lineNbr": 39,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2014-05-02T16:39:51Z",
      "side": 1,
      "message": "since i think we\u0027re always going to have local modifications in these files (if only because the BSDs implement file locking in a very different way), i don\u0027t mind making the headers stand-alone. but shouldn\u0027t it only be headers under include/ that you\u0027re feeding to the analysis tools? shouldn\u0027t they drag these ones in themselves when they compile the corresponding source?",
      "parentUuid": "aa9d7827_bbff2779",
      "range": {
        "startLine": 39,
        "startChar": 1,
        "endLine": 39,
        "endChar": 21
      },
      "revId": "01ae00f3170ad0e36c1657f6ff8c89dfa730fd37",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4adb1c06_93023ed4",
        "filename": "libc/stdio/fileext.h",
        "patchSetId": 1
      },
      "lineNbr": 39,
      "author": {
        "id": 1022077
      },
      "writtenOn": "2014-05-06T10:56:31Z",
      "side": 1,
      "message": "I should use only the include/ dirs and ignore the rest but it\u0027s helpful to also look at internal headers for an in depth analysis. Most of things are implemented internally more or less the same across different libc, so looking at them could reveal inconsistencies with the upstream. \n\nThe other thing is that some public headers drag private/machine specific headers with them. So ignoring them it will produce just partial results for some types (e.g. for ones that resolves in the uapi headers).",
      "parentUuid": "4a66bc13_fed59978",
      "range": {
        "startLine": 39,
        "startChar": 1,
        "endLine": 39,
        "endChar": 21
      },
      "revId": "01ae00f3170ad0e36c1657f6ff8c89dfa730fd37",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c5c37fc9_3eb1b980",
        "filename": "libc/stdio/local.h",
        "patchSetId": 1
      },
      "lineNbr": 59,
      "author": {
        "id": 1019050
      },
      "writtenOn": "2014-04-29T23:39:40Z",
      "side": 1,
      "message": "Incredibly small nit, but this should be a tab to match the rest of the file.",
      "range": {
        "startLine": 59,
        "startChar": 6,
        "endLine": 59,
        "endChar": 7
      },
      "revId": "01ae00f3170ad0e36c1657f6ff8c89dfa730fd37",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c5c37fc9_19169763",
        "filename": "libc/stdio/local.h",
        "patchSetId": 1
      },
      "lineNbr": 59,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2014-04-29T23:57:08Z",
      "side": 1,
      "message": "believe it or not, this is a space in the upstream file (revision 1.20, 2011-11-08)!",
      "parentUuid": "c5c37fc9_3eb1b980",
      "range": {
        "startLine": 59,
        "startChar": 6,
        "endLine": 59,
        "endChar": 7
      },
      "revId": "01ae00f3170ad0e36c1657f6ff8c89dfa730fd37",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}