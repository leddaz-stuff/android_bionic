{
  "comments": [
    {
      "key": {
        "uuid": "31cada6a_fa796c42",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1019050
      },
      "writtenOn": "2020-09-22T20:44:32Z",
      "side": 1,
      "message": "Can you add a bionic unit test for this? It can ignore verifying behavior if the mallopt fails.",
      "revId": "0270ba030ead24a5ea68d48f185fd31ccd61a223",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "80d71400_baa04012",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1067098
      },
      "writtenOn": "2020-09-22T22:24:58Z",
      "side": 1,
      "message": "There isn\u0027t a great test that we can write for this because in the case where mem init is per-thread disabled the contents of malloc\u0027d memory is unspecified so there isn\u0027t really anything that we can test for. Probably all that we can test for is whether calloc still zeroes memory when mem init is disabled.",
      "parentUuid": "31cada6a_fa796c42",
      "revId": "0270ba030ead24a5ea68d48f185fd31ccd61a223",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b4cf7bb7_663ba67b",
        "filename": "libc/include/malloc.h",
        "patchSetId": 2
      },
      "lineNbr": 182,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2020-09-21T22:30:56Z",
      "side": 1,
      "message": "main question here is what will happen on jemalloc devices?",
      "range": {
        "startLine": 182,
        "startChar": 8,
        "endLine": 182,
        "endChar": 33
      },
      "revId": "0270ba030ead24a5ea68d48f185fd31ccd61a223",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "21c2341f_c279a669",
        "filename": "libc/include/malloc.h",
        "patchSetId": 2
      },
      "lineNbr": 182,
      "author": {
        "id": 1067098
      },
      "writtenOn": "2020-09-21T22:34:29Z",
      "side": 1,
      "message": "In this case the operation will fail (by mallopt returning 0). Since jemalloc doesn\u0027t have the feature anyway you should be fine if you ignore the mallopt return value.",
      "parentUuid": "b4cf7bb7_663ba67b",
      "range": {
        "startLine": 182,
        "startChar": 8,
        "endLine": 182,
        "endChar": 33
      },
      "revId": "0270ba030ead24a5ea68d48f185fd31ccd61a223",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ef9c875f_cb448396",
        "filename": "libc/include/malloc.h",
        "patchSetId": 2
      },
      "lineNbr": 182,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2020-09-21T22:35:49Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "21c2341f_c279a669",
      "range": {
        "startLine": 182,
        "startChar": 8,
        "endLine": 182,
        "endChar": 33
      },
      "revId": "0270ba030ead24a5ea68d48f185fd31ccd61a223",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}