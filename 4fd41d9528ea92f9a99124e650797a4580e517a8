{
  "comments": [
    {
      "key": {
        "uuid": "9cace08e_ae65513f",
        "filename": "tests/elftls_dl_test.cpp",
        "patchSetId": 1
      },
      "lineNbr": 180,
      "author": {
        "id": 1229339
      },
      "writtenOn": "2020-01-31T01:15:56Z",
      "side": 1,
      "message": "I would\u0027ve thought that libc.so would only use IE accesses to its TLS variables, which won\u0027t allocate a real DTV? i.e. We should mark the variables with __attribute__((tls_model(\"initial-exec\"))) or compile the relevant code with -ftls-model\u003dinitial-exec.\n\nThere should be a new DTV slot for libc.so, but the per-thread DTV is only allocated with a dynamic access (__tls_get_addr or tlsdesc_resolver_dynamic).\n\nIf a dynamic access from libc.so allocates the DTV for arm32, then I\u0027d guess that arm64 is different because the linker knows that libc.so\u0027s TLS data is static TLS, so it can use tlsdesc_resolver_static instead of tlsdesc_resolver_dynamic, and tlsdesc_resolver_static ignores the DTV (and the DTV generation field).",
      "revId": "4fd41d9528ea92f9a99124e650797a4580e517a8",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "821fd6c6_6bfc6b58",
        "filename": "tests/elftls_dl_test.cpp",
        "patchSetId": 1
      },
      "lineNbr": 180,
      "author": {
        "id": 1453063
      },
      "writtenOn": "2020-02-06T01:16:21Z",
      "side": 1,
      "message": "So everything in GWP-Asan is annotated with the initial-exec attribute (https://cs.android.com/android/platform/superproject/+/master:external/gwp_asan/gwp_asan/definitions.h;l\u003d12?q\u003dfile:gwp_asan%20INITIAL).\n\nI don\u0027t know why the dtv is reallocated, as all GWP-ASan references shouldn\u0027t be through dynamic accesses.\n\nI\u0027m considering the possibility of there being a thread_local variable that\u0027s currently using emutls in libc. We globally change libc to use -fno-emulated-tls in the GWP-ASan patch, so that may induce a dynamic access and thus produce a DTV.",
      "parentUuid": "9cace08e_ae65513f",
      "revId": "4fd41d9528ea92f9a99124e650797a4580e517a8",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "daa11026_c058b406",
        "filename": "tests/elftls_dl_test.cpp",
        "patchSetId": 1
      },
      "lineNbr": 180,
      "author": {
        "id": 1453063
      },
      "writtenOn": "2020-02-06T01:49:42Z",
      "side": 1,
      "message": "Using a naive search, the only TLS that might have flipped from emulated -\u003e dynamic resolved is libc.so is in locale.cpp, but it\u0027s #ifdef-\u0027d out in my libc, so no dice there.\n\nI have no idea what\u0027s calling a dynamic resolver. Let me dig some more.",
      "parentUuid": "821fd6c6_6bfc6b58",
      "revId": "4fd41d9528ea92f9a99124e650797a4580e517a8",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e425bd8a_8b2a6465",
        "filename": "tests/elftls_dl_test.cpp",
        "patchSetId": 1
      },
      "lineNbr": 180,
      "author": {
        "id": 1453063
      },
      "writtenOn": "2020-02-06T16:32:31Z",
      "side": 1,
      "message": "Think I\u0027ve found it with Peter\u0027s help - GWP-ASan PRNG uses a dynamic TLS reference. Fixing upstream and will re-patch up this test.",
      "parentUuid": "daa11026_c058b406",
      "revId": "4fd41d9528ea92f9a99124e650797a4580e517a8",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2ec25469_690a0ad2",
        "filename": "tests/elftls_dl_test.cpp",
        "patchSetId": 1
      },
      "lineNbr": 180,
      "author": {
        "id": 1453063
      },
      "writtenOn": "2020-02-06T22:40:18Z",
      "side": 1,
      "message": "Fixed.",
      "parentUuid": "e425bd8a_8b2a6465",
      "revId": "4fd41d9528ea92f9a99124e650797a4580e517a8",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}