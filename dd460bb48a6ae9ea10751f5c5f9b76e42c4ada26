{
  "comments": [
    {
      "key": {
        "uuid": "1cf89137_a6e3a7f7",
        "filename": "libc/netbsd/net/getaddrinfo.c",
        "patchSetId": 4
      },
      "lineNbr": 365,
      "author": {
        "id": 1000835
      },
      "writtenOn": "2014-02-25T11:08:46Z",
      "side": 1,
      "message": "Can the caller pass in a mark of -1? If so, what will happen? Will the code just use an unmarked socket? I suppose that would indicate a bug in netd, but still, it sounds bad.\n\nAlso, this should probably be indented using tabs for consistency.",
      "revId": "dd460bb48a6ae9ea10751f5c5f9b76e42c4ada26",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3cfb9535_8a39c857",
        "filename": "libc/netbsd/net/getaddrinfo.c",
        "patchSetId": 4
      },
      "lineNbr": 365,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2014-02-25T23:46:49Z",
      "side": 1,
      "message": "(even if you\u0027re planning on staying in sync with upstream, you\u0027ll probably want to use \"diff -wub\" anyway. if i had to work on this, i\u0027d be tempted to just convert all the tabs to spaces once and for all.)",
      "parentUuid": "1cf89137_a6e3a7f7",
      "revId": "dd460bb48a6ae9ea10751f5c5f9b76e42c4ada26",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3c2475a3_0ac94b68",
        "filename": "libc/netbsd/net/getaddrinfo.c",
        "patchSetId": 4
      },
      "lineNbr": 365,
      "author": {
        "id": 1003988
      },
      "writtenOn": "2014-02-26T23:46:00Z",
      "side": 1,
      "message": "I\u0027m thinking we should make mark unsigned and always apply it here (no condition on mark value).\n\nThis way, if someone uses bionic without netd and sticks to netid \u003d\u003d 0, we end up using the sockets \"unmarked\".",
      "parentUuid": "1cf89137_a6e3a7f7",
      "revId": "dd460bb48a6ae9ea10751f5c5f9b76e42c4ada26",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9c3ac1c3_312ed010",
        "filename": "libc/netbsd/net/getaddrinfo.c",
        "patchSetId": 4
      },
      "lineNbr": 1799,
      "author": {
        "id": 1000835
      },
      "writtenOn": "2014-02-25T11:08:46Z",
      "side": 1,
      "message": "Fix indentation. Also, mark should be unsigned.",
      "revId": "dd460bb48a6ae9ea10751f5c5f9b76e42c4ada26",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5c0f6924_8b0afdef",
        "filename": "libc/netbsd/net/getaddrinfo.c",
        "patchSetId": 4
      },
      "lineNbr": 1799,
      "author": {
        "id": 1003988
      },
      "writtenOn": "2014-02-26T23:46:00Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "9c3ac1c3_312ed010",
      "revId": "dd460bb48a6ae9ea10751f5c5f9b76e42c4ada26",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3cfb9535_488cf071",
        "filename": "libc/netbsd/resolv/res_cache.c",
        "patchSetId": 4
      },
      "lineNbr": 1883,
      "author": {
        "id": 1000835
      },
      "writtenOn": "2014-02-25T11:08:46Z",
      "side": 1,
      "message": "And here I was thinking we were using a hash table and not a linear scan. :-)\n\nWhich makes me think: is there a way that new netids can accumulate without being deleted, thus causing memory leaks and performance hits to DNS lookups?\n\nThat\u0027s not really an issue with the current code, because new interface names don\u0027t get randomly created and deleted, but if we move to netids that are never reused, then we need to make sure they get deleted. Whose responsibility is this? netd?\n\nSpeaking of which, where\u0027s the code that frees the resolv_cache_info objects? There is code that does this, right?",
      "revId": "dd460bb48a6ae9ea10751f5c5f9b76e42c4ada26",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3c2475a3_6a431f84",
        "filename": "libc/netbsd/resolv/res_cache.c",
        "patchSetId": 4
      },
      "lineNbr": 1883,
      "author": {
        "id": 1003988
      },
      "writtenOn": "2014-02-26T23:46:00Z",
      "side": 1,
      "message": "There is no code to free resolv_cache_info nor resolv_cache objects.\n\nI changed __get_res_cache above to not allocate cache if it does not exist. Only _resolv_set_nameservers_for_net can create the cache if it does not exist.\n\nresolv_cache objects are not refcounted nor leased so deleting them without crashing the threads waiting in res_send would be a non-trivial change (need to hold the cache list lock while reading/writing the cache), so I\u0027d rather punt on it for now.",
      "parentUuid": "3cfb9535_488cf071",
      "revId": "dd460bb48a6ae9ea10751f5c5f9b76e42c4ada26",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9c3ac1c3_f19288f9",
        "filename": "libc/netbsd/resolv/res_send.c",
        "patchSetId": 4
      },
      "lineNbr": 765,
      "author": {
        "id": 1000835
      },
      "writtenOn": "2014-02-25T11:08:46Z",
      "side": 1,
      "message": "This should be unsigned, right?",
      "revId": "dd460bb48a6ae9ea10751f5c5f9b76e42c4ada26",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5c0f6924_0b326d1e",
        "filename": "libc/netbsd/resolv/res_send.c",
        "patchSetId": 4
      },
      "lineNbr": 765,
      "author": {
        "id": 1003988
      },
      "writtenOn": "2014-02-26T23:46:00Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "9c3ac1c3_f19288f9",
      "revId": "dd460bb48a6ae9ea10751f5c5f9b76e42c4ada26",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1cf89137_264c3760",
        "filename": "libc/private/resolv_private.h",
        "patchSetId": 4
      },
      "lineNbr": 145,
      "author": {
        "id": 1000835
      },
      "writtenOn": "2014-02-25T11:08:46Z",
      "side": 1,
      "message": "Note that if netid \u003d\u003d mark, then this needs to be unsigned, as inside the kernel the mark is a __u32.",
      "revId": "dd460bb48a6ae9ea10751f5c5f9b76e42c4ada26",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1c217195_7ed085e5",
        "filename": "libc/private/resolv_private.h",
        "patchSetId": 4
      },
      "lineNbr": 145,
      "author": {
        "id": 1003988
      },
      "writtenOn": "2014-02-26T23:46:00Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "1cf89137_264c3760",
      "revId": "dd460bb48a6ae9ea10751f5c5f9b76e42c4ada26",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}