{
  "comments": [
    {
      "key": {
        "uuid": "2c65fb2f_7141a692",
        "filename": "libc/bionic/gwp_asan_wrappers.cpp",
        "patchSetId": 4
      },
      "lineNbr": 53,
      "author": {
        "id": 1005967
      },
      "writtenOn": "2020-02-03T19:15:10Z",
      "side": 1,
      "message": "pass a single bool argument",
      "revId": "e0850fd4f622c58a0ccd2996f84cb9dd263ab713",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "05607946_0f5c5d80",
        "filename": "libc/bionic/gwp_asan_wrappers.cpp",
        "patchSetId": 4
      },
      "lineNbr": 84,
      "author": {
        "id": 1005967
      },
      "writtenOn": "2020-02-03T19:15:10Z",
      "side": 1,
      "message": "storing a dispatch pointer \"for later\" will break things if other malloc is initialized after us",
      "range": {
        "startLine": 84,
        "startChar": 0,
        "endLine": 84,
        "endChar": 27
      },
      "revId": "e0850fd4f622c58a0ccd2996f84cb9dd263ab713",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ca89e77e_25d8cb90",
        "filename": "libc/bionic/gwp_asan_wrappers.cpp",
        "patchSetId": 4
      },
      "lineNbr": 89,
      "author": {
        "id": 1005967
      },
      "writtenOn": "2020-02-03T19:15:10Z",
      "side": 1,
      "message": "zygote_child \u003d\u003d nullptr\nis this ever true?",
      "revId": "e0850fd4f622c58a0ccd2996f84cb9dd263ab713",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "73da94fb_c2fa1256",
        "filename": "libc/bionic/gwp_asan_wrappers.cpp",
        "patchSetId": 4
      },
      "lineNbr": 90,
      "author": {
        "id": 1005967
      },
      "writtenOn": "2020-02-03T19:15:10Z",
      "side": 1,
      "message": "what about app_process64?\nAlso, is it not zygote/zygote64 at this point yet?",
      "revId": "e0850fd4f622c58a0ccd2996f84cb9dd263ab713",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b60cf74f_b3a51c60",
        "filename": "libc/bionic/gwp_asan_wrappers.cpp",
        "patchSetId": 4
      },
      "lineNbr": 90,
      "author": {
        "id": 1019050
      },
      "writtenOn": "2020-02-04T02:25:46Z",
      "side": 1,
      "message": "I tried this and it\u0027s still app_process by this time. I think both zygote are app_process at this point, but it\u0027s worth verifying.",
      "parentUuid": "73da94fb_c2fa1256",
      "revId": "e0850fd4f622c58a0ccd2996f84cb9dd263ab713",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "dd3cca5f_68434b0a",
        "filename": "libc/bionic/gwp_asan_wrappers.cpp",
        "patchSetId": 4
      },
      "lineNbr": 90,
      "author": {
        "id": 1067098
      },
      "writtenOn": "2020-02-04T05:01:37Z",
      "side": 1,
      "message": "Comparing the process name seems like a bit of a hack. I wonder whether this would be better done using an ELF note or something.",
      "parentUuid": "b60cf74f_b3a51c60",
      "revId": "e0850fd4f622c58a0ccd2996f84cb9dd263ab713",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c3c08819_84aa599f",
        "filename": "libc/bionic/gwp_asan_wrappers.cpp",
        "patchSetId": 4
      },
      "lineNbr": 96,
      "author": {
        "id": 1005967
      },
      "writtenOn": "2020-02-03T19:15:10Z",
      "side": 1,
      "message": "why not call InitGwpAsan directly?",
      "revId": "e0850fd4f622c58a0ccd2996f84cb9dd263ab713",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9a497151_5a08cd1f",
        "filename": "libc/bionic/gwp_asan_wrappers.cpp",
        "patchSetId": 4
      },
      "lineNbr": 96,
      "author": {
        "id": 1019050
      },
      "writtenOn": "2020-02-04T02:25:46Z",
      "side": 1,
      "message": "Agreed, no reason to call the higher level function.",
      "parentUuid": "c3c08819_84aa599f",
      "revId": "e0850fd4f622c58a0ccd2996f84cb9dd263ab713",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "82f7145e_3c8ac41f",
        "filename": "libc/bionic/gwp_asan_wrappers.cpp",
        "patchSetId": 4
      },
      "lineNbr": 111,
      "author": {
        "id": 1005967
      },
      "writtenOn": "2020-02-03T19:15:10Z",
      "side": 1,
      "message": "heapprofd returns -1 here",
      "revId": "e0850fd4f622c58a0ccd2996f84cb9dd263ab713",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "68376395_0fe182e6",
        "filename": "libc/bionic/gwp_asan_wrappers.cpp",
        "patchSetId": 4
      },
      "lineNbr": 124,
      "author": {
        "id": 1005967
      },
      "writtenOn": "2020-02-03T19:15:10Z",
      "side": 1,
      "message": "It might be easier to simply declare an extern global for this and the dispatch table below.",
      "revId": "e0850fd4f622c58a0ccd2996f84cb9dd263ab713",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "20786eba_f4ce0ffc",
        "filename": "libc/bionic/malloc_common_dynamic.cpp",
        "patchSetId": 4
      },
      "lineNbr": 347,
      "author": {
        "id": 1005967
      },
      "writtenOn": "2020-02-03T19:15:10Z",
      "side": 1,
      "message": "please call it for what it does, i.e. bool no_warning_if_fails, or may_fail, something like that",
      "revId": "e0850fd4f622c58a0ccd2996f84cb9dd263ab713",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "cfeb49fc_d2e04608",
        "filename": "libc/bionic/malloc_common_dynamic.cpp",
        "patchSetId": 4
      },
      "lineNbr": 347,
      "author": {
        "id": 1019050
      },
      "writtenOn": "2020-02-04T02:25:46Z",
      "side": 1,
      "message": "Yeah, maybe instead warn_on_init_fail and then you can have the warn_on_init_fail down below, rather than the negative.",
      "parentUuid": "20786eba_f4ce0ffc",
      "revId": "e0850fd4f622c58a0ccd2996f84cb9dd263ab713",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "575ea2c0_e49c3079",
        "filename": "libc/bionic/malloc_common_dynamic.cpp",
        "patchSetId": 4
      },
      "lineNbr": 431,
      "author": {
        "id": 1005967
      },
      "writtenOn": "2020-02-03T19:15:10Z",
      "side": 1,
      "message": "this needs to be done in mallopt, too",
      "revId": "e0850fd4f622c58a0ccd2996f84cb9dd263ab713",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "eb5ef188_44c57d40",
        "filename": "libc/platform/bionic/malloc.h",
        "patchSetId": 4
      },
      "lineNbr": 102,
      "author": {
        "id": 1019050
      },
      "writtenOn": "2020-02-04T02:25:46Z",
      "side": 1,
      "message": "What happens if it is not single-threaded? Will it fail/crash, or something else?",
      "range": {
        "startLine": 102,
        "startChar": 14,
        "endLine": 102,
        "endChar": 62
      },
      "revId": "e0850fd4f622c58a0ccd2996f84cb9dd263ab713",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    }
  ]
}