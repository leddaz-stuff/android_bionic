{
  "comments": [
    {
      "key": {
        "uuid": "1b3453db_b4ddeb94",
        "filename": "libc/bionic/pthread_cond.cpp",
        "patchSetId": 5
      },
      "lineNbr": 233,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2015-11-20T03:56:24Z",
      "side": 1,
      "message": "what if rel_timeout is slightly negative? the addition of the current time will make it positive, so the check in __pthread_cond_timedwait will pass, even though rel_timeout was actually invalid, no?",
      "revId": "c9a659c57b256001fd63f9825bde69e660c2655b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fb75bfb9_28650523",
        "filename": "libc/bionic/pthread_cond.cpp",
        "patchSetId": 5
      },
      "lineNbr": 233,
      "author": {
        "id": 1056364
      },
      "writtenOn": "2015-11-21T00:30:54Z",
      "side": 1,
      "message": "If rel_timeout is slightly negative, abs_timeout will be positive but \u003c cur time. futex_wait_ex() will return ETIMEDOUT in this situation. Although it doesn\u0027t check if rel_timeout is valid, the behavior is the same as before. And even if we add a check for rel_timeout here, it returns ETIMEDOUT when tv_sec \u003c 0 (same as current implementation). It has a slightly difference that tv_nsec of rel_timeout is checked, which I think doesn\u0027t matter.",
      "parentUuid": "1b3453db_b4ddeb94",
      "revId": "c9a659c57b256001fd63f9825bde69e660c2655b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a5d1668e_08d6471a",
        "filename": "libc/bionic/semaphore.cpp",
        "patchSetId": 5
      },
      "lineNbr": 238,
      "author": {
        "id": 1032276
      },
      "writtenOn": "2015-12-16T21:34:25Z",
      "side": 1,
      "message": "This returns zero if abs_timeout \u003d\u003d NULL, whereas before the call would return EINVAL?",
      "range": {
        "startLine": 238,
        "startChar": 15,
        "endLine": 238,
        "endChar": 42
      },
      "revId": "c9a659c57b256001fd63f9825bde69e660c2655b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4518aa2c_15d1344a",
        "filename": "libc/bionic/semaphore.cpp",
        "patchSetId": 5
      },
      "lineNbr": 238,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2015-12-16T22:58:42Z",
      "side": 1,
      "message": "yeah, that seems like a bug. did you hit this in practice?",
      "parentUuid": "a5d1668e_08d6471a",
      "range": {
        "startLine": 238,
        "startChar": 15,
        "endLine": 238,
        "endChar": 42
      },
      "revId": "c9a659c57b256001fd63f9825bde69e660c2655b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "850622ce_baa5cd7a",
        "filename": "libc/bionic/semaphore.cpp",
        "patchSetId": 5
      },
      "lineNbr": 238,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2015-12-16T23:18:20Z",
      "side": 1,
      "message": "https://android-review.googlesource.com/188101",
      "parentUuid": "4518aa2c_15d1344a",
      "range": {
        "startLine": 238,
        "startChar": 15,
        "endLine": 238,
        "endChar": 42
      },
      "revId": "c9a659c57b256001fd63f9825bde69e660c2655b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c5b1fa58_71889806",
        "filename": "libc/private/bionic_futex.h",
        "patchSetId": 5
      },
      "lineNbr": 48,
      "author": {
        "id": 1032276
      },
      "writtenOn": "2015-12-16T21:46:38Z",
      "side": 1,
      "message": "This is val2, but val3 is the one that should take the bitset?",
      "range": {
        "startLine": 48,
        "startChar": 66,
        "endLine": 48,
        "endChar": 72
      },
      "revId": "c9a659c57b256001fd63f9825bde69e660c2655b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a5b8863e_f093e03b",
        "filename": "libc/private/bionic_futex.h",
        "patchSetId": 5
      },
      "lineNbr": 48,
      "author": {
        "id": 1032276
      },
      "writtenOn": "2015-12-16T21:51:45Z",
      "side": 1,
      "message": "manpage excerpt:\n\n.BR FUTEX_WAKE_BITSET \" (since Linux 2.6.25)\"\n.\\\" commit cd689985cf49f6ff5c8eddc48d98b9d581d9475d\nThis operation is the same as\n.BR FUTEX_WAKE\nexcept that the\n.I val3 \nargument is used to provide a 32-bit bitset to the kernel.",
      "parentUuid": "c5b1fa58_71889806",
      "range": {
        "startLine": 48,
        "startChar": 66,
        "endLine": 48,
        "endChar": 72
      },
      "revId": "c9a659c57b256001fd63f9825bde69e660c2655b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0512320e_364c36c3",
        "filename": "libc/private/bionic_futex.h",
        "patchSetId": 5
      },
      "lineNbr": 48,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2015-12-16T22:58:42Z",
      "side": 1,
      "message": "looks right to me...\n\n       int futex(int *uaddr, int op, int val, const struct timespec *timeout,\n                 int *uaddr2, int val3);\n\n\n  __NR_futex, ftx, op, value, timeout, NULL, bitset\n\nuaddr\u003dftx\nop\u003dop\nval\u003dvalue\ntimeout\u003dtimeout\nuaddr2\u003dNULL\nval3\u003dbitset",
      "parentUuid": "a5b8863e_f093e03b",
      "range": {
        "startLine": 48,
        "startChar": 66,
        "endLine": 48,
        "endChar": 72
      },
      "revId": "c9a659c57b256001fd63f9825bde69e660c2655b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a5b8863e_567c644a",
        "filename": "libc/private/bionic_futex.h",
        "patchSetId": 5
      },
      "lineNbr": 48,
      "author": {
        "id": 1032276
      },
      "writtenOn": "2015-12-17T15:26:13Z",
      "side": 1,
      "message": "Got it, val2 \u003d\u003d \u003cother arguments, timeout or addr2, depending on function according to documentation\u003e.\n\nI saw this inside the kernel:\n\nlong do_futex(u32 __user *uaddr, int op, u32 val, ktime_t *timeout, u32 __user *uaddr2, u32 val2, u32 val3)\n\nThat confused me, but am now reassured with:\n\nSYSCALL_DEFINE6(futex, u32 __user *, uaddr, int, op, u32, val, struct timespec __user *, utime, u32 __user *, uaddr2, u32, val3)\n\n:-)\n\nSo we are OK here.",
      "parentUuid": "0512320e_364c36c3",
      "range": {
        "startLine": 48,
        "startChar": 66,
        "endLine": 48,
        "endChar": 72
      },
      "revId": "c9a659c57b256001fd63f9825bde69e660c2655b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}