{
  "comments": [
    {
      "key": {
        "uuid": "c1e75c23_72b4d8d8",
        "filename": "libc/arch-arm/bionic/vfork.S",
        "patchSetId": 1
      },
      "lineNbr": 31,
      "author": {
        "id": 1056364
      },
      "writtenOn": "2016-10-25T19:57:44Z",
      "side": 1,
      "message": "any idea why vfork is not written in vfork.cpp, like fork.cpp?",
      "range": {
        "startLine": 31,
        "startChar": 6,
        "endLine": 31,
        "endChar": 11
      },
      "revId": "e653ba28911c45ba5b6faa7f92ffa00586510e11",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e1f620e5_a3c55a2a",
        "filename": "libc/arch-arm/bionic/vfork.S",
        "patchSetId": 1
      },
      "lineNbr": 31,
      "author": {
        "id": 1042203
      },
      "writtenOn": "2016-10-26T02:57:21Z",
      "side": 1,
      "message": "I think it\u0027s because of this comment in the x86 file:\n\n\"This custom code preserves the return address across the system call.\"",
      "parentUuid": "c1e75c23_72b4d8d8",
      "revId": "e653ba28911c45ba5b6faa7f92ffa00586510e11",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c1e75c23_b2c92066",
        "filename": "libc/bionic/clone.cpp",
        "patchSetId": 1
      },
      "lineNbr": 41,
      "author": {
        "id": 1056364
      },
      "writtenOn": "2016-10-25T19:57:44Z",
      "side": 1,
      "message": "shall we check if __get_thread()-\u003etid \u003d\u003d 0, so we can avoid unnecessary syscall?",
      "range": {
        "startLine": 41,
        "startChar": 2,
        "endLine": 41,
        "endChar": 45
      },
      "revId": "e653ba28911c45ba5b6faa7f92ffa00586510e11",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c1e75c23_35a51a89",
        "filename": "libc/bionic/clone.cpp",
        "patchSetId": 1
      },
      "lineNbr": 41,
      "author": {
        "id": 1056364
      },
      "writtenOn": "2016-10-25T20:11:47Z",
      "side": 1,
      "message": "your situation is creating new process via clone(nullptr) in https://android-review.googlesource.com/#/c/219374/11/init/service.cpp, but __start_thread is for new thread. Why not change in clone()? I doubt if anyone can use clone() to create new thread directly, in which case the tls array will be unset and you almost can\u0027t call any libc function.",
      "parentUuid": "c1e75c23_b2c92066",
      "range": {
        "startLine": 41,
        "startChar": 2,
        "endLine": 41,
        "endChar": 45
      },
      "revId": "e653ba28911c45ba5b6faa7f92ffa00586510e11",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "21c918eb_652f26e9",
        "filename": "libc/bionic/clone.cpp",
        "patchSetId": 1
      },
      "lineNbr": 41,
      "author": {
        "id": 1042203
      },
      "writtenOn": "2016-10-26T02:57:21Z",
      "side": 1,
      "message": "You\u0027re right. Your suggestion to separate out the tests sussed out a bug that was giving misleading test results. I fixed the non-__start_thread case of clone as well, but we still need to unconditionally update the tid here.",
      "parentUuid": "c1e75c23_b2c92066",
      "revId": "e653ba28911c45ba5b6faa7f92ffa00586510e11",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c1e75c23_92ce1c6a",
        "filename": "libc/bionic/gettid.cpp",
        "patchSetId": 1
      },
      "lineNbr": 35,
      "author": {
        "id": 1056364
      },
      "writtenOn": "2016-10-25T19:57:44Z",
      "side": 1,
      "message": "Since we can set __get_thread()-\u003etid properly for clone. If we can also set __get_thread()-\u003etid properly for vfork, we can avoid this check, right? Since gettid() is more likely to be called than vfork()/clone(), I prefer to increase operations on those functions rather than this one.",
      "range": {
        "startLine": 35,
        "startChar": 20,
        "endLine": 35,
        "endChar": 31
      },
      "revId": "e653ba28911c45ba5b6faa7f92ffa00586510e11",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c1e75c23_b5deaaf4",
        "filename": "libc/bionic/gettid.cpp",
        "patchSetId": 1
      },
      "lineNbr": 35,
      "author": {
        "id": 1079148
      },
      "writtenOn": "2016-10-25T20:28:18Z",
      "side": 1,
      "message": "This also doesn\u0027t store the retrieved value, so as soon as you call clone or vfork once, you permanently make gettid() slower on that thread?",
      "revId": "e653ba28911c45ba5b6faa7f92ffa00586510e11",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e1f620e5_03b78ebb",
        "filename": "libc/bionic/gettid.cpp",
        "patchSetId": 1
      },
      "lineNbr": 35,
      "author": {
        "id": 1042203
      },
      "writtenOn": "2016-10-26T02:57:21Z",
      "side": 1,
      "message": "The bug has some discussion on vfork. We can\u0027t set the tid in vfork because the change will affect the parent process as well. It\u0027s not clear to me that it\u0027s valid to even call getpid()/gettid() after vfork (per http://pubs.opengroup.org/onlinepubs/009695399/functions/vfork.html). So I\u0027ve dropped the vfork.S changes and skipped the gettid test for it.",
      "parentUuid": "c1e75c23_92ce1c6a",
      "revId": "e653ba28911c45ba5b6faa7f92ffa00586510e11",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "21c918eb_452caaf2",
        "filename": "libc/bionic/gettid.cpp",
        "patchSetId": 1
      },
      "lineNbr": 35,
      "author": {
        "id": 1042203
      },
      "writtenOn": "2016-10-26T02:57:21Z",
      "side": 1,
      "message": "I reverted this part of the change.",
      "parentUuid": "c1e75c23_b5deaaf4",
      "revId": "e653ba28911c45ba5b6faa7f92ffa00586510e11",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c1e75c23_12bb4cc7",
        "filename": "tests/unistd_test.cpp",
        "patchSetId": 1
      },
      "lineNbr": 424,
      "author": {
        "id": 1056364
      },
      "writtenOn": "2016-10-25T19:57:44Z",
      "side": 1,
      "message": "create separate test for gettid() to make it clearer?",
      "range": {
        "startLine": 424,
        "startChar": 8,
        "endLine": 424,
        "endChar": 29
      },
      "revId": "e653ba28911c45ba5b6faa7f92ffa00586510e11",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "21c918eb_a5a59e58",
        "filename": "tests/unistd_test.cpp",
        "patchSetId": 1
      },
      "lineNbr": 424,
      "author": {
        "id": 1042203
      },
      "writtenOn": "2016-10-26T02:57:21Z",
      "side": 1,
      "message": "Thank you for this suggestion. Doing so found a critical bug in my test logic, caused by gettid() being marked __attribute_const__. That was causing anything but the first call to gettid() in a function to be optimized out. And that meant several of the test assertions were not actually testing the correct thing.\n\nI added separate tests for all the gettid scenarios. I\u0027m skipping vfork per the other comment.",
      "parentUuid": "c1e75c23_12bb4cc7",
      "revId": "e653ba28911c45ba5b6faa7f92ffa00586510e11",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}