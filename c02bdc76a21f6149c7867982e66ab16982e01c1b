{
  "comments": [
    {
      "key": {
        "uuid": "2d6e217b_cf65f1cd",
        "filename": "tests/pthread_test.cpp",
        "patchSetId": 1
      },
      "lineNbr": 1220,
      "author": {
        "id": 1019050
      },
      "writtenOn": "2015-05-20T19:31:46Z",
      "side": 0,
      "message": "I\u0027m not sure I agree with the removal of these tests. It\u0027s not clear, do you think it\u0027s impossible to hit these cases, and that\u0027s why they are not appropriate?",
      "range": {
        "startLine": 1183,
        "startChar": 0,
        "endLine": 1220,
        "endChar": 31
      },
      "revId": "c02bdc76a21f6149c7867982e66ab16982e01c1b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6d7ad934_401b1cf4",
        "filename": "tests/pthread_test.cpp",
        "patchSetId": 1
      },
      "lineNbr": 1220,
      "author": {
        "id": 1056364
      },
      "writtenOn": "2015-05-20T20:28:58Z",
      "side": 0,
      "message": "I think this part can be removed, because it doesn\u0027t make sense to limit the stack size to be smaller\nthan what it is currently using. Firstly, the kernel only checks the limit when the stack needs\nto grow, so making stack size limit smaller than what it is using doesn\u0027t make sense to the kernel.\nSecondly, glibc doesn\u0027t consider the stack size should be exactly the same as the stack size limit.\nSo this part only tests bionic specific implementation of considering stack size limit as stack size.\nIf you really prefer to keep it, I think at least we should include it in __BIONIC__ macro guard.",
      "parentUuid": "2d6e217b_cf65f1cd",
      "range": {
        "startLine": 1183,
        "startChar": 0,
        "endLine": 1220,
        "endChar": 31
      },
      "revId": "c02bdc76a21f6149c7867982e66ab16982e01c1b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2d6e217b_bd28f739",
        "filename": "tests/pthread_test.cpp",
        "patchSetId": 1
      },
      "lineNbr": 1220,
      "author": {
        "id": 1019050
      },
      "writtenOn": "2015-05-20T20:53:18Z",
      "side": 0,
      "message": "Looking at the code, I don\u0027t think both cases are necessary, but I think keeping one case where RLIMIT_STACK is not RLIM_INFINITY is useful since it exercises a slightly different path for the bionic code. You can put it in a bionic ifdef, but if glibc isn\u0027t quite the same as bionic here.",
      "parentUuid": "6d7ad934_401b1cf4",
      "range": {
        "startLine": 1183,
        "startChar": 0,
        "endLine": 1220,
        "endChar": 31
      },
      "revId": "c02bdc76a21f6149c7867982e66ab16982e01c1b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "adfdb1c1_d95dd57b",
        "filename": "tests/pthread_test.cpp",
        "patchSetId": 1
      },
      "lineNbr": 1220,
      "author": {
        "id": 1056364
      },
      "writtenOn": "2015-05-20T21:46:05Z",
      "side": 0,
      "message": "Done",
      "parentUuid": "2d6e217b_bd28f739",
      "range": {
        "startLine": 1183,
        "startChar": 0,
        "endLine": 1220,
        "endChar": 31
      },
      "revId": "c02bdc76a21f6149c7867982e66ab16982e01c1b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}