{
  "comments": [
    {
      "key": {
        "uuid": "bee6f9fc_62de926d",
        "filename": "libc/include/locale.h",
        "patchSetId": 1
      },
      "lineNbr": 36,
      "author": {
        "id": 1043845
      },
      "writtenOn": "2016-08-12T17:36:59Z",
      "side": 1,
      "message": "Since we\u0027re on a spree of POSIX pedantry, doesn\u0027t this also expose things like ptrdiff_t?",
      "revId": "c5537889f5496fd303b8326a7c1e34c95a7ea290",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bee6f9fc_22380a84",
        "filename": "libc/include/locale.h",
        "patchSetId": 1
      },
      "lineNbr": 36,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2016-08-12T17:45:54Z",
      "side": 1,
      "message": "not if you #define __need_NULL first (L35). we haven\u0027t been particularly good about that in the past, but, yes, i\u0027m trying to not introduce more leakage here.\n\n(but, yes, i\u0027m actually only checking we have *at least* what POSIX says. but POSIX is generally pretty loose about \"oh, and you can drag in the whole of \u003cunistd.h\u003e too, which itself can drag in pretty much everything else\", so i think the damage we\u0027d cause by cleaning up existing transitive includes would outweigh the very small potential benefit.)",
      "parentUuid": "bee6f9fc_62de926d",
      "revId": "c5537889f5496fd303b8326a7c1e34c95a7ea290",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bee6f9fc_42ba76d5",
        "filename": "libc/include/locale.h",
        "patchSetId": 1
      },
      "lineNbr": 36,
      "author": {
        "id": 1043845
      },
      "writtenOn": "2016-08-12T17:51:50Z",
      "side": 1,
      "message": "Doesn\u0027t stddef.h often come from the compiler rather than us though? Do we know if clang and gcc will honor __need_NULL?\n\n\u003e so i think the damage we\u0027d cause by cleaning up existing transitive includes would outweigh the very small potential benefit.\n\nThis is pretty much our last chance if we do want to get things cleaned up. It will be a lot more disruptive after unified headers ship. I suppose the only real value in it is that it\u0027ll ease the transition to C++ modules if we get there some day.",
      "parentUuid": "bee6f9fc_22380a84",
      "revId": "c5537889f5496fd303b8326a7c1e34c95a7ea290",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bee6f9fc_45e9a00c",
        "filename": "libc/include/locale.h",
        "patchSetId": 1
      },
      "lineNbr": 36,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2016-08-12T18:52:18Z",
      "side": 1,
      "message": "yes, \u003cstddef.h\u003e [always] comes from the compiler, but since both glibc and libc++ use the __need_NULL macro, i think we can count on continued support for it from both compilers :-)\n\n(and it fails safe anyway. i suspect most programmers don\u0027t even know that things like size_t and NULL are part of the library rather than the language, and i don\u0027t think there\u0027s any real harm in them being available even in circumstances where they\u0027re not required to be.)\n\n--\n\nas for transitive includes, i had a big clean up of some of the more offensive ones last year. i closed the bug even though i hadn\u0027t finished because what was left was minor and code in vendor/ meant we really couldn\u0027t fix it economically anyway. so unless you have specific counterexamples i don\u0027t think there\u0027s anything left to do there.",
      "parentUuid": "bee6f9fc_42ba76d5",
      "revId": "c5537889f5496fd303b8326a7c1e34c95a7ea290",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}