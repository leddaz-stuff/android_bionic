{
  "comments": [
    {
      "key": {
        "uuid": "78753eb8_62dd6851",
        "filename": "linker/Android.mk",
        "patchSetId": 2
      },
      "lineNbr": 168,
      "author": {
        "id": 1003981
      },
      "writtenOn": "2015-07-13T17:57:12Z",
      "side": 1,
      "message": "Why not reuse the existing module definition? by adding the following lines:\nifneq ($(SANITIZE_TARGET),) # or it equals address?\nLOCAL_CFLAGS +\u003d -DADDRESS_SANITIZER_LINKER\nLOCAL_MODULE_STEM_32 :\u003d linker_asan\nLOCAL_MODULE_STEM_64 :\u003d linker_asan64\nendif",
      "range": {
        "startLine": 168,
        "startChar": 0,
        "endLine": 168,
        "endChar": 27
      },
      "revId": "40b6c0d66912a1d925c02b8bb497e35297176d4a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "987af2a8_a6494809",
        "filename": "linker/Android.mk",
        "patchSetId": 2
      },
      "lineNbr": 168,
      "author": {
        "id": 1005967
      },
      "writtenOn": "2015-07-13T18:07:25Z",
      "side": 1,
      "message": "Because in SANITIZE_TARGET, the following deps are built with ASan:\nlibziparchive libutils libz liblog\n\nAnd linker can not be built with ASan.\n\nWe can disable ASan on them (undesirable).\nWe can build _noasan versions of those (a lot more build copy-paste than this).",
      "parentUuid": "78753eb8_62dd6851",
      "range": {
        "startLine": 168,
        "startChar": 0,
        "endLine": 168,
        "endChar": 27
      },
      "revId": "40b6c0d66912a1d925c02b8bb497e35297176d4a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7861be1e_b3c73889",
        "filename": "linker/linker.cpp",
        "patchSetId": 2
      },
      "lineNbr": 83,
      "author": {
        "id": 1041673
      },
      "writtenOn": "2015-07-11T10:34:51Z",
      "side": 1,
      "message": "is this order correct? shouldn\u0027t /data/lib64 go before /vendor/lib64?",
      "revId": "40b6c0d66912a1d925c02b8bb497e35297176d4a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3801063e_515234e1",
        "filename": "linker/linker.cpp",
        "patchSetId": 2
      },
      "lineNbr": 83,
      "author": {
        "id": 1005967
      },
      "writtenOn": "2015-07-11T18:36:12Z",
      "side": 1,
      "message": "The usual order is /data/lib:/vendor/lib. If a library is present in both, and for some reason the vendor version could not be instrumented, we should prefer an non-instrumented vendor library to an instrumented system library, I think.",
      "parentUuid": "7861be1e_b3c73889",
      "revId": "40b6c0d66912a1d925c02b8bb497e35297176d4a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}