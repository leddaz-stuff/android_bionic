{
  "comments": [
    {
      "key": {
        "uuid": "a9420f4a_18f2c465",
        "filename": "libc/Android.mk",
        "patchSetId": 2
      },
      "lineNbr": 1049,
      "author": {
        "id": 1005967
      },
      "writtenOn": "2015-09-15T23:10:53Z",
      "side": 1,
      "message": "This is intended to be used on the make command line, or in board config files, similar to USE_CLANG_PLATFORM_BUILD.",
      "revId": "e9069d9af60f434aa1afebf2aaad57a1a96d61b5",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6473de94_61736170",
        "filename": "libc/bionic/pthread_internal.h",
        "patchSetId": 2
      },
      "lineNbr": 107,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2015-09-15T23:24:22Z",
      "side": 1,
      "message": "type*\n\nmove these up by alternate_signal_stack?",
      "revId": "e9069d9af60f434aa1afebf2aaad57a1a96d61b5",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0465c2c3_954c330a",
        "filename": "libc/bionic/pthread_internal.h",
        "patchSetId": 2
      },
      "lineNbr": 107,
      "author": {
        "id": 1005967
      },
      "writtenOn": "2015-09-17T22:10:21Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "6473de94_61736170",
      "revId": "e9069d9af60f434aa1afebf2aaad57a1a96d61b5",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a9420f4a_182d2472",
        "filename": "libc/bionic/safestack.cpp",
        "patchSetId": 2
      },
      "lineNbr": 49,
      "author": {
        "id": 1005967
      },
      "writtenOn": "2015-09-15T23:10:53Z",
      "side": 1,
      "message": "Is it OK for the compiler to know the value of TLS_SLOT_SAFESTACK? This is already the case with TLS_SLOT_STACK_GUARD, so the answer is probably yes.",
      "revId": "e9069d9af60f434aa1afebf2aaad57a1a96d61b5",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8478d270_f1e9ff2a",
        "filename": "libc/bionic/safestack.cpp",
        "patchSetId": 2
      },
      "lineNbr": 49,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2015-09-15T23:24:22Z",
      "side": 1,
      "message": "yes, i think that\u0027s fine.",
      "parentUuid": "a9420f4a_182d2472",
      "revId": "e9069d9af60f434aa1afebf2aaad57a1a96d61b5",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0465c2c3_d5db0b08",
        "filename": "libc/bionic/safestack.cpp",
        "patchSetId": 2
      },
      "lineNbr": 54,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2015-09-15T23:24:22Z",
      "side": 1,
      "message": "size_t\n\nconstexpr?",
      "revId": "e9069d9af60f434aa1afebf2aaad57a1a96d61b5",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6473de94_348d2927",
        "filename": "libc/bionic/safestack.cpp",
        "patchSetId": 2
      },
      "lineNbr": 54,
      "author": {
        "id": 1005967
      },
      "writtenOn": "2015-09-17T22:10:21Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "0465c2c3_d5db0b08",
      "revId": "e9069d9af60f434aa1afebf2aaad57a1a96d61b5",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c9a3c3b1_5065ece3",
        "filename": "libc/bionic/safestack.cpp",
        "patchSetId": 2
      },
      "lineNbr": 56,
      "author": {
        "id": 1005967
      },
      "writtenOn": "2015-09-17T22:10:21Z",
      "side": 1,
      "message": "I\u0027ve renamed this to look less ugly. We should keep this for platforms where the compiler can not (yet) emit direct TLS access.",
      "revId": "e9069d9af60f434aa1afebf2aaad57a1a96d61b5",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "843d32a1_58a1120c",
        "filename": "libc/bionic/safestack.cpp",
        "patchSetId": 2
      },
      "lineNbr": 66,
      "author": {
        "id": 1079148
      },
      "writtenOn": "2015-09-16T22:32:22Z",
      "side": 1,
      "message": "nullptr",
      "revId": "e9069d9af60f434aa1afebf2aaad57a1a96d61b5",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "099a3b78_52e89473",
        "filename": "libc/bionic/safestack.cpp",
        "patchSetId": 2
      },
      "lineNbr": 66,
      "author": {
        "id": 1005967
      },
      "writtenOn": "2015-09-17T22:10:21Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "843d32a1_58a1120c",
      "revId": "e9069d9af60f434aa1afebf2aaad57a1a96d61b5",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "843d32a1_f8ee3e30",
        "filename": "libc/bionic/safestack.cpp",
        "patchSetId": 2
      },
      "lineNbr": 67,
      "author": {
        "id": 1079148
      },
      "writtenOn": "2015-09-16T22:32:22Z",
      "side": 1,
      "message": "Should we abort here?",
      "revId": "e9069d9af60f434aa1afebf2aaad57a1a96d61b5",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "49c27358_b48aa09b",
        "filename": "libc/bionic/safestack.cpp",
        "patchSetId": 2
      },
      "lineNbr": 67,
      "author": {
        "id": 1005967
      },
      "writtenOn": "2015-09-17T22:10:21Z",
      "side": 1,
      "message": "Right. There is no way to proceed if the code expects an unsafe stack and we can not provide it.",
      "parentUuid": "843d32a1_f8ee3e30",
      "revId": "e9069d9af60f434aa1afebf2aaad57a1a96d61b5",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bfb7aeb4_e4a97350",
        "filename": "libc/bionic/safestack.cpp",
        "patchSetId": 2
      },
      "lineNbr": 67,
      "author": {
        "id": 1056364
      },
      "writtenOn": "2015-10-14T23:08:28Z",
      "side": 1,
      "message": "but from the user\u0027s side, their application may abort just because they failed to call pthread_create. this seems too strict. how about return a success flag in unsafe_stack_alloc?",
      "parentUuid": "49c27358_b48aa09b",
      "revId": "e9069d9af60f434aa1afebf2aaad57a1a96d61b5",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8478d270_d10b239e",
        "filename": "libc/bionic/safestack.cpp",
        "patchSetId": 2
      },
      "lineNbr": 70,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2015-09-15T23:24:22Z",
      "side": 1,
      "message": "pthread_create?",
      "revId": "e9069d9af60f434aa1afebf2aaad57a1a96d61b5",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "648afea0_d5aeb7ba",
        "filename": "libc/bionic/safestack.cpp",
        "patchSetId": 2
      },
      "lineNbr": 70,
      "author": {
        "id": 1005967
      },
      "writtenOn": "2015-09-17T22:10:21Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "8478d270_d10b239e",
      "revId": "e9069d9af60f434aa1afebf2aaad57a1a96d61b5",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e467cecb_e23cd7ad",
        "filename": "libc/bionic/safestack.cpp",
        "patchSetId": 2
      },
      "lineNbr": 77,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2015-09-15T23:24:22Z",
      "side": 1,
      "message": "yeah, that\u0027s a good idea. we should probably do this for the signal stacks. (i agree with you that it\u0027s not worth the bother for the guard pages, since they\u0027re inherently adjacent.)",
      "revId": "e9069d9af60f434aa1afebf2aaad57a1a96d61b5",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "848ff2ac_7bcdd89b",
        "filename": "libc/bionic/safestack.cpp",
        "patchSetId": 2
      },
      "lineNbr": 82,
      "author": {
        "id": 1005967
      },
      "writtenOn": "2015-09-15T23:10:53Z",
      "side": 1,
      "message": "This is how it looks in proc/maps:\n\nb62c2000-b62c3000 ---p 00000000 00:00 0          [anon:unsafe stack guard page]\nb62c3000-b63c1000 rw-p 00000000 00:00 0          [anon:unsafe-stack:3959]\nb63c1000-b63c2000 ---p 00000000 00:00 0          [anon:thread stack guard page]\nb63c2000-b64c0000 rw-p 00000000 00:00 0          [stack:3959]\nb64c0000-b6540000 rw-p 00000000 00:00 0          [anon:libc_malloc]\nb656c000-b656d000 ---p 00000000 00:00 0          [anon:thread signal stack guard page]\nb656d000-b656f000 rw-p 00000000 00:00 0          [anon:thread signal stack]",
      "revId": "e9069d9af60f434aa1afebf2aaad57a1a96d61b5",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "64383eb1_36945e02",
        "filename": "libc/bionic/safestack.cpp",
        "patchSetId": 2
      },
      "lineNbr": 88,
      "author": {
        "id": 1079148
      },
      "writtenOn": "2015-09-16T22:32:22Z",
      "side": 1,
      "message": "Likewise",
      "revId": "e9069d9af60f434aa1afebf2aaad57a1a96d61b5",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "29bd3fca_d333b48d",
        "filename": "libc/bionic/safestack.cpp",
        "patchSetId": 2
      },
      "lineNbr": 88,
      "author": {
        "id": 1005967
      },
      "writtenOn": "2015-09-17T22:10:21Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "64383eb1_36945e02",
      "revId": "e9069d9af60f434aa1afebf2aaad57a1a96d61b5",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c45e4afd_0a11ddce",
        "filename": "libc/bionic/safestack.cpp",
        "patchSetId": 2
      },
      "lineNbr": 108,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2015-09-15T23:24:22Z",
      "side": 1,
      "message": "nullptr",
      "revId": "e9069d9af60f434aa1afebf2aaad57a1a96d61b5",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e467cecb_223def55",
        "filename": "libc/bionic/safestack.cpp",
        "patchSetId": 2
      },
      "lineNbr": 108,
      "author": {
        "id": 1005967
      },
      "writtenOn": "2015-09-17T22:10:21Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "c45e4afd_0a11ddce",
      "revId": "e9069d9af60f434aa1afebf2aaad57a1a96d61b5",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "848ff2ac_5b5c9c63",
        "filename": "libc/bionic/safestack.cpp",
        "patchSetId": 2
      },
      "lineNbr": 117,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2015-09-15T23:24:22Z",
      "side": 1,
      "message": "{}",
      "revId": "e9069d9af60f434aa1afebf2aaad57a1a96d61b5",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "099a3b78_92f11c63",
        "filename": "libc/bionic/safestack.cpp",
        "patchSetId": 2
      },
      "lineNbr": 117,
      "author": {
        "id": 1005967
      },
      "writtenOn": "2015-09-17T22:10:21Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "848ff2ac_5b5c9c63",
      "revId": "e9069d9af60f434aa1afebf2aaad57a1a96d61b5",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e467cecb_42458334",
        "filename": "libc/bionic/safestack.cpp",
        "patchSetId": 2
      },
      "lineNbr": 124,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2015-09-15T23:24:22Z",
      "side": 1,
      "message": "i think i prefer your internal names!",
      "revId": "e9069d9af60f434aa1afebf2aaad57a1a96d61b5",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a46156bd_564f05fe",
        "filename": "libc/bionic/safestack.cpp",
        "patchSetId": 2
      },
      "lineNbr": 124,
      "author": {
        "id": 1005967
      },
      "writtenOn": "2015-09-17T22:10:21Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "e467cecb_42458334",
      "revId": "e9069d9af60f434aa1afebf2aaad57a1a96d61b5",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "648afea0_1a64cce6",
        "filename": "libc/private/bionic_safestack.h",
        "patchSetId": 2
      },
      "lineNbr": 36,
      "author": {
        "id": 1005967
      },
      "writtenOn": "2015-09-15T23:10:53Z",
      "side": 1,
      "message": "This probably should be a build property instead, so that we do not have two different builds of bionic.\n\nImplementation is less than 100 lines of code and is called only on thread create and destruction, so replacing this with a runtime check would not have any noticable effect on performance or binary size.",
      "revId": "e9069d9af60f434aa1afebf2aaad57a1a96d61b5",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e467cecb_422ca376",
        "filename": "libc/private/bionic_safestack.h",
        "patchSetId": 2
      },
      "lineNbr": 36,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2015-09-15T23:24:22Z",
      "side": 1,
      "message": "agreed.",
      "parentUuid": "648afea0_1a64cce6",
      "revId": "e9069d9af60f434aa1afebf2aaad57a1a96d61b5",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6473de94_342c4976",
        "filename": "libc/private/bionic_safestack.h",
        "patchSetId": 2
      },
      "lineNbr": 36,
      "author": {
        "id": 1005967
      },
      "writtenOn": "2015-09-17T22:10:21Z",
      "side": 1,
      "message": "System properties are initialized in __libc_init_common, which runs after .preinit_array constructors. This way safestack code can not be run in .preinit_array.\n\nIt\u0027s probably fine - this is not the only thing that does not work in .preinit_array.\n\nIf necessary, we could allocate unsafe stack in __libc_init_main_thread in all cases, and then deallocate in __libc_init_common if the system property is not set.",
      "parentUuid": "e467cecb_422ca376",
      "revId": "e9069d9af60f434aa1afebf2aaad57a1a96d61b5",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "692bb717_a4322cd6",
        "filename": "libc/private/bionic_safestack.h",
        "patchSetId": 2
      },
      "lineNbr": 36,
      "author": {
        "id": 1005967
      },
      "writtenOn": "2015-09-22T18:05:15Z",
      "side": 1,
      "message": "In fact, system properties are available in __linker_init_post_relocation, just a little bit after the main thread is initialized. We can initialize safestack then.\n\nThis CL also needs tests.",
      "parentUuid": "6473de94_342c4976",
      "revId": "e9069d9af60f434aa1afebf2aaad57a1a96d61b5",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "099a3b78_4fb6225e",
        "filename": "libc/private/bionic_safestack.h",
        "patchSetId": 2
      },
      "lineNbr": 36,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2015-09-22T18:36:34Z",
      "side": 1,
      "message": "i think you were right both times; once for static executables, the other for dynamic.",
      "parentUuid": "692bb717_a4322cd6",
      "revId": "e9069d9af60f434aa1afebf2aaad57a1a96d61b5",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6473de94_a19bb9d9",
        "filename": "libc/private/bionic_tls.h",
        "patchSetId": 2
      },
      "lineNbr": 77,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2015-09-15T23:24:22Z",
      "side": 1,
      "message": "comment? (and if you hard-code this in the compiler, add the \u003d here like TLS_SLOT_STACK_GUARD, just to be really super clear that we must not fuck with this :-) )",
      "revId": "e9069d9af60f434aa1afebf2aaad57a1a96d61b5",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "44725a92_4f5a076c",
        "filename": "libc/private/bionic_tls.h",
        "patchSetId": 2
      },
      "lineNbr": 77,
      "author": {
        "id": 1005967
      },
      "writtenOn": "2015-09-17T22:10:21Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "6473de94_a19bb9d9",
      "revId": "e9069d9af60f434aa1afebf2aaad57a1a96d61b5",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}