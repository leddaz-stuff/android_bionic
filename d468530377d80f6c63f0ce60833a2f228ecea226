{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "fbc510ce_10439d9f",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 15,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2024-04-17T17:33:01Z",
      "side": 1,
      "message": "no, let\u0027s not bother with cruft like that when it makes things _less_ readable like here...",
      "revId": "d468530377d80f6c63f0ce60833a2f228ecea226",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "92007154_e74dc67e",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 15,
      "author": {
        "id": 1114194
      },
      "writtenOn": "2024-04-17T17:39:11Z",
      "side": 1,
      "message": "$ grep -rn __always_inline libc\n\nYou\u0027ll see the one change to libc/malloc_debug/malloc_debug.cpp makes Nanotime() consistent with the rest of bionic (i.e. use inline+__always_inline).  Otherwise Nanotime() sticks out to me as the odd ball.\n\nHappy to drop that hunk from this change, but to be consistent throughout the codebase I recommend either:\n- add inline to one function, Nanotime\n- remove inline from many functions (54) already using __always_inline",
      "parentUuid": "fbc510ce_10439d9f",
      "revId": "d468530377d80f6c63f0ce60833a2f228ecea226",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7dd4ae75_fc3e3e72",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 15,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2024-04-17T17:49:49Z",
      "side": 1,
      "message": "it\u0027s not _just_ Nanotime() -- there\u0027s a few functions in headers too -- but, yes, you are correct that i didn\u0027t realize we had so much stuttering already.\n\ni\u0027d still rather go with the second option (remove duplicate `inline` from `__always_inline` functions for clarity), but if you fix the commit message to talk about _consistency_ rather than gcc support, this is fine too...",
      "parentUuid": "92007154_e74dc67e",
      "revId": "d468530377d80f6c63f0ce60833a2f228ecea226",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "7190c856_55df58e8",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 15,
      "author": {
        "id": 1114194
      },
      "writtenOn": "2024-04-17T17:51:40Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "7dd4ae75_fc3e3e72",
      "revId": "d468530377d80f6c63f0ce60833a2f228ecea226",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}