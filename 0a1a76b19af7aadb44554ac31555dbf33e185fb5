{
  "comments": [
    {
      "key": {
        "uuid": "8c1c27a9_4919179f",
        "filename": "benchmarks/bionic_benchmarks.cpp",
        "patchSetId": 4
      },
      "lineNbr": 36,
      "author": {
        "id": 1019050
      },
      "writtenOn": "2017-08-04T21:12:35Z",
      "side": 1,
      "message": "This should be g_ too.",
      "range": {
        "startLine": 36,
        "startChar": 21,
        "endLine": 36,
        "endChar": 33
      },
      "revId": "0a1a76b19af7aadb44554ac31555dbf33e185fb5",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "bedd3726_7ddeaa46",
        "filename": "benchmarks/bionic_benchmarks.cpp",
        "patchSetId": 4
      },
      "lineNbr": 62,
      "author": {
        "id": 1019050
      },
      "writtenOn": "2017-08-04T21:12:35Z",
      "side": 1,
      "message": "You aren\u0027t modifying this value, so no need to make it a pointer. To make it clearer what values get modified and which don\u0027t we try and follow the idea that a pointer is something that will be modified. Although, we don\u0027t always follow this to the letter.",
      "range": {
        "startLine": 62,
        "startChar": 23,
        "endLine": 62,
        "endChar": 27
      },
      "revId": "0a1a76b19af7aadb44554ac31555dbf33e185fb5",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f9896c2a_0bf6485e",
        "filename": "benchmarks/bionic_benchmarks.cpp",
        "patchSetId": 4
      },
      "lineNbr": 63,
      "author": {
        "id": 1019050
      },
      "writtenOn": "2017-08-04T21:12:35Z",
      "side": 1,
      "message": "Is this the end of the sentence, or did you mean to add more.",
      "range": {
        "startLine": 63,
        "startChar": 79,
        "endLine": 63,
        "endChar": 80
      },
      "revId": "0a1a76b19af7aadb44554ac31555dbf33e185fb5",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9472747f_527f8205",
        "filename": "benchmarks/bionic_benchmarks.cpp",
        "patchSetId": 4
      },
      "lineNbr": 69,
      "author": {
        "id": 1019050
      },
      "writtenOn": "2017-08-04T21:12:35Z",
      "side": 1,
      "message": "I\u0027d use size_t for this value, we tend to use size_t for most index types.",
      "range": {
        "startLine": 69,
        "startChar": 4,
        "endLine": 69,
        "endChar": 7
      },
      "revId": "0a1a76b19af7aadb44554ac31555dbf33e185fb5",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f7117d53_7e28920a",
        "filename": "benchmarks/bionic_benchmarks.cpp",
        "patchSetId": 4
      },
      "lineNbr": 98,
      "author": {
        "id": 1019050
      },
      "writtenOn": "2017-08-04T21:12:35Z",
      "side": 1,
      "message": "This isn\u0027t necessary, it should be contructed as empty.",
      "range": {
        "startLine": 98,
        "startChar": 0,
        "endLine": 98,
        "endChar": 20
      },
      "revId": "0a1a76b19af7aadb44554ac31555dbf33e185fb5",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2879b902_ee444dfc",
        "filename": "benchmarks/bionic_benchmarks.cpp",
        "patchSetId": 4
      },
      "lineNbr": 112,
      "author": {
        "id": 1019050
      },
      "writtenOn": "2017-08-04T21:12:35Z",
      "side": 1,
      "message": "It might be better to just make this a long int so no conversion is necessary, and no worries about overflows. The same for any other option.",
      "range": {
        "startLine": 112,
        "startChar": 10,
        "endLine": 112,
        "endChar": 26
      },
      "revId": "0a1a76b19af7aadb44554ac31555dbf33e185fb5",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "83d9bcf6_e9ea625d",
        "filename": "benchmarks/bionic_benchmarks.cpp",
        "patchSetId": 4
      },
      "lineNbr": 113,
      "author": {
        "id": 1019050
      },
      "writtenOn": "2017-08-04T21:12:35Z",
      "side": 1,
      "message": "I think it\u0027s a little more readable to write this as *check_null !\u003d \u0027\\0\u0027 here.",
      "range": {
        "startLine": 113,
        "startChar": 14,
        "endLine": 113,
        "endChar": 25
      },
      "revId": "0a1a76b19af7aadb44554ac31555dbf33e185fb5",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7f5c4f5a_6ceeff5f",
        "filename": "benchmarks/bionic_benchmarks.cpp",
        "patchSetId": 4
      },
      "lineNbr": 124,
      "author": {
        "id": 1019050
      },
      "writtenOn": "2017-08-04T21:12:35Z",
      "side": 1,
      "message": "Not necessary, it should get converted by the compiler to a std::string.",
      "range": {
        "startLine": 124,
        "startChar": 25,
        "endLine": 124,
        "endChar": 37
      },
      "revId": "0a1a76b19af7aadb44554ac31555dbf33e185fb5",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c73ca10c_55c9552b",
        "filename": "benchmarks/bionic_benchmarks.cpp",
        "patchSetId": 4
      },
      "lineNbr": 132,
      "author": {
        "id": 1019050
      },
      "writtenOn": "2017-08-04T21:12:35Z",
      "side": 1,
      "message": "Same as above.",
      "range": {
        "startLine": 132,
        "startChar": 42,
        "endLine": 132,
        "endChar": 54
      },
      "revId": "0a1a76b19af7aadb44554ac31555dbf33e185fb5",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ee364b1d_810589ee",
        "filename": "benchmarks/bionic_benchmarks.cpp",
        "patchSetId": 4
      },
      "lineNbr": 171,
      "author": {
        "id": 1019050
      },
      "writtenOn": "2017-08-04T21:12:35Z",
      "side": 1,
      "message": "rv doesn\u0027t have much meaning. Is there a better name that is more meaningful?",
      "range": {
        "startLine": 171,
        "startChar": 74,
        "endLine": 171,
        "endChar": 76
      },
      "revId": "0a1a76b19af7aadb44554ac31555dbf33e185fb5",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3cd71ba5_df55424f",
        "filename": "benchmarks/bionic_benchmarks.cpp",
        "patchSetId": 4
      },
      "lineNbr": 171,
      "author": {
        "id": 1019050
      },
      "writtenOn": "2017-08-04T21:12:35Z",
      "side": 1,
      "message": "You use this a lot, is it worth adding a typedef for this?",
      "range": {
        "startLine": 171,
        "startChar": 43,
        "endLine": 171,
        "endChar": 72
      },
      "revId": "0a1a76b19af7aadb44554ac31555dbf33e185fb5",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7fa85f88_e38d44d9",
        "filename": "benchmarks/bionic_benchmarks.cpp",
        "patchSetId": 4
      },
      "lineNbr": 176,
      "author": {
        "id": 1019050
      },
      "writtenOn": "2017-08-04T21:12:35Z",
      "side": 1,
      "message": "Don\u0027t bother with the else, it just adds an extra indentation.",
      "range": {
        "startLine": 176,
        "startChar": 3,
        "endLine": 176,
        "endChar": 10
      },
      "revId": "0a1a76b19af7aadb44554ac31555dbf33e185fb5",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9793ac4f_fdec6643",
        "filename": "benchmarks/bionic_benchmarks.cpp",
        "patchSetId": 4
      },
      "lineNbr": 200,
      "author": {
        "id": 1019050
      },
      "writtenOn": "2017-08-04T21:12:35Z",
      "side": 1,
      "message": "Not needed.",
      "range": {
        "startLine": 200,
        "startChar": 85,
        "endLine": 200,
        "endChar": 87
      },
      "revId": "0a1a76b19af7aadb44554ac31555dbf33e185fb5",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2b7b1938_cd243fdc",
        "filename": "benchmarks/bionic_benchmarks.cpp",
        "patchSetId": 4
      },
      "lineNbr": 201,
      "author": {
        "id": 1019050
      },
      "writtenOn": "2017-08-04T21:12:35Z",
      "side": 1,
      "message": "This should be aligned with primary_...",
      "range": {
        "startLine": 201,
        "startChar": 52,
        "endLine": 201,
        "endChar": 82
      },
      "revId": "0a1a76b19af7aadb44554ac31555dbf33e185fb5",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3660e7a6_e5c5879b",
        "filename": "benchmarks/bionic_benchmarks.cpp",
        "patchSetId": 4
      },
      "lineNbr": 211,
      "author": {
        "id": 1019050
      },
      "writtenOn": "2017-08-04T21:12:35Z",
      "side": 1,
      "message": "Can this be changed to:\n\nauto benchmark benchmark::RegisterBenchmark(...)-\u003eArgs(args);\n\nThen:\n\nif (iterations_to_use \u003e 0) {\n  benchmark-\u003eIterations(iterations_to_use);\n}",
      "range": {
        "startLine": 211,
        "startChar": 4,
        "endLine": 211,
        "endChar": 32
      },
      "revId": "0a1a76b19af7aadb44554ac31555dbf33e185fb5",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "29793c63_80a03680",
        "filename": "benchmarks/bionic_benchmarks.cpp",
        "patchSetId": 4
      },
      "lineNbr": 228,
      "author": {
        "id": 1019050
      },
      "writtenOn": "2017-08-04T21:12:35Z",
      "side": 1,
      "message": "size_t",
      "range": {
        "startLine": 228,
        "startChar": 4,
        "endLine": 228,
        "endChar": 7
      },
      "revId": "0a1a76b19af7aadb44554ac31555dbf33e185fb5",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7a97ac1b_cddc247b",
        "filename": "benchmarks/bionic_benchmarks.cpp",
        "patchSetId": 4
      },
      "lineNbr": 262,
      "author": {
        "id": 1019050
      },
      "writtenOn": "2017-08-04T21:12:35Z",
      "side": 1,
      "message": "std::vector\u003cstd::vector\u003cint\u003e\u003e* run_args\n\nWe adhere the * to the type, not the variable name.",
      "range": {
        "startLine": 262,
        "startChar": 31,
        "endLine": 262,
        "endChar": 33
      },
      "revId": "0a1a76b19af7aadb44554ac31555dbf33e185fb5",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "36b7e1ad_19233282",
        "filename": "benchmarks/bionic_benchmarks.cpp",
        "patchSetId": 4
      },
      "lineNbr": 264,
      "author": {
        "id": 1019050
      },
      "writtenOn": "2017-08-04T21:12:35Z",
      "side": 1,
      "message": "It doesn\u0027t seem like this would be possible, unless operator! is overloaded in some weird way.",
      "range": {
        "startLine": 264,
        "startChar": 4,
        "endLine": 264,
        "endChar": 12
      },
      "revId": "0a1a76b19af7aadb44554ac31555dbf33e185fb5",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "aef31f6f_b6717a2e",
        "filename": "benchmarks/bionic_benchmarks.cpp",
        "patchSetId": 4
      },
      "lineNbr": 273,
      "author": {
        "id": 1019050
      },
      "writtenOn": "2017-08-04T21:12:35Z",
      "side": 1,
      "message": "Is fn_name down below",
      "range": {
        "startLine": 273,
        "startChar": 4,
        "endLine": 273,
        "endChar": 15
      },
      "revId": "0a1a76b19af7aadb44554ac31555dbf33e185fb5",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c03cf60b_71be26e6",
        "filename": "benchmarks/bionic_benchmarks.cpp",
        "patchSetId": 4
      },
      "lineNbr": 279,
      "author": {
        "id": 1019050
      },
      "writtenOn": "2017-08-04T21:12:35Z",
      "side": 1,
      "message": "\"\" should work.",
      "range": {
        "startLine": 279,
        "startChar": 91,
        "endLine": 279,
        "endChar": 104
      },
      "revId": "0a1a76b19af7aadb44554ac31555dbf33e185fb5",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3585b14b_c252d197",
        "filename": "benchmarks/bionic_benchmarks.cpp",
        "patchSetId": 4
      },
      "lineNbr": 330,
      "author": {
        "id": 1019050
      },
      "writtenOn": "2017-08-04T21:12:35Z",
      "side": 1,
      "message": "All of this setup should be in a separate function. It makes it easier to see what the code is doing, and it provide a place where other data like this would go.",
      "range": {
        "startLine": 310,
        "startChar": 0,
        "endLine": 330,
        "endChar": 79
      },
      "revId": "0a1a76b19af7aadb44554ac31555dbf33e185fb5",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c06fa816_014c6ee0",
        "filename": "benchmarks/bionic_benchmarks.cpp",
        "patchSetId": 4
      },
      "lineNbr": 345,
      "author": {
        "id": 1019050
      },
      "writtenOn": "2017-08-04T21:12:35Z",
      "side": 1,
      "message": "Should there be an option for this?",
      "range": {
        "startLine": 345,
        "startChar": 2,
        "endLine": 345,
        "endChar": 42
      },
      "revId": "0a1a76b19af7aadb44554ac31555dbf33e185fb5",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1ad716fd_327e167b",
        "filename": "benchmarks/bionic_benchmarks.cpp",
        "patchSetId": 4
      },
      "lineNbr": 346,
      "author": {
        "id": 1019050
      },
      "writtenOn": "2017-08-04T21:12:35Z",
      "side": 1,
      "message": "Too much indentation.",
      "range": {
        "startLine": 346,
        "startChar": 2,
        "endLine": 346,
        "endChar": 6
      },
      "revId": "0a1a76b19af7aadb44554ac31555dbf33e185fb5",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "36a9c9f6_1a2d51de",
        "filename": "benchmarks/tests/interface_test.cpp",
        "patchSetId": 4
      },
      "lineNbr": 437,
      "author": {
        "id": 1019050
      },
      "writtenOn": "2017-08-04T21:12:35Z",
      "side": 1,
      "message": "Change tabs to spaces.",
      "range": {
        "startLine": 437,
        "startChar": 0,
        "endLine": 437,
        "endChar": 2
      },
      "revId": "0a1a76b19af7aadb44554ac31555dbf33e185fb5",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "185035ab_93854e66",
        "filename": "benchmarks/util.h",
        "patchSetId": 4
      },
      "lineNbr": 73,
      "author": {
        "id": 1019050
      },
      "writtenOn": "2017-08-04T21:12:35Z",
      "side": 1,
      "message": "This should be in the code somewhere, best in the same place that you define the other macros.",
      "range": {
        "startLine": 43,
        "startChar": 0,
        "endLine": 73,
        "endChar": 2
      },
      "revId": "0a1a76b19af7aadb44554ac31555dbf33e185fb5",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "01d88b8e_32529e9d",
        "filename": "benchmarks/util.h",
        "patchSetId": 4
      },
      "lineNbr": 75,
      "author": {
        "id": 1019050
      },
      "writtenOn": "2017-08-04T21:12:35Z",
      "side": 1,
      "message": "You don\u0027t need this, just struct bench_opts_t, you can still refer to it as bench_opts_t.",
      "range": {
        "startLine": 75,
        "startChar": 0,
        "endLine": 75,
        "endChar": 15
      },
      "revId": "0a1a76b19af7aadb44554ac31555dbf33e185fb5",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    }
  ]
}