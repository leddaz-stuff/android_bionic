{
  "comments": [
    {
      "key": {
        "uuid": "UaYJUgDI",
        "filename": "linker/linker.cpp",
        "patchSetId": 1
      },
      "lineNbr": 805,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2013-05-09T22:10:27Z",
      "side": 1,
      "message": "this can\u0027t be null unless the list has become corrupt --- we loaded at the DT_NEEDEDs already, and this just pulls them back off the list. any error here is _our_ internal error, not something we should try to report via dlerror(3).",
      "revId": "48b3ab06879e3082d305000d638368ce0a0acb52",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "UaQJAcGU",
        "filename": "linker/linker.cpp",
        "patchSetId": 1
      },
      "lineNbr": 1193,
      "author": {
        "id": 1003723
      },
      "writtenOn": "2013-05-09T22:23:47Z",
      "side": 1,
      "message": "rather than making a value judgement about what should be in an .so, i think we should just say \"and should be ignored in shared libraries\"\n\nhoweer, we don\u0027t seem to ignore them at this level, this is done because it is only called in the correct context (for EXE only), right? (I looked at the code, just looking for confirmation i\u0027m reading it right)",
      "revId": "48b3ab06879e3082d305000d638368ce0a0acb52",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "UaQIXkGI",
        "filename": "linker/linker.cpp",
        "patchSetId": 1
      },
      "lineNbr": 1193,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2013-05-09T22:29:40Z",
      "side": 1,
      "message": "correct. i did wonder about changing it so we call it everywhere and it refuses to do anything in the shared library case, but that looked more confusing to me.\n\n(though maybe we\u0027re not calling the preinit constructors in exactly the right place, and if we were it would make more sense? we can worry about that another day.)\n\ni agree with the comment change. will do.",
      "parentUuid": "UaQJAcGU",
      "revId": "48b3ab06879e3082d305000d638368ce0a0acb52",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "UaaI4pPk",
        "filename": "linker/linker.cpp",
        "patchSetId": 1
      },
      "lineNbr": 1217,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2013-05-09T22:10:27Z",
      "side": 1,
      "message": "the removal of the \"return;\" here is the active ingredient in fixing this bug. everything else is cleanup.",
      "revId": "48b3ab06879e3082d305000d638368ce0a0acb52",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "UacIcuIo",
        "filename": "linker/linker.cpp",
        "patchSetId": 1
      },
      "lineNbr": 1217,
      "author": {
        "id": 1003723
      },
      "writtenOn": "2013-05-09T22:23:47Z",
      "side": 1,
      "message": "right, so I see how we got in trouble. we never ran them here in the .so case, this was just code to warn about it, but we made it an error which was overkill.",
      "parentUuid": "UaaI4pPk",
      "revId": "48b3ab06879e3082d305000d638368ce0a0acb52",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "UaS3rpTA",
        "filename": "linker/linker.cpp",
        "patchSetId": 1
      },
      "lineNbr": 1217,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2013-05-09T22:29:40Z",
      "side": 1,
      "message": "exactly. misled by the (ineffectual) DL_ERR in the original code.",
      "parentUuid": "UacIcuIo",
      "revId": "48b3ab06879e3082d305000d638368ce0a0acb52",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "UacI1mAA",
        "filename": "linker/linker.cpp",
        "patchSetId": 1
      },
      "lineNbr": 1225,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2013-05-09T22:10:27Z",
      "side": 1,
      "message": "here too, find_loaded_library must return non-NULL, or we\u0027d have failed earlier and reported the failure to find a DT_NEEDED library to the caller.",
      "revId": "48b3ab06879e3082d305000d638368ce0a0acb52",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}