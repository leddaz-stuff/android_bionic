{
  "comments": [
    {
      "key": {
        "uuid": "18ea8220_89e521cd",
        "filename": "libc/bionic/__fread_chk.cpp",
        "patchSetId": 1
      },
      "lineNbr": 34,
      "author": {
        "id": 1056364
      },
      "writtenOn": "2015-07-20T18:07:35Z",
      "side": 1,
      "message": "not need.",
      "range": {
        "startLine": 34,
        "startChar": 0,
        "endLine": 34,
        "endChar": 10
      },
      "revId": "2db7fb877e2d1d1b39076bb88ddd2b6bca7e6439",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f8568eec_cf053d1c",
        "filename": "libc/bionic/__fread_chk.cpp",
        "patchSetId": 1
      },
      "lineNbr": 34,
      "author": {
        "id": 1069238
      },
      "writtenOn": "2015-07-20T19:46:34Z",
      "side": 1,
      "message": "It\u0027s redundant due to the prototype being wrapped in `extern \"C\" { }` but it seems to be the current code style in Bionic. I have it here because I started from another _chk file and they all do it this way.\n\nI don\u0027t mind doing it either way but I\u0027d rather be consistent and let someone else remove it across all the files if it\u0027s not wanted.",
      "parentUuid": "18ea8220_89e521cd",
      "range": {
        "startLine": 34,
        "startChar": 0,
        "endLine": 34,
        "endChar": 10
      },
      "revId": "2db7fb877e2d1d1b39076bb88ddd2b6bca7e6439",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "edc5ee24_54da8462",
        "filename": "libc/bionic/__fread_chk.cpp",
        "patchSetId": 1
      },
      "lineNbr": 34,
      "author": {
        "id": 1056364
      },
      "writtenOn": "2015-07-22T03:57:19Z",
      "side": 1,
      "message": "well, I didn\u0027t realize previous code doesn\u0027t make a convention for this. You can keep this, although personally I prefer letting header file only worry about this.",
      "parentUuid": "f8568eec_cf053d1c",
      "range": {
        "startLine": 34,
        "startChar": 0,
        "endLine": 34,
        "endChar": 10
      },
      "revId": "2db7fb877e2d1d1b39076bb88ddd2b6bca7e6439",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d81c6a21_3feb6ba2",
        "filename": "libc/bionic/__fwrite_chk.cpp",
        "patchSetId": 1
      },
      "lineNbr": 34,
      "author": {
        "id": 1056364
      },
      "writtenOn": "2015-07-20T18:07:35Z",
      "side": 1,
      "message": "not need.",
      "range": {
        "startLine": 34,
        "startChar": 0,
        "endLine": 34,
        "endChar": 10
      },
      "revId": "2db7fb877e2d1d1b39076bb88ddd2b6bca7e6439",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "cd7bcaab_7ece655c",
        "filename": "libc/include/stdio.h",
        "patchSetId": 1
      },
      "lineNbr": 457,
      "author": {
        "id": 1056364
      },
      "writtenOn": "2015-07-22T03:57:19Z",
      "side": 1,
      "message": "You can test this in compilation time as well by adding test in \nfortify_compilation_test.cpp.",
      "range": {
        "startLine": 453,
        "startChar": 8,
        "endLine": 457,
        "endChar": 36
      },
      "revId": "2db7fb877e2d1d1b39076bb88ddd2b6bca7e6439",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ad7a16a8_5d57ef30",
        "filename": "libc/include/stdio.h",
        "patchSetId": 1
      },
      "lineNbr": 483,
      "author": {
        "id": 1056364
      },
      "writtenOn": "2015-07-22T03:57:19Z",
      "side": 1,
      "message": "same as above.",
      "range": {
        "startLine": 479,
        "startChar": 8,
        "endLine": 483,
        "endChar": 37
      },
      "revId": "2db7fb877e2d1d1b39076bb88ddd2b6bca7e6439",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "18ea8220_e9894d2e",
        "filename": "libc/include/sys/cdefs.h",
        "patchSetId": 1
      },
      "lineNbr": 586,
      "author": {
        "id": 1056364
      },
      "writtenOn": "2015-07-20T18:07:35Z",
      "side": 1,
      "message": "why not using __builtin_umull_overflow() only? you implies the types are size_t, which I think is the same as unsigned long.",
      "range": {
        "startLine": 582,
        "startChar": 0,
        "endLine": 586,
        "endChar": 6
      },
      "revId": "2db7fb877e2d1d1b39076bb88ddd2b6bca7e6439",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d8f38a19_4757844f",
        "filename": "libc/include/sys/cdefs.h",
        "patchSetId": 1
      },
      "lineNbr": 586,
      "author": {
        "id": 1069238
      },
      "writtenOn": "2015-07-20T19:46:34Z",
      "side": 1,
      "message": "Ah, right. I originally wrote this snippet for a project where I needed portability to Windows (always 32-bit long).",
      "parentUuid": "18ea8220_e9894d2e",
      "range": {
        "startLine": 582,
        "startChar": 0,
        "endLine": 586,
        "endChar": 6
      },
      "revId": "2db7fb877e2d1d1b39076bb88ddd2b6bca7e6439",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6dd2dee8_75a4628d",
        "filename": "libc/include/sys/cdefs.h",
        "patchSetId": 1
      },
      "lineNbr": 586,
      "author": {
        "id": 1056364
      },
      "writtenOn": "2015-07-22T03:57:19Z",
      "side": 1,
      "message": "There is no plan to port bionic to windows, and we can take advantage of this to easy our task.",
      "parentUuid": "d8f38a19_4757844f",
      "range": {
        "startLine": 582,
        "startChar": 0,
        "endLine": 586,
        "endChar": 6
      },
      "revId": "2db7fb877e2d1d1b39076bb88ddd2b6bca7e6439",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "edc5ee24_8bce8259",
        "filename": "libc/include/sys/cdefs.h",
        "patchSetId": 1
      },
      "lineNbr": 586,
      "author": {
        "id": 1069238
      },
      "writtenOn": "2015-07-23T09:54:17Z",
      "side": 1,
      "message": "size_t is actually unsigned int* on 32-bit:\n\nerror: invalid conversion from \u0027size_t* {aka unsigned int*}\u0027 to \u0027long unsigned int*\u0027 [-fpermissive]",
      "parentUuid": "6dd2dee8_75a4628d",
      "range": {
        "startLine": 582,
        "startChar": 0,
        "endLine": 586,
        "endChar": 6
      },
      "revId": "2db7fb877e2d1d1b39076bb88ddd2b6bca7e6439",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8d7552bb_5cbe0c20",
        "filename": "libc/include/sys/cdefs.h",
        "patchSetId": 1
      },
      "lineNbr": 586,
      "author": {
        "id": 1069238
      },
      "writtenOn": "2015-07-23T09:58:17Z",
      "side": 1,
      "message": "I could just put this in a different header.",
      "parentUuid": "edc5ee24_8bce8259",
      "range": {
        "startLine": 582,
        "startChar": 0,
        "endLine": 586,
        "endChar": 6
      },
      "revId": "2db7fb877e2d1d1b39076bb88ddd2b6bca7e6439",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d8f38a19_e737b00a",
        "filename": "libc/include/sys/cdefs.h",
        "patchSetId": 1
      },
      "lineNbr": 588,
      "author": {
        "id": 1056364
      },
      "writtenOn": "2015-07-20T18:07:35Z",
      "side": 1,
      "message": "use unsigned long instead of size_t below? or if you insists on using size_t, move this line to the top of the file?",
      "range": {
        "startLine": 588,
        "startChar": 0,
        "endLine": 588,
        "endChar": 19
      },
      "revId": "2db7fb877e2d1d1b39076bb88ddd2b6bca7e6439",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "786d3eb3_5333a4fd",
        "filename": "libc/include/sys/cdefs.h",
        "patchSetId": 1
      },
      "lineNbr": 588,
      "author": {
        "id": 1069238
      },
      "writtenOn": "2015-07-20T19:46:34Z",
      "side": 1,
      "message": "I think it\u0027s clearer to leave it as size_t.\n\nI just noticed that it\u0027s also used above in __BIONIC_FORTIFY_UNKNOWN_SIZE so it should already be included for that #define to work with just this header.",
      "parentUuid": "d8f38a19_e737b00a",
      "range": {
        "startLine": 588,
        "startChar": 0,
        "endLine": 588,
        "endChar": 19
      },
      "revId": "2db7fb877e2d1d1b39076bb88ddd2b6bca7e6439",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6dd2dee8_35aeda6d",
        "filename": "libc/include/sys/cdefs.h",
        "patchSetId": 1
      },
      "lineNbr": 588,
      "author": {
        "id": 1056364
      },
      "writtenOn": "2015-07-22T03:57:19Z",
      "side": 1,
      "message": "what I concern is, if we include \u003cstddef.h\u003e in sys/cdefs.h, which is included by almost every other header files, then everyone can use size_t for free. This violates our goal to make header files as independent as possible. And if we introduce \u003cstddef.h\u003e in sys/cdefs.h, there will be no way to remove it even if we no longer use it in sys/cdefs.h itself, because there will be many source files depending on having size_t from sys/cdefs.h. So I\u0027d rather use unsigned long here and remove stddef.h.\nFor size_t used above, I think it is never used. the gcc version we are currently using is 4.9.",
      "parentUuid": "786d3eb3_5333a4fd",
      "range": {
        "startLine": 588,
        "startChar": 0,
        "endLine": 588,
        "endChar": 19
      },
      "revId": "2db7fb877e2d1d1b39076bb88ddd2b6bca7e6439",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f805aec3_40748446",
        "filename": "tests/fortify_test.cpp",
        "patchSetId": 1
      },
      "lineNbr": 651,
      "author": {
        "id": 1056364
      },
      "writtenOn": "2015-07-20T18:07:35Z",
      "side": 1,
      "message": "can you build for bionic unit tests without adding __fread_chk and __fwrite_chk to libc.map?",
      "range": {
        "startLine": 650,
        "startChar": 0,
        "endLine": 651,
        "endChar": 14
      },
      "revId": "2db7fb877e2d1d1b39076bb88ddd2b6bca7e6439",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "78429e31_2bbf99aa",
        "filename": "tests/fortify_test.cpp",
        "patchSetId": 1
      },
      "lineNbr": 651,
      "author": {
        "id": 1069238
      },
      "writtenOn": "2015-07-20T19:46:34Z",
      "side": 1,
      "message": "Not sure what happened here. I had to add that while porting from CyanogenMod 12.1 (based on stable release of L) to AOSP master but it didn\u0027t end up committed.",
      "parentUuid": "f805aec3_40748446",
      "range": {
        "startLine": 650,
        "startChar": 0,
        "endLine": 651,
        "endChar": 14
      },
      "revId": "2db7fb877e2d1d1b39076bb88ddd2b6bca7e6439",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}