{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "f144d7b9_74640a03",
        "filename": "libc/BUILD.bazel",
        "patchSetId": 1
      },
      "lineNbr": 328,
      "author": {
        "id": 1066075
      },
      "writtenOn": "2021-02-03T15:20:07Z",
      "side": 1,
      "message": "Does py_binary work in the Android source tree?",
      "range": {
        "startLine": 328,
        "startChar": 0,
        "endLine": 328,
        "endChar": 9
      },
      "revId": "9da077a7534ec11058969bd4409eac1e2dc9dbc6",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "56d4088d_0e66977b",
        "filename": "libc/BUILD.bazel",
        "patchSetId": 1
      },
      "lineNbr": 328,
      "author": {
        "id": 1514900
      },
      "writtenOn": "2021-02-03T15:24:42Z",
      "side": 1,
      "message": "Yes.\n\nhttps://paste.googleplex.com/6142137646186496?raw",
      "parentUuid": "f144d7b9_74640a03",
      "range": {
        "startLine": 328,
        "startChar": 0,
        "endLine": 328,
        "endChar": 9
      },
      "revId": "9da077a7534ec11058969bd4409eac1e2dc9dbc6",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "68d52edf_8e390d2c",
        "filename": "libc/BUILD.bazel",
        "patchSetId": 1
      },
      "lineNbr": 328,
      "author": {
        "id": 1066075
      },
      "writtenOn": "2021-02-03T15:41:06Z",
      "side": 1,
      "message": "Wow. Looking at the Blueprint file, just calls the .py file:\n\nhttps://cs.android.com/android/platform/superproject/+/master:build/make/tools/fs_config/Android.bp;l\u003d44;drc\u003d8b2e7c9c51448d1ff47f19ca6a6892775aea660b\n\nDo we need the whole py_binary machinery for this? It\u0027s yet another layer of complexity we\u0027d pull in as a dependency...",
      "parentUuid": "56d4088d_0e66977b",
      "range": {
        "startLine": 328,
        "startChar": 0,
        "endLine": 328,
        "endChar": 9
      },
      "revId": "9da077a7534ec11058969bd4409eac1e2dc9dbc6",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "547da0c8_e4fc5ad1",
        "filename": "libc/BUILD.bazel",
        "patchSetId": 1
      },
      "lineNbr": 328,
      "author": {
        "id": 1514900
      },
      "writtenOn": "2021-02-03T16:19:19Z",
      "side": 1,
      "message": "We don\u0027t, but eventually we\u0027ll need it, and convert modules to it ( https://source.corp.google.com/search?q\u003df:Android.bp%20%22python_binary_host%22). I don\u0027t see why we shouldn\u0027t start using it now.",
      "parentUuid": "68d52edf_8e390d2c",
      "range": {
        "startLine": 328,
        "startChar": 0,
        "endLine": 328,
        "endChar": 9
      },
      "revId": "9da077a7534ec11058969bd4409eac1e2dc9dbc6",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c52f5ade_a8009234",
        "filename": "libc/BUILD.bazel",
        "patchSetId": 1
      },
      "lineNbr": 328,
      "author": {
        "id": 1066075
      },
      "writtenOn": "2021-02-04T07:45:23Z",
      "side": 1,
      "message": "You have two choices then:\n\n1. Investigate deeply what is the difference between Bazel\u0027s Python rules and those of Soong\n2. Just put the lines in and hope it works\n\nI thought neither of these was very appealing, but if you\u0027re fine with them, sure.",
      "parentUuid": "547da0c8_e4fc5ad1",
      "range": {
        "startLine": 328,
        "startChar": 0,
        "endLine": 328,
        "endChar": 9
      },
      "revId": "9da077a7534ec11058969bd4409eac1e2dc9dbc6",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8da7da72_cf637c03",
        "filename": "libc/libc_flags.bzl",
        "patchSetId": 1
      },
      "lineNbr": 2,
      "author": {
        "id": 1066075
      },
      "writtenOn": "2021-02-03T15:20:07Z",
      "side": 1,
      "message": "FWIW, the eventual mapping for cc_defaults could be modeled after this (I do realize that this does not come from a cc_defaults rule)",
      "range": {
        "startLine": 2,
        "startChar": 0,
        "endLine": 2,
        "endChar": 11
      },
      "revId": "9da077a7534ec11058969bd4409eac1e2dc9dbc6",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "aa25e5ba_8fb7998c",
        "filename": "libc/libc_flags.bzl",
        "patchSetId": 1
      },
      "lineNbr": 2,
      "author": {
        "id": 1514900
      },
      "writtenOn": "2021-02-03T15:24:42Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "8da7da72_cf637c03",
      "range": {
        "startLine": 2,
        "startChar": 0,
        "endLine": 2,
        "endChar": 11
      },
      "revId": "9da077a7534ec11058969bd4409eac1e2dc9dbc6",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d3b1890b_c0da2e2a",
        "filename": "libc/system_properties/BUILD.bazel",
        "patchSetId": 1
      },
      "lineNbr": 15,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2021-02-03T16:05:18Z",
      "side": 1,
      "message": "please assume that anywhere the source files aren\u0027t sorted is a bug, not a feature :-)",
      "revId": "9da077a7534ec11058969bd4409eac1e2dc9dbc6",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e651f325_43661b82",
        "filename": "libc/system_properties/BUILD.bazel",
        "patchSetId": 1
      },
      "lineNbr": 15,
      "author": {
        "id": 1514900
      },
      "writtenOn": "2021-02-03T16:19:19Z",
      "side": 1,
      "message": "Ack, sorted.",
      "parentUuid": "d3b1890b_c0da2e2a",
      "revId": "9da077a7534ec11058969bd4409eac1e2dc9dbc6",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "0ffd188a_ede25b9f",
        "filename": "libc/system_properties/BUILD.bazel",
        "patchSetId": 1
      },
      "lineNbr": 15,
      "author": {
        "id": 1605027
      },
      "writtenOn": "2021-02-03T20:21:17Z",
      "side": 1,
      "message": "For context, the original prototype\u0027s goal was in attempt to bit-for-bit match Soong-built bionic with Bazel-built bionic.\nWhile it\u0027d be nice to achieve this again, it may be less worth our time, especially if it depends on little things like sorting. We\u0027re better off devising more intelligent diff tools if we care to ensure the output artifacts are \"identical\" :)",
      "parentUuid": "e651f325_43661b82",
      "revId": "9da077a7534ec11058969bd4409eac1e2dc9dbc6",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "45264ddd_5a0d209e",
        "filename": "libc/system_properties/BUILD.bazel",
        "patchSetId": 1
      },
      "lineNbr": 15,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2021-02-03T22:47:21Z",
      "side": 1,
      "message": "ah, makes sense. i\u0027m happy to just have a clean up later then. (or you could sort the .bp now to make this go away?)\n\ni thought +ccross already went through this with soong (and minimizing OTA update sizes)? i thought we already sorted source files inside the build system to avoid this? or was that only for globbing? is there a reason not to do it for all source if that isn\u0027t already the case?",
      "parentUuid": "0ffd188a_ede25b9f",
      "revId": "9da077a7534ec11058969bd4409eac1e2dc9dbc6",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9272c9ed_4116d622",
        "filename": "libc/system_properties/BUILD.bazel",
        "patchSetId": 1
      },
      "lineNbr": 15,
      "author": {
        "id": 1002751
      },
      "writtenOn": "2021-02-04T00:22:23Z",
      "side": 1,
      "message": "Soong doesn\u0027t sort source files because the ordering can be meaningful (although that\u0027s generally a bad idea).  It keeps them in the same order as found in the Android.bp file.  It only sorts globs to prevent filesystem order from affecting build output.\n\nbpfmt -s will attempt to sort lists within blocks separated by blank lines.",
      "parentUuid": "45264ddd_5a0d209e",
      "revId": "9da077a7534ec11058969bd4409eac1e2dc9dbc6",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}