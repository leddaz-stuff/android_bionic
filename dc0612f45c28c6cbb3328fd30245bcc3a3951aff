{
  "comments": [
    {
      "key": {
        "uuid": "5dfc28a5_dc8b9b8b",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 10,
      "author": {
        "id": 1373864
      },
      "writtenOn": "2020-06-18T22:05:53Z",
      "side": 1,
      "message": "Couldn\u0027t find any unit tests for this logic, but if there are I\u0027m happy to update them too.",
      "range": {
        "startLine": 10,
        "startChar": 0,
        "endLine": 10,
        "endChar": 4
      },
      "revId": "dc0612f45c28c6cbb3328fd30245bcc3a3951aff",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "315ccf0a_b4734819",
        "filename": "libc/tzcode/bionic.cpp",
        "patchSetId": 2
      },
      "lineNbr": 219,
      "author": {
        "id": 1038039
      },
      "writtenOn": "2020-06-19T09:23:40Z",
      "side": 1,
      "message": "More comments around tzdata_found might help. I found this difficult to understand, though I did eventually see what was going on.\n\nAlternative suggestion:\n\nAIUI, -2 means \"file not found\" (which is expected / fine, except if you get to the very bottom without finding any files) and -1 means \"file was found, but the zone ID wasn\u0027t found OR the file is corrupt\". Zone ID not found is ok / normal, while \"file is corrupt\" is up to us how we treat.\n\nI think the logic would be better if it was generally:\n\nif (fd \u003e\u003d -1) return fd;\n\nAt the bottom, it\u0027s always an error case that can be logged.\n\ni.e. if we find the tzdata file, then it\u0027s expected to be complete so it is therefore authoritative about what zones exist. There\u0027s no real requirement to try other copies of the data to see if we can find the zone there instead - this file is always \"complete\".\n\nI think it may make sense to continue to try fallback if we can detect the \"file is corrupt\" cases. That would need some of the existing -1 cases to become -2 (or a different \"keep going\" value (-3?)) in __bionic_open_tzdata_path.\n\nIn fact, I think the only case that would remain returning -1 would be the one with \"specific_zone_offset \u003d\u003d -1\". All the others look like file access errors.",
      "range": {
        "startLine": 219,
        "startChar": 16,
        "endLine": 219,
        "endChar": 28
      },
      "revId": "dc0612f45c28c6cbb3328fd30245bcc3a3951aff",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "95f7e1fc_fc805bb8",
        "filename": "libc/tzcode/bionic.cpp",
        "patchSetId": 2
      },
      "lineNbr": 219,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2020-06-19T20:50:12Z",
      "side": 1,
      "message": "fwiw, i _still_ haven\u0027t understood why this isn\u0027t wrong!",
      "parentUuid": "315ccf0a_b4734819",
      "range": {
        "startLine": 219,
        "startChar": 16,
        "endLine": 219,
        "endChar": 28
      },
      "revId": "dc0612f45c28c6cbb3328fd30245bcc3a3951aff",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9063a1fa_919c024d",
        "filename": "libc/tzcode/bionic.cpp",
        "patchSetId": 2
      },
      "lineNbr": 219,
      "author": {
        "id": 1373864
      },
      "writtenOn": "2020-06-22T12:59:10Z",
      "side": 1,
      "message": "\u003e I think the logic would be better if it was generally:\n\u003e \n\u003e if (fd \u003e\u003d -1) return fd;\n\nPerhaps, but that changes the semantics much more and will probably need more thought on the compat aspects. To me it looks intentional that it continues to look through all tzdata\u0027s until it finds one with the given olson_id.\n\nThis CL doesn\u0027t change behaviour at all when /system/usr/share/zoneinfo/tzdata exists, which I presume is always the case on real devices. I can of course just fix our chroot environment to look more like a real device instead, but this seemed like a better (and still safe) thing to do.\n\nAs for making the code easier to understand without changing the logic, I\u0027ve added a comment.\n\n\u003e fwiw, i _still_ haven\u0027t understood why this isn\u0027t wrong!\n\nSorry, I don\u0027t understand what you\u0027re referring to.",
      "parentUuid": "315ccf0a_b4734819",
      "range": {
        "startLine": 219,
        "startChar": 16,
        "endLine": 219,
        "endChar": 28
      },
      "revId": "dc0612f45c28c6cbb3328fd30245bcc3a3951aff",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b10c51d8_e487743a",
        "filename": "libc/tzcode/bionic.cpp",
        "patchSetId": 2
      },
      "lineNbr": 219,
      "author": {
        "id": 1038039
      },
      "writtenOn": "2020-06-22T14:08:06Z",
      "side": 1,
      "message": "\u003e Perhaps, but that changes the semantics much more and will probably need more thought on the \n\u003e compat aspects. \n\nI\u0027ve tweaked this code / added all of the fallbacks and many of the comments over the years so unless there\u0027s an objection from enh@ I\u0027d like to avoid the continued fallback if the zone ID doesn\u0027t exist in an extant file, and avoid the tzdata_found variable as it adds more things to think about (and further cements the impression that the existing behavior is \"intentional\").\n\nIMO, there\u0027s no point in keeping unnecessary behavior working. Now\u0027s the best time in the dev cycle to change things like this because it gives us plenty of soak.\n\nIMO, the logic should always have been \"if the file doesn\u0027t exist then fallback, otherwise use the one we\u0027ve found for everything\". Yes, it\u0027s possible we might find cases where a file exists but is corrupt or inaccessible, but they\u0027re not ones that we need to support (or if they are, we learn something, should probably be logging, and the code comments can be updated).\n\n\u003e To me it looks intentional that it continues to look through all tzdata\u0027s until it finds one \n\u003e with the given olson_id.\n\nI think much of the current structure comes from me and speaking for myself: No, it wasn\u0027t intentional. You can go all the way back to where I added the first fallback if you want to see how it has evolved:\n\nhttps://r.android.com/137162\n\n[It looks like the relevant bug is actually http://b/19941636]\n\nI can tell you that when I made that first change I didn\u0027t really understand / consider the \"zone ID not found case\" at all or why it might be different from \"file not found\" because I didn\u0027t know all of the things I know now (and time zone \"experts\" were thin on the ground).\n\nBTW - the host behavior doesn\u0027t _have_ to mirror the on-device behavior exactly, but I\u0027ve tried to keep it similar for rpl@, who was trying to do his host environment work. We have hackery in the host build in .mk files to pretend we\u0027ve got an APEX which ideally would be removed and replaced with a proper host apex environment.\n\n\u003e This CL doesn\u0027t change behaviour at all when /system/usr/share/zoneinfo/tzdata exists, which \n\u003e I presume is always the case on real devices.\n\nJust FYI - The \"normal\" behavior is that \"/apex/com.android.tzdata/etc/tz/tzdata\" exists and should be used for everything. \"/apex/com.android.tzdata/etc/tz/tzdata\" is no longer considered optional in CTS since R, IIRC.\n\n\"/system/usr/share/zoneinfo/tzdata\" is only expected to be used in cases where /apex isn\u0027t available. e.g. /apex hasn\u0027t been mounted yet (or won\u0027t be, perhaps for libc in recovery or other unusual cases). \n\n\"/system/usr/share/zoneinfo/tzdata\" has also been kept in /system for binaries that have statically linked old copies of libc from the NDK, or apps that have hardcoded that path for some other reason. It\u0027s inherently not updatable and would ideally be removed but there\u0027s various wacky bionic environments to deal with and no [strong reason for | benefit to] removing the file.\n\n\"/data/misc/zoneinfo/current/tzdata\" *may* be going away in the next major release but has been kept because not all devices / form factors have a mainline update story yet (so keeping APK updates was desirable). So, TBD.",
      "parentUuid": "9063a1fa_919c024d",
      "range": {
        "startLine": 219,
        "startChar": 16,
        "endLine": 219,
        "endChar": 28
      },
      "revId": "dc0612f45c28c6cbb3328fd30245bcc3a3951aff",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "75ed976f_13572914",
        "filename": "libc/tzcode/bionic.cpp",
        "patchSetId": 2
      },
      "lineNbr": 219,
      "author": {
        "id": 1373864
      },
      "writtenOn": "2020-06-22T14:21:45Z",
      "side": 1,
      "message": "My case is when /apex/com.android.tzdata/etc/tz/tzdata exists and /system/usr/share/zoneinfo/tzdata doesn\u0027t, which as I said only happens (to my knowledge) in ARTs chroot test setup.\n\nMaybe it\u0027s wrong/unsupported to not have /system/usr/share/zoneinfo/tzdata - the whole chroot setup is after all unsupported by Android as a whole, and hence very brittle. I\u0027m perfectly fine to handle the problem on that side instead (https://r.android.com/1344561) and drop this CL.",
      "parentUuid": "b10c51d8_e487743a",
      "range": {
        "startLine": 219,
        "startChar": 16,
        "endLine": 219,
        "endChar": 28
      },
      "revId": "dc0612f45c28c6cbb3328fd30245bcc3a3951aff",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6e6c1284_dddb4528",
        "filename": "libc/tzcode/bionic.cpp",
        "patchSetId": 2
      },
      "lineNbr": 219,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2020-06-22T15:18:52Z",
      "side": 1,
      "message": "\u003e IMO, there\u0027s no point in keeping unnecessary behavior working. Now\u0027s the best time in the dev cycle to change things like this because it gives us plenty of soak.\n\nyeah, that makes more sense to me too. do you want to do that or shall i? (probably worth copy \u0026 pasting your essay into the bug too, since future archaeologists are more likely to find the bug than these review comments.)",
      "parentUuid": "75ed976f_13572914",
      "range": {
        "startLine": 219,
        "startChar": 16,
        "endLine": 219,
        "endChar": 28
      },
      "revId": "dc0612f45c28c6cbb3328fd30245bcc3a3951aff",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    }
  ]
}