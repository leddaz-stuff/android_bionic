{
  "comments": [
    {
      "key": {
        "uuid": "65665041_43a52ebe",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 8
      },
      "lineNbr": 0,
      "author": {
        "id": 1268141
      },
      "writtenOn": "2020-09-21T13:43:54Z",
      "side": 1,
      "message": "Sorry, I used the wrong browser tab to mark the comments done.\nPlease ignore the other me.",
      "revId": "1e29601b585f8055cbc2b3db148813fba9566e74",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "426005f7_3c875799",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 8
      },
      "lineNbr": 0,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2020-09-21T21:54:24Z",
      "side": 1,
      "message": "+danalbert since this looks like a legit NDK build break, but i\u0027m not sure i understand how these CLs cause it... (where the -D__ANDROID_API__ and -target mismatch is coming from.)\n```\nRunning: /buildbot/src/android/master-ndk/out/linux/android-ndk-r22-canary/toolchains/llvm/prebuilt/linux-x86_64/bin/clang -target armv7a-linux-androideabi16 --sysroot /buildbot/src/android/master-ndk/prebuilts/ndk/platform/sysroot -gcc-toolchain /buildbot/src/android/master-ndk/out/linux/android-ndk-r22-canary/toolchains/arm-linux-androideabi-4.9/prebuilt/linux-x86_64 -I /buildbot/src/android/master-ndk/bionic/libc/arch-common/bionic -D__ANDROID_API__\u003d17 -DPLATFORM_SDK_VERSION\u003d17 \u0027-DABI_NDK_VERSION\u003d\"r22-canary\"\u0027 \u0027-DABI_NDK_BUILD_NUMBER\u003d\"0\"\u0027 -O2 -fpic -Wl,-r -no-pie -nostdlib -Wa,--noexecstack -Wl,-z,noexecstack -o /buildbot/src/android/master-ndk/out/platforms/android-17/arch-arm/crtbegin_dynamic.o /buildbot/src/android/master-ndk/bionic/libc/arch-common/bionic/crtbegin.c /buildbot/src/android/master-ndk/ndk/sources/crt/crtbrand.S -mfpu\u003dvfpv3-d16In file included from \u003cbuilt-in\u003e:366:\n\u003ccommand line\u003e:1:9: warning: \u0027__ANDROID_API__\u0027 macro redefined [-Wmacro-redefined]\n#define __ANDROID_API__ 17\n        ^\n\u003cbuilt-in\u003e:360:9: note: previous definition is here\n#define __ANDROID_API__ 16\n        ^\n1 warning generated.\n```",
      "revId": "1e29601b585f8055cbc2b3db148813fba9566e74",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "05dcd042_a1850f60",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 8
      },
      "lineNbr": 0,
      "author": {
        "id": 1043845
      },
      "writtenOn": "2020-09-21T22:38:08Z",
      "side": 1,
      "message": "https://android-review.googlesource.com/c/platform/ndk/+/1433458\n\nThat\u0027s just a warning though. This is the real failure:\n\n/buildbot/src/android/master-ndk/bionic/libc/arch-common/bionic/crtend.S:32:10: fatal error: \u0027private/bionic_asm_arm64.h\u0027 file not found\n#include \u003cprivate/bionic_asm_arm64.h\u003e\n         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~\n1 error generated.\n\nhttps://android-review.googlesource.com/c/platform/bionic/+/1418557/2/libc/arch-common/bionic/crtend.S adds the include, but the NDK\u0027s build doesn\u0027t include that path. https://android-review.googlesource.com/c/platform/ndk/+/1433460 fixes that (added it to this topic).",
      "parentUuid": "426005f7_3c875799",
      "revId": "1e29601b585f8055cbc2b3db148813fba9566e74",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0e455be9_965b6255",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 8
      },
      "lineNbr": 0,
      "author": {
        "id": 1229339
      },
      "writtenOn": "2020-09-22T01:46:46Z",
      "side": 1,
      "message": "Otherwise, LGTM.\n\n",
      "revId": "1e29601b585f8055cbc2b3db148813fba9566e74",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bc9e5e20_df886fe6",
        "filename": "linker/linker_note_gnu_property.cpp",
        "patchSetId": 8
      },
      "lineNbr": 81,
      "author": {
        "id": 1229339
      },
      "writtenOn": "2020-09-22T01:46:46Z",
      "side": 1,
      "message": "I think this needs to account for sizeof(ElfW(NhdrGNUProperty)).\n\nProbably something like:\n\n    if (phdr[i].p_memsz - sizeof(ElfW(NhdrGNUProperty)) \u003c note_nhdr-\u003enhdr.n_descsz) {\n\nThen the error message needs some adjustment. Maybe something like this?\n\n    \\\"%s\\\" PT_GNU_PROPERTY segment p_memsz (%zu) is too small for note n_descz (%zu).",
      "revId": "1e29601b585f8055cbc2b3db148813fba9566e74",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f46de12c_5e427809",
        "filename": "linker/linker_note_gnu_property_test.cpp",
        "patchSetId": 8
      },
      "lineNbr": 76,
      "author": {
        "id": 1229339
      },
      "writtenOn": "2020-09-22T03:57:20Z",
      "side": 1,
      "message": "The new p_memsz check is flagging this segment as too small. I think we need to modify this test to use an appropriately-sized PT_GNU_PROPERTY segment.\n\n\nlinker-unit-tests.note_gnu_property#pt_gnu_property_no_prop:\n\n    bionic/linker/linker_note_gnu_property_test.cpp:300: Failure\n    Expected equality of these values:\n    error_buffer\n    Which is: \"\\\"test_so\\\" PT_GNU_PROPERTY segment reports smaller p_memsz (16) than n_descsz (24).\"\n    \"\"\n\nlinker-unit-tests.note_gnu_property#pt_gnu_property_ok_3:\n\n    bionic/linker/linker_note_gnu_property_test.cpp:338: Failure\n    Expected equality of these values:\n    error_buffer\n    Which is: \"\\\"test_so\\\" PT_GNU_PROPERTY segment reports smaller p_memsz (16) than n_descsz (64).\"\n    \"\"",
      "range": {
        "startLine": 76,
        "startChar": 10,
        "endLine": 76,
        "endChar": 50
      },
      "revId": "1e29601b585f8055cbc2b3db148813fba9566e74",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    }
  ]
}