{
  "comments": [
    {
      "key": {
        "uuid": "b0a094a2_18720e90",
        "filename": "libc/libc.map.txt",
        "patchSetId": 1
      },
      "lineNbr": 1565,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2017-07-26T22:16:13Z",
      "side": 1,
      "message": "hmm... have we fucked this for ndk-cruft? or does this work as long as the NDK map doesn\u0027t have a version, because we\u0027ll just take whatever, even as the version changes?\n\n(it seems odd that all the ndk-cruft functions aren\u0027t in the same block.)",
      "range": {
        "startLine": 1564,
        "startChar": 0,
        "endLine": 1565,
        "endChar": 29
      },
      "revId": "16be2360d3f30abd5ee4bd2de1dcafa3da5ebb5d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8af4969a_0e6de36f",
        "filename": "libc/libc.map.txt",
        "patchSetId": 1
      },
      "lineNbr": 1565,
      "author": {
        "id": 1043845
      },
      "writtenOn": "2017-07-26T22:18:24Z",
      "side": 1,
      "message": "Do I just need to duplicate the symbol? I don\u0027t think any apps could have linked against fdprintf@LIBC_PRIVATE though, so maybe I don\u0027t need to duplicate them?\n\nAlternatively, I can just unversion them and get away from the mess.",
      "parentUuid": "b0a094a2_18720e90",
      "range": {
        "startLine": 1564,
        "startChar": 0,
        "endLine": 1565,
        "endChar": 29
      },
      "revId": "16be2360d3f30abd5ee4bd2de1dcafa3da5ebb5d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2c17de41_5789a4b0",
        "filename": "libc/libc.map.txt",
        "patchSetId": 1
      },
      "lineNbr": 1565,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2017-07-26T22:25:46Z",
      "side": 1,
      "message": "not versioning them (like all the other gingerbread-era stuff) seems reasonable.\n\nwhen did we start calling the ndk-cruft functions @LIBC_PRIVATE?\n\nwhat happens if you don\u0027t move this out?\n\nand what does the NDK look like? does that have no version, and match the libc function no matter what version it has?",
      "parentUuid": "8af4969a_0e6de36f",
      "range": {
        "startLine": 1564,
        "startChar": 0,
        "endLine": 1565,
        "endChar": 29
      },
      "revId": "16be2360d3f30abd5ee4bd2de1dcafa3da5ebb5d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0f1adf19_b275f0bd",
        "filename": "libc/libc.map.txt",
        "patchSetId": 1
      },
      "lineNbr": 1565,
      "author": {
        "id": 1043845
      },
      "writtenOn": "2017-07-26T22:50:26Z",
      "side": 1,
      "message": "\u003e what happens if you don\u0027t move this out?\n\nThen these two functions can\u0027t be linked in the NDK, which means your only option pre-L is using fdopen -\u003e fprintf.\n\n\u003e and what does the NDK look like? does that have no version, and match the libc function no matter what version it has?\n\nRight now, the function is not present. With this, the symbol is present as fdprintf@LIBC_DEPRECATED and may not be used with targetSdkVersion 26.\n\nActually, I don\u0027t think it\u0027s safe to put this in this block. targetSdkVersion 26 but minSdkVersion (NDK API level) 14 is perfectly valid.\n\nI think this needs to go into LIBC with versioned\u003dP, but will wait for dimitry to confirm.",
      "parentUuid": "2c17de41_5789a4b0",
      "range": {
        "startLine": 1564,
        "startChar": 0,
        "endLine": 1565,
        "endChar": 29
      },
      "revId": "16be2360d3f30abd5ee4bd2de1dcafa3da5ebb5d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}