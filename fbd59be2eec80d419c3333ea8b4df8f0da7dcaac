{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "f613127c_695dfd08",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1950590
      },
      "writtenOn": "2022-07-11T09:13:31Z",
      "side": 1,
      "message": "Developed on: e1c42ccac8c56db870a352e234250445bdf7c6c5\nCherry-picked to: fd0a1ea466989975d424caf0814a33a7fe0a0d0f\nTested with CtsBionicTestCases\n15 failed tests:\nmath_h#lrint\tfail\tbionic/tests/math_test.cpp:(1017) Failure in test math_h.lrint\nmath_h#rint\tfail\tbionic/tests/math_test.cpp:(1052) Failure in test math_h.rint\nmath_h#nearbyint\tfail\tbionic/tests/math_test.cpp:(1079) Failure in test math_h.nearbyint\nmath_h_force_long_double#lrint\tfail\tbionic/tests/math_test.cpp:(1017) Failure in test \t\nmath_h_force_long_double#nearbyint\tfail\tbionic/tests/math_test.cpp:(1079) Failure in test \nmath_h_force_long_double#rint\tfail\tbionic/tests/math_test.cpp:(1052) Failure in test \nstack_unwinding#unwind_through_signal_frame\tfail\tbionic/tests/stack_unwinding_test.cpp:(111) Failure in test stack_unwinding.unwind_through_signal_frame\nstack_unwinding#unwind_through_signal_frame_SA_SIGINFO\tfail\tbionic/tests/stack_unwinding_test.cpp:(111) Failure in test stack_unwinding.unwind_through_signal_frame_SA_SIGINFO\nstdio_nofortify#snprintf_sscanf_inf_nan\tfail\tbionic/tests/stdio_test.cpp:(494) Failure in test stdio_nofortify.snprintf_sscanf_inf_nan\nstdio_nofortify#swprintf_swscanf_inf_nan\tfail\tbionic/tests/stdio_test.cpp:(494) Failure in test stdio_nofortify.swprintf_swscanf_inf_nan\nstdio#snprintf_sscanf_inf_nan\tfail\tbionic/tests/stdio_test.cpp:(494) Failure in test stdio.snprintf_sscanf_inf_nan\nstdio#swprintf_swscanf_inf_nan\tfail\tbionic/tests/stdio_test.cpp:(494) Failure in test stdio.swprintf_swscanf_inf_nan\nsys_ptrace#watchpoint_imprecise\tfail\tbionic/tests/sys_ptrace_test.cpp:(193) Failure in test sys_ptrace.watchpoint_imprecise\nsys_ptrace#hardware_breakpoint\tfail\tbionic/tests/sys_ptrace_test.cpp:(367) Failure in test sys_ptrace.hardware_breakpoint\nsys_ptrace#watchpoint_stress\tfail\tbionic/tests/sys_ptrace_test.cpp:(193) Failure in test sys_ptrace.watchpoint_stress",
      "revId": "fbd59be2eec80d419c3333ea8b4df8f0da7dcaac",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "415ed657_592db865",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2022-09-30T21:59:29Z",
      "side": 1,
      "message": "you\u0027ll see me starting to break this up into smaller changes to get the pieces in. in particular, we can\u0027t approve any binary blobs [like the .so files] from non-google employees, so i\u0027ll definitely regenerate those myself. also .bp file changes are blocked on the build system support going in, but i see no reason to hold some of the obvious pieces up waiting for that. i\u0027ve started with the uapi headers, since those are all machine-generated commits anyway (given the tool fixes included in this big patch; thanks for those!).\n\nfor everything else, i\u0027ll break it into \"the smallest independently meaningful pieces\".\n\ni\u0027ll keep your Signed-off-by: lines on all the \"new\" changes that are created, but if you\u0027d rather stay as the change author in git, let me know and i can tell you what pieces i\u0027ll be breaking it up into so you can make the pieces yourself :-) i\u0027m assuming though -- since there are multiple authors -- the Signed-off-by lines are \"fairer\" anyway? (i\u0027ll cc: you on the changes, too, so you can follow the progress.)",
      "revId": "fbd59be2eec80d419c3333ea8b4df8f0da7dcaac",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "97a7065f_911db494",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1950590
      },
      "writtenOn": "2022-10-08T07:21:56Z",
      "side": 1,
      "message": "The first line in the Signed-off-by lines are normally the original author in the patch I submitted, and the following lines are contributor listed in time sequence that they helped to improve the risc-v support.\nThe signed-off-by lines is fine, it is not necessary to be the change author in git for me. But we do hope to see more RISC-V changes is merged with SoB chains or original author info, to show the involvement of Alibaba \u0026 the RISC-V community.",
      "parentUuid": "415ed657_592db865",
      "revId": "fbd59be2eec80d419c3333ea8b4df8f0da7dcaac",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d555dcab_4fee2435",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2022-10-08T15:16:00Z",
      "side": 1,
      "message": "\u003e But we do hope to see more RISC-V changes is merged with SoB chains or original author info, to show the involvement of Alibaba \u0026 the RISC-V community.\n\nyeah, i expect _most_ changes should be a lot easier to submit than this one... this change is unusual because it contains so many [theoretically] unrelated pieces in one big patch, with different people being the correct reviewer for each piece. plus there are binary blobs (the test .so files) that we\u0027re never allowed to accept (though that should be really rare anyway!). plus there are a lot of changes i want to make as i go through trying to understand this, both small (like using ra instead of x1 in BIONIC_STOP_UNWIND, say) and large (like switching to FreeBSD for our ELF constants) ... so although i _could_ describe what pieces to break it up into, and what to change, then wait for you to change it, iterate, and submit all the pieces, just breaking it up and editing it myself seemed a lot quicker. especially given the large timezone difference between us! (and it seems important to get the bionic changes in as quick as we can because everyone else needs us to finish build \u0026 bionic stuff before they can start their work :-( )\n\ni did just make a tiny edit on the strace change (to remove the config.h edit which you confirmed shouldn\u0027t be necessary). i _think_ that edit should keep the alibaba origin (with you remaining the _author_ of the change even if i\u0027m now the _uploader_), but i\u0027ll pay attention to whether that works --- if it doesn\u0027t work how i think it should, i\u0027ll stop doing that and just ask you to do it instead. (but don\u0027t worry --- there\u0027s so much work ahead of us that there will be plenty of opportunity for attribution :-) )",
      "parentUuid": "97a7065f_911db494",
      "revId": "fbd59be2eec80d419c3333ea8b4df8f0da7dcaac",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "605d732f_17db2f47",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2022-10-08T15:35:14Z",
      "side": 1,
      "message": "if you _do_ want to break this change up into pieces yourself, though, here are the high-level ones i\u0027d suggest for what\u0027s left:\n\n* libc/arch-riscv64/* in its own change. (though maybe keep setjmp separate, because that looks like it needs more thought than the others?)\n* linker/* in its own change.\n* benchmarks/* in its own change.\n* tests/* in its own change.\n* tests/prebuilt-elf-files/* in its own change (that we won\u0027t submit -- i\u0027ll have to regenerate those myself anyway to follow Google\u0027s \"binary provenance\" rules -- but they\u0027re still useful as a reminder).\n* SYSCALLS.TXT and gensyscalls.py (and those pieces of the .bp files) in their own change.\n* the seccomp stuff in its own change.\n\n(but you don\u0027t have to ... i can keep chopping the big change up myself :-) but this kind of thing is probably a good pattern to follow for future changes --- \"break your change into the smallest meaningful pieces\" is one of the slogans i\u0027ve heard.)",
      "parentUuid": "d555dcab_4fee2435",
      "revId": "fbd59be2eec80d419c3333ea8b4df8f0da7dcaac",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}