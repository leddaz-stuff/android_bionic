{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "be729a48_5108649a",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2023-05-10T15:04:54Z",
      "side": 1,
      "message": "this also seems like a place where either the documentation or the code [in init] is wrong, and we\u0027ll need to check the source to decide who\u0027s right:\n```\nsystem/core/init/builtins.cpp:850:22: error: null passed to a callee that requires a non-null argument [-Werror,-Wnonnull]\nif (settimeofday(nullptr, \u0026tz) \u003d\u003d -1) {\n```",
      "revId": "648b8b68a9e98f85b26b80d961f7e9e431df57d3",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7149b52e_f15f77be",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2023-05-10T15:05:13Z",
      "side": 1,
      "message": "(or write the missing tests.)",
      "parentUuid": "be729a48_5108649a",
      "revId": "648b8b68a9e98f85b26b80d961f7e9e431df57d3",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7a7fcb92_302bbef7",
        "filename": "libc/include/sys/time.h",
        "patchSetId": 4
      },
      "lineNbr": 45,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2023-05-09T22:56:37Z",
      "side": 1,
      "message": "`grep -r DEFINE.*setitimer` in a kernel tree gets me to  https://elixir.bootlin.com/linux/latest/source/kernel/time/itimer.c#L206 which looks like it will always dereference `__new_value`?",
      "revId": "648b8b68a9e98f85b26b80d961f7e9e431df57d3",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "95766c20_02f2359b",
        "filename": "libc/include/sys/time.h",
        "patchSetId": 4
      },
      "lineNbr": 45,
      "author": {
        "id": 1890456
      },
      "writtenOn": "2023-05-10T20:47:26Z",
      "side": 1,
      "message": "But here\n\n```\nThe standards are silent on the meaning of the call:\n\nsetitimer(which, NULL, \u0026old_value);\n\nMany systems (Solaris, the BSDs, and perhaps others) treat this\nas equivalent to:\n\ngetitimer(which, \u0026old_value);\n\nIn Linux, this is treated as being equivalent to a call in which\nthe new_value fields are zero\n```\n       \nhttps://man7.org/linux/man-pages/man2/setitimer.2.html",
      "parentUuid": "7a7fcb92_302bbef7",
      "revId": "648b8b68a9e98f85b26b80d961f7e9e431df57d3",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "971b89e0_1f53c21b",
        "filename": "libc/include/sys/time.h",
        "patchSetId": 4
      },
      "lineNbr": 45,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2023-05-10T21:11:50Z",
      "side": 1,
      "message": "/me checks kernel source again...\n\nhttps://elixir.bootlin.com/linux/latest/source/kernel/time/itimer.c#L332\n\nah, yeah, i shouldn\u0027t have been so lazy --- the _actual_ syscall does a little bit of work before it calls do_setitimer (which is what i linked to before). but you can see from the kernel source that the _kernel_ has the same \"do not use this\" that\u0027s mentioned in the man page.\n\nso, yeah, you _can_ pass nullptr here, but your kernel will complain if you do, so we should probably discourage people from doing this.",
      "parentUuid": "95766c20_02f2359b",
      "revId": "648b8b68a9e98f85b26b80d961f7e9e431df57d3",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e92ef04e_ce313f0f",
        "filename": "libc/include/sys/time.h",
        "patchSetId": 4
      },
      "lineNbr": 55,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2023-05-09T22:56:37Z",
      "side": 1,
      "message": "is that true? what would that mean?",
      "range": {
        "startLine": 55,
        "startChar": 40,
        "endLine": 55,
        "endChar": 49
      },
      "revId": "648b8b68a9e98f85b26b80d961f7e9e431df57d3",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "309fa3d6_d213689a",
        "filename": "libc/include/sys/time.h",
        "patchSetId": 4
      },
      "lineNbr": 55,
      "author": {
        "id": 1890456
      },
      "writtenOn": "2023-05-10T00:05:39Z",
      "side": 1,
      "message": "I think it should be `__BIONIC_COMPLICATED_NULLNESS` at least. \n\n```   Glibc notes\n       If pathname is NULL, then the glibc futimesat() wrapper function\n       updates the times for the file referred to by dirfd.```  \nfrom https://man7.org/linux/man-pages/man2/futimesat.2.html \n\nand `__path` is called https://source.corp.google.com/android/bionic/libc/bionic/sys_time.cpp;l\u003d43?q\u003dfutimesat\u0026ss\u003dpiper%2FGoogle%2Fandroid:bionic%2F\nwhere https://source.corp.google.com/android/bionic/libc/include/sys/stat.h;l\u003d192?q\u003dutimensat\u0026sq\u003d\u0026ss\u003dpiper%2FGoogle%2Fandroid:bionic%2F is `__BIONIC_COMPLICATED_NULLNESS`",
      "parentUuid": "e92ef04e_ce313f0f",
      "range": {
        "startLine": 55,
        "startChar": 40,
        "endLine": 55,
        "endChar": 49
      },
      "revId": "648b8b68a9e98f85b26b80d961f7e9e431df57d3",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d71a7dab_2acffaaa",
        "filename": "libc/include/sys/time.h",
        "patchSetId": 4
      },
      "lineNbr": 55,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2023-05-10T15:03:59Z",
      "side": 1,
      "message": "does _bionic_ do that? (do we have a test for this? there seems to be confusion between the man page which says _glibc_ does this, and the utimensat() doc comment which says the _Linux kernel_ does this. if the man page is wrong, we should send a man page fix upstream, call this COMPLICATED [and document why, similar to utimensat()]. if not, we should fix utimensat()\u0027s annotation and documentation.)",
      "parentUuid": "309fa3d6_d213689a",
      "range": {
        "startLine": 55,
        "startChar": 40,
        "endLine": 55,
        "endChar": 49
      },
      "revId": "648b8b68a9e98f85b26b80d961f7e9e431df57d3",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "bb2f4445_4786cd88",
        "filename": "tests/sys_timex_test.cpp",
        "patchSetId": 4
      },
      "lineNbr": 37,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2023-05-09T22:56:37Z",
      "side": 1,
      "message": "delete this one too? clock_adjtime_smoke seems like a strictly better test?",
      "revId": "648b8b68a9e98f85b26b80d961f7e9e431df57d3",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}