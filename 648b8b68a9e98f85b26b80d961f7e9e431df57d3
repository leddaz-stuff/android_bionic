{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "be729a48_5108649a",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2023-05-10T15:04:54Z",
      "side": 1,
      "message": "this also seems like a place where either the documentation or the code [in init] is wrong, and we\u0027ll need to check the source to decide who\u0027s right:\n```\nsystem/core/init/builtins.cpp:850:22: error: null passed to a callee that requires a non-null argument [-Werror,-Wnonnull]\nif (settimeofday(nullptr, \u0026tz) \u003d\u003d -1) {\n```",
      "revId": "648b8b68a9e98f85b26b80d961f7e9e431df57d3",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7149b52e_f15f77be",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2023-05-10T15:05:13Z",
      "side": 1,
      "message": "(or write the missing tests.)",
      "parentUuid": "be729a48_5108649a",
      "revId": "648b8b68a9e98f85b26b80d961f7e9e431df57d3",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9d291f41_bb7bd8c3",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1890456
      },
      "writtenOn": "2023-05-11T22:32:46Z",
      "side": 1,
      "message": "I think it should be `_Nullable`? See https://elixir.bootlin.com/linux/latest/source/kernel/time/time.c#L199",
      "parentUuid": "7149b52e_f15f77be",
      "revId": "648b8b68a9e98f85b26b80d961f7e9e431df57d3",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b063ea80_af29eb85",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2023-05-11T23:17:42Z",
      "side": 1,
      "message": "yeah, i agree --- it looks like the man page is wrong... worth sending them a fix if you want to try something new :-)",
      "parentUuid": "9d291f41_bb7bd8c3",
      "revId": "648b8b68a9e98f85b26b80d961f7e9e431df57d3",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b55863a5_76b11a31",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1890456
      },
      "writtenOn": "2023-05-15T18:03:51Z",
      "side": 1,
      "message": "Sent on Friday and wait for the result.",
      "parentUuid": "b063ea80_af29eb85",
      "revId": "648b8b68a9e98f85b26b80d961f7e9e431df57d3",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "651dc903_174134f5",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1890456
      },
      "writtenOn": "2023-05-16T17:11:42Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "b55863a5_76b11a31",
      "revId": "648b8b68a9e98f85b26b80d961f7e9e431df57d3",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7a7fcb92_302bbef7",
        "filename": "libc/include/sys/time.h",
        "patchSetId": 4
      },
      "lineNbr": 45,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2023-05-09T22:56:37Z",
      "side": 1,
      "message": "`grep -r DEFINE.*setitimer` in a kernel tree gets me to  https://elixir.bootlin.com/linux/latest/source/kernel/time/itimer.c#L206 which looks like it will always dereference `__new_value`?",
      "revId": "648b8b68a9e98f85b26b80d961f7e9e431df57d3",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "95766c20_02f2359b",
        "filename": "libc/include/sys/time.h",
        "patchSetId": 4
      },
      "lineNbr": 45,
      "author": {
        "id": 1890456
      },
      "writtenOn": "2023-05-10T20:47:26Z",
      "side": 1,
      "message": "But here\n\n```\nThe standards are silent on the meaning of the call:\n\nsetitimer(which, NULL, \u0026old_value);\n\nMany systems (Solaris, the BSDs, and perhaps others) treat this\nas equivalent to:\n\ngetitimer(which, \u0026old_value);\n\nIn Linux, this is treated as being equivalent to a call in which\nthe new_value fields are zero\n```\n       \nhttps://man7.org/linux/man-pages/man2/setitimer.2.html",
      "parentUuid": "7a7fcb92_302bbef7",
      "revId": "648b8b68a9e98f85b26b80d961f7e9e431df57d3",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "971b89e0_1f53c21b",
        "filename": "libc/include/sys/time.h",
        "patchSetId": 4
      },
      "lineNbr": 45,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2023-05-10T21:11:50Z",
      "side": 1,
      "message": "/me checks kernel source again...\n\nhttps://elixir.bootlin.com/linux/latest/source/kernel/time/itimer.c#L332\n\nah, yeah, i shouldn\u0027t have been so lazy --- the _actual_ syscall does a little bit of work before it calls do_setitimer (which is what i linked to before). but you can see from the kernel source that the _kernel_ has the same \"do not use this\" that\u0027s mentioned in the man page.\n\nso, yeah, you _can_ pass nullptr here, but your kernel will complain if you do, so we should probably discourage people from doing this.",
      "parentUuid": "95766c20_02f2359b",
      "revId": "648b8b68a9e98f85b26b80d961f7e9e431df57d3",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b96a84f2_094f6b5c",
        "filename": "libc/include/sys/time.h",
        "patchSetId": 4
      },
      "lineNbr": 45,
      "author": {
        "id": 1890456
      },
      "writtenOn": "2023-05-11T22:32:46Z",
      "side": 1,
      "message": "I see. I will make it `_Nonnull` here.",
      "parentUuid": "971b89e0_1f53c21b",
      "revId": "648b8b68a9e98f85b26b80d961f7e9e431df57d3",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c6a08208_cd4cb7d4",
        "filename": "libc/include/sys/time.h",
        "patchSetId": 4
      },
      "lineNbr": 45,
      "author": {
        "id": 1890456
      },
      "writtenOn": "2023-05-12T00:59:51Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "b96a84f2_094f6b5c",
      "revId": "648b8b68a9e98f85b26b80d961f7e9e431df57d3",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e92ef04e_ce313f0f",
        "filename": "libc/include/sys/time.h",
        "patchSetId": 4
      },
      "lineNbr": 55,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2023-05-09T22:56:37Z",
      "side": 1,
      "message": "is that true? what would that mean?",
      "range": {
        "startLine": 55,
        "startChar": 40,
        "endLine": 55,
        "endChar": 49
      },
      "revId": "648b8b68a9e98f85b26b80d961f7e9e431df57d3",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "309fa3d6_d213689a",
        "filename": "libc/include/sys/time.h",
        "patchSetId": 4
      },
      "lineNbr": 55,
      "author": {
        "id": 1890456
      },
      "writtenOn": "2023-05-10T00:05:39Z",
      "side": 1,
      "message": "I think it should be `__BIONIC_COMPLICATED_NULLNESS` at least. \n\n```   Glibc notes\n       If pathname is NULL, then the glibc futimesat() wrapper function\n       updates the times for the file referred to by dirfd.```  \nfrom https://man7.org/linux/man-pages/man2/futimesat.2.html \n\nand `__path` is called https://source.corp.google.com/android/bionic/libc/bionic/sys_time.cpp;l\u003d43?q\u003dfutimesat\u0026ss\u003dpiper%2FGoogle%2Fandroid:bionic%2F\nwhere https://source.corp.google.com/android/bionic/libc/include/sys/stat.h;l\u003d192?q\u003dutimensat\u0026sq\u003d\u0026ss\u003dpiper%2FGoogle%2Fandroid:bionic%2F is `__BIONIC_COMPLICATED_NULLNESS`",
      "parentUuid": "e92ef04e_ce313f0f",
      "range": {
        "startLine": 55,
        "startChar": 40,
        "endLine": 55,
        "endChar": 49
      },
      "revId": "648b8b68a9e98f85b26b80d961f7e9e431df57d3",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d71a7dab_2acffaaa",
        "filename": "libc/include/sys/time.h",
        "patchSetId": 4
      },
      "lineNbr": 55,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2023-05-10T15:03:59Z",
      "side": 1,
      "message": "does _bionic_ do that? (do we have a test for this? there seems to be confusion between the man page which says _glibc_ does this, and the utimensat() doc comment which says the _Linux kernel_ does this. if the man page is wrong, we should send a man page fix upstream, call this COMPLICATED [and document why, similar to utimensat()]. if not, we should fix utimensat()\u0027s annotation and documentation.)",
      "parentUuid": "309fa3d6_d213689a",
      "range": {
        "startLine": 55,
        "startChar": 40,
        "endLine": 55,
        "endChar": 49
      },
      "revId": "648b8b68a9e98f85b26b80d961f7e9e431df57d3",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "432f2087_8f3dff9e",
        "filename": "libc/include/sys/time.h",
        "patchSetId": 4
      },
      "lineNbr": 55,
      "author": {
        "id": 1890456
      },
      "writtenOn": "2023-05-10T21:16:07Z",
      "side": 1,
      "message": "```\nC library/kernel ABI differences\n       On Linux, futimens() is a library function implemented on top of\n       the utimensat() system call.  To support this, the Linux\n       utimensat() system call implements a nonstandard feature: if\n       pathname is NULL, then the call modifies the timestamps of the\n       file referred to by the file descriptor dirfd (which may refer to\n       any type of file).  Using this feature, the call\n       futimens(fd, times) is implemented as:\n\n           utimensat(fd, NULL, times, 0);\n\n       Note, however, that the glibc wrapper for utimensat() disallows\n       passing NULL as the value for pathname: the wrapper function\n       returns the error EINVAL in this case.\n``` \nin https://man7.org/linux/man-pages/man2/utimensat.2.html\nI think it is consistent?",
      "parentUuid": "d71a7dab_2acffaaa",
      "range": {
        "startLine": 55,
        "startChar": 40,
        "endLine": 55,
        "endChar": 49
      },
      "revId": "648b8b68a9e98f85b26b80d961f7e9e431df57d3",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8568ec0b_72c1d5ff",
        "filename": "libc/include/sys/time.h",
        "patchSetId": 4
      },
      "lineNbr": 55,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2023-05-10T21:21:25Z",
      "side": 1,
      "message": "it\u0027s consistent _when talking about glibc_, but that doesn\u0027t tell you what _bionic_ does, which is the only thing we care about. (i mentioned the linux kernel earlier because -- unless we do something special in bionic -- we\u0027ll have the linux kernel behavior.)",
      "parentUuid": "432f2087_8f3dff9e",
      "range": {
        "startLine": 55,
        "startChar": 40,
        "endLine": 55,
        "endChar": 49
      },
      "revId": "648b8b68a9e98f85b26b80d961f7e9e431df57d3",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ee796fcb_34686dec",
        "filename": "libc/include/sys/time.h",
        "patchSetId": 4
      },
      "lineNbr": 55,
      "author": {
        "id": 1890456
      },
      "writtenOn": "2023-05-11T22:32:46Z",
      "side": 1,
      "message": "I think nullptr path can be passed to`utimensat` for https://source.corp.google.com/android/bionic/libc/bionic/futimens.cpp;l\u003d33?q\u003dutimensat\u0026ss\u003dpiper%2FGoogle%2Fandroid:bionic%2F \nSo I still think it can be `null`, at least not `_Nonnull`?",
      "parentUuid": "8568ec0b_72c1d5ff",
      "range": {
        "startLine": 55,
        "startChar": 40,
        "endLine": 55,
        "endChar": 49
      },
      "revId": "648b8b68a9e98f85b26b80d961f7e9e431df57d3",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d6f1afa6_7615552b",
        "filename": "libc/include/sys/time.h",
        "patchSetId": 4
      },
      "lineNbr": 55,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2023-05-11T23:17:42Z",
      "side": 1,
      "message": "yeah, i think we want _Nullable and a comment like:\n```\n/**\n * [futimesat(2)](https://man7.org/linux/man-pages/man2/futimesat.2.html) sets\n * file timestamps.\n *\n * Note: Linux supports `__path` being NULL (in which case `__dir_fd` need not\n * be a directory), allowing futimensat() to be implemented with utimensat().\n * Most callers should just use utimensat() directly, especially on Android\n * where utimensat() has been available for longer than futimesat().\n *\n * Returns 0 on success and -1 and sets `errno` on failure.\n *\n * Available since API level 26.\n */\n```",
      "parentUuid": "ee796fcb_34686dec",
      "range": {
        "startLine": 55,
        "startChar": 40,
        "endLine": 55,
        "endChar": 49
      },
      "revId": "648b8b68a9e98f85b26b80d961f7e9e431df57d3",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "76bbbbea_e39b2a3e",
        "filename": "libc/include/sys/time.h",
        "patchSetId": 4
      },
      "lineNbr": 55,
      "author": {
        "id": 1890456
      },
      "writtenOn": "2023-05-12T00:59:51Z",
      "side": 1,
      "message": "okay I made it `__BIONIC_COMPLICATED_NULLNESS` for consistency.",
      "parentUuid": "d6f1afa6_7615552b",
      "range": {
        "startLine": 55,
        "startChar": 40,
        "endLine": 55,
        "endChar": 49
      },
      "revId": "648b8b68a9e98f85b26b80d961f7e9e431df57d3",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a634260d_b2b8586e",
        "filename": "libc/include/sys/time.h",
        "patchSetId": 4
      },
      "lineNbr": 55,
      "author": {
        "id": 1890456
      },
      "writtenOn": "2023-05-15T18:03:51Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "76bbbbea_e39b2a3e",
      "range": {
        "startLine": 55,
        "startChar": 40,
        "endLine": 55,
        "endChar": 49
      },
      "revId": "648b8b68a9e98f85b26b80d961f7e9e431df57d3",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "bb2f4445_4786cd88",
        "filename": "tests/sys_timex_test.cpp",
        "patchSetId": 4
      },
      "lineNbr": 37,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2023-05-09T22:56:37Z",
      "side": 1,
      "message": "delete this one too? clock_adjtime_smoke seems like a strictly better test?",
      "revId": "648b8b68a9e98f85b26b80d961f7e9e431df57d3",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "828e2379_f53bf442",
        "filename": "tests/sys_timex_test.cpp",
        "patchSetId": 4
      },
      "lineNbr": 37,
      "author": {
        "id": 1890456
      },
      "writtenOn": "2023-05-10T21:16:07Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "bb2f4445_4786cd88",
      "revId": "648b8b68a9e98f85b26b80d961f7e9e431df57d3",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}