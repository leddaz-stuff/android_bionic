{
  "comments": [
    {
      "key": {
        "uuid": "4d61377a_3fee27b4",
        "filename": "linker/linker.cpp",
        "patchSetId": 1
      },
      "lineNbr": 2184,
      "author": {
        "id": 1373864
      },
      "writtenOn": "2020-03-13T15:46:10Z",
      "side": 1,
      "message": "Do we need to support this? I thought the plan was to use flattened APEXes when not using real ones, and that keeps all the paths the same. From a linker namespace perspective I get nervous seeing libs in the \"wrong\" dirs.",
      "range": {
        "startLine": 2184,
        "startChar": 7,
        "endLine": 2184,
        "endChar": 46
      },
      "revId": "4e2598035edfa065150fe5c0a4a7a70b7608081b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "28355f21_ef8f4b35",
        "filename": "linker/linker.cpp",
        "patchSetId": 1
      },
      "lineNbr": 2184,
      "author": {
        "id": 1047684
      },
      "writtenOn": "2020-03-13T15:51:59Z",
      "side": 1,
      "message": "Actually, this change prevents the path translation from \"/system/lib/libicuuc.so\" if the file \"/system/lib/libicuuc.so\" exists. Is it what you mean by \"wrong\" dir?",
      "parentUuid": "4d61377a_3fee27b4",
      "range": {
        "startLine": 2184,
        "startChar": 7,
        "endLine": 2184,
        "endChar": 46
      },
      "revId": "4e2598035edfa065150fe5c0a4a7a70b7608081b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3c48281e_dfc5566d",
        "filename": "linker/linker.cpp",
        "patchSetId": 1
      },
      "lineNbr": 2184,
      "author": {
        "id": 1373864
      },
      "writtenOn": "2020-03-13T15:54:20Z",
      "side": 1,
      "message": "Yes. I wonder if we should support having those libs in /system/lib at all. When does that happen?",
      "parentUuid": "28355f21_ef8f4b35",
      "range": {
        "startLine": 2184,
        "startChar": 7,
        "endLine": 2184,
        "endChar": 46
      },
      "revId": "4e2598035edfa065150fe5c0a4a7a70b7608081b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "fc9fc6c6_8309c58c",
        "filename": "linker/linker.cpp",
        "patchSetId": 1
      },
      "lineNbr": 2184,
      "author": {
        "id": 1047684
      },
      "writtenOn": "2020-03-13T16:25:43Z",
      "side": 1,
      "message": "No concrete use case. Actually, if /system/lib/libicuuc.so shows up, IIUC, either one copy loaded into memory won\u0027t work properly in the app process, because it was not initialized by libcore properly.\n\nI am making this change now to make debugging a little easier only, because if you call dlopen(\"/system/lib/libicuuc.so\", 0) and the real path exists, you don\u0027t want the linker to translate it.\n\nFYI. it happened temporarily in master and it works fine (https://r.android.com/920836), because all libs in /system links libandroidicu today. \n\nAlso, I also reproduced this situation today after running some extra make command, e.g. \"m libicuuc\" before flashing the device. The device also works fine IIUC.",
      "parentUuid": "3c48281e_dfc5566d",
      "range": {
        "startLine": 2184,
        "startChar": 7,
        "endLine": 2184,
        "endChar": 46
      },
      "revId": "4e2598035edfa065150fe5c0a4a7a70b7608081b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c1bbd65c_468419f9",
        "filename": "linker/linker.cpp",
        "patchSetId": 1
      },
      "lineNbr": 2184,
      "author": {
        "id": 1373864
      },
      "writtenOn": "2020-03-13T16:54:01Z",
      "side": 1,
      "message": "\u003e if you call dlopen(\"/system/lib/libicuuc.so\", 0) and the real path exists, /.../\n\nBut why would it exist there? I can see devs getting confused if they happen to ad-hoc adb push it there and then it\u0027s still not loaded, but that doesn\u0027t necessarily make it a use case we want to support. Another option is that the linker complains suitably loudly, maybe even aborts.\n\n\u003e after running some extra make command, e.g. \"m libicuuc\" /.../\n\nYou ended up with libicuuc.so in the system image after that? That\u0027s a bug I thought was fixed: b/129006418",
      "parentUuid": "fc9fc6c6_8309c58c",
      "range": {
        "startLine": 2184,
        "startChar": 7,
        "endLine": 2184,
        "endChar": 46
      },
      "revId": "4e2598035edfa065150fe5c0a4a7a70b7608081b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    }
  ]
}