{
  "comments": [
    {
      "key": {
        "uuid": "2489148a_4678c623",
        "filename": "libc/bionic/grp_pwd.cpp",
        "patchSetId": 1
      },
      "lineNbr": 563,
      "author": {
        "id": 1132673
      },
      "writtenOn": "2019-02-18T03:02:32Z",
      "side": 1,
      "message": "why is is_oem_id() omitted here?",
      "revId": "88c9ef365bab0a7e5ad8d8fe6a77fd81c50e7661",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5fb5792d_7b5bdc63",
        "filename": "libc/bionic/grp_pwd.cpp",
        "patchSetId": 1
      },
      "lineNbr": 563,
      "author": {
        "id": 1064128
      },
      "writtenOn": "2019-02-19T19:06:56Z",
      "side": 1,
      "message": "I didn\u0027t want to expand it to cover the new ranges, since I don\u0027t want oem_\u003cn\u003e to be automatically generated for these ranges.  That said, we should still have a check here.  I think the best way to do this would be to add a list of ranges of AIDs that each of these files is allowed to return.",
      "parentUuid": "2489148a_4678c623",
      "revId": "88c9ef365bab0a7e5ad8d8fe6a77fd81c50e7661",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "32e5915f_d6e7524d",
        "filename": "libc/bionic/grp_pwd.cpp",
        "patchSetId": 1
      },
      "lineNbr": 563,
      "author": {
        "id": 1132673
      },
      "writtenOn": "2019-02-20T11:08:20Z",
      "side": 1,
      "message": "Yeah, that would work. But the check is just for sanity and thus not mandatory, right?",
      "parentUuid": "5fb5792d_7b5bdc63",
      "revId": "88c9ef365bab0a7e5ad8d8fe6a77fd81c50e7661",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e018dd0e_88a6277d",
        "filename": "libc/bionic/grp_pwd.cpp",
        "patchSetId": 1
      },
      "lineNbr": 563,
      "author": {
        "id": 1064128
      },
      "writtenOn": "2019-02-20T18:31:40Z",
      "side": 1,
      "message": "It is mandatory.  Partitions must only provide AIDs for numbers within their reserved range.  That\u0027s already the case for vendor and the \u0027OEM\u0027 range currently.",
      "parentUuid": "32e5915f_d6e7524d",
      "revId": "88c9ef365bab0a7e5ad8d8fe6a77fd81c50e7661",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5f5d0797_7b26f210",
        "filename": "libc/bionic/grp_pwd.cpp",
        "patchSetId": 1
      },
      "lineNbr": 563,
      "author": {
        "id": 1132673
      },
      "writtenOn": "2019-02-20T18:37:03Z",
      "side": 1,
      "message": "Yes, I know. I asked that because I thought that should have been enforced when building the image.",
      "parentUuid": "e018dd0e_88a6277d",
      "revId": "88c9ef365bab0a7e5ad8d8fe6a77fd81c50e7661",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7fc35980_8057ce6d",
        "filename": "libc/bionic/grp_pwd.cpp",
        "patchSetId": 1
      },
      "lineNbr": 563,
      "author": {
        "id": 1064128
      },
      "writtenOn": "2019-02-20T18:38:55Z",
      "side": 1,
      "message": "Oh right, yes it\u0027s enforced there too.  I want to check here too, in case modifications are made to the build that bypass that check.",
      "parentUuid": "5f5d0797_7b26f210",
      "revId": "88c9ef365bab0a7e5ad8d8fe6a77fd81c50e7661",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e82e98e1_b076ffc5",
        "filename": "libc/bionic/grp_pwd.cpp",
        "patchSetId": 1
      },
      "lineNbr": 563,
      "author": {
        "id": 1132673
      },
      "writtenOn": "2019-02-20T19:11:47Z",
      "side": 1,
      "message": "ok ack.",
      "parentUuid": "7fc35980_8057ce6d",
      "revId": "88c9ef365bab0a7e5ad8d8fe6a77fd81c50e7661",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}