{
  "comments": [
    {
      "key": {
        "uuid": "f16a69fa_e966dde2",
        "filename": "libc/private/bionic_time_conversions.h",
        "patchSetId": 1
      },
      "lineNbr": 79,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2016-08-31T15:51:35Z",
      "side": 1,
      "message": "given that you\u0027re inside a !__LP64__, this case and the one below can\u0027t happen.\n\nwe should just use std::numeric_limits\u003ctime_t\u003e::max here.\n\n...except that this seems wrong. we should return EINVAL like we do when timespec_from_timeval fails.",
      "revId": "ce989813c2338ae0c710b6938ddb49980954054e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "31a6c1c4_2f92c903",
        "filename": "libc/private/bionic_time_conversions.h",
        "patchSetId": 1
      },
      "lineNbr": 79,
      "author": {
        "id": 1072203
      },
      "writtenOn": "2016-08-31T18:18:39Z",
      "side": 1,
      "message": "\u003e given that you\u0027re inside a !__LP64__, this case and the one below\n \u003e can\u0027t happen.\n\nJust trying to be thorough, been taught not to assume time_t\u0027s size. I figured the compiler would be smart enough to optimize the extra away anyway.\n\n \u003e we should just use std::numeric_limits\u003ctime_t\u003e::max here.\n\nWas not aware that existed. That sounds much better.\n\n \u003e ...except that this seems wrong. we should return EINVAL like we do\n \u003e when timespec_from_timeval fails.\n\nThis created a behavior change though where this code is used. Considering this is all for legacy code I believe it should preserve the legacy behavior.",
      "parentUuid": "f16a69fa_e966dde2",
      "revId": "ce989813c2338ae0c710b6938ddb49980954054e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}