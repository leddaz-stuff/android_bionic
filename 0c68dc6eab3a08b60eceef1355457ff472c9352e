{
  "comments": [
    {
      "key": {
        "uuid": "929c86d9_566c6a33",
        "filename": "linker/linker.cpp",
        "patchSetId": 4
      },
      "lineNbr": 2330,
      "author": {
        "id": 1037287
      },
      "writtenOn": "2015-03-05T18:16:43Z",
      "side": 1,
      "message": "Please create local variables for android_relocs_ + 4 and android_relocs_size_ - 4, and use those both here and at 2335 below.",
      "revId": "0c68dc6eab3a08b60eceef1355457ff472c9352e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7220f282_41aaf503",
        "filename": "linker/linker.cpp",
        "patchSetId": 4
      },
      "lineNbr": 2330,
      "author": {
        "id": 1041673
      },
      "writtenOn": "2015-03-05T19:34:21Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "929c86d9_566c6a33",
      "revId": "0c68dc6eab3a08b60eceef1355457ff472c9352e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "773384f5_ef8e1dfa",
        "filename": "linker/linker_phdr.cpp",
        "patchSetId": 4
      },
      "lineNbr": 335,
      "author": {
        "id": 1037287
      },
      "writtenOn": "2015-03-05T18:16:43Z",
      "side": 1,
      "message": "Can you comment this change?  I think I understand it -- up to now addr has always been 0 because of the way shared libraries are built, and packed relocations has changed that; right?",
      "range": {
        "startLine": 335,
        "startChar": 17,
        "endLine": 335,
        "endChar": 24
      },
      "revId": "0c68dc6eab3a08b60eceef1355457ff472c9352e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1787a8d2_c1bc821f",
        "filename": "linker/linker_phdr.cpp",
        "patchSetId": 4
      },
      "lineNbr": 335,
      "author": {
        "id": 1041673
      },
      "writtenOn": "2015-03-05T19:34:21Z",
      "side": 1,
      "message": "right. linker never really worked with p_vaddr of the first segment !\u003d nullptr before.. (see also linker.cpp:1411 \u0026\u0026 L1420)\n\nin the case we provide the value of addr !\u003d 0 kernel is going to create mmap on the page boundary of the \"hint\" address (when it is available) which is not necessary here. we want a random address.",
      "parentUuid": "773384f5_ef8e1dfa",
      "range": {
        "startLine": 335,
        "startChar": 17,
        "endLine": 335,
        "endChar": 24
      },
      "revId": "0c68dc6eab3a08b60eceef1355457ff472c9352e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "929c86d9_d6b17a4a",
        "filename": "linker/linker_reloc_iterators.h",
        "patchSetId": 4
      },
      "lineNbr": 82,
      "author": {
        "id": 1037287
      },
      "writtenOn": "2015-03-05T18:16:43Z",
      "side": 1,
      "message": "If this fails we lose synchronization with the packed data stream, and an obscure crash later on is inevitable.\n\nCan we \u0027invalidate\u0027 the iterator here, and add to it an error() or similar method that relocate() can check at the end of its processing loop?  That would allow us to gracefully fail the load without horrible consequences.\n\n(I agree that this error case \u0027should not happen\u0027, at least not if the packer is correctly coded, and I think there\u0027s a case for not trying to handle it at all, either here or in read_group_fields().  But if we are going to try then propagating the error up to the caller would probably be preferable.)",
      "revId": "0c68dc6eab3a08b60eceef1355457ff472c9352e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f78db4f3_60a1f221",
        "filename": "linker/linker_reloc_iterators.h",
        "patchSetId": 4
      },
      "lineNbr": 82,
      "author": {
        "id": 1041673
      },
      "writtenOn": "2015-03-05T19:34:21Z",
      "side": 1,
      "message": "good catch; Done - yes we should not crash. DL_ERR should cover the cause; the only cause atm is unexpected r_addend.",
      "parentUuid": "929c86d9_d6b17a4a",
      "revId": "0c68dc6eab3a08b60eceef1355457ff472c9352e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "929c86d9_766fe629",
        "filename": "linker/linker_reloc_iterators.h",
        "patchSetId": 4
      },
      "lineNbr": 83,
      "author": {
        "id": 1037287
      },
      "writtenOn": "2015-03-05T18:16:43Z",
      "side": 1,
      "message": "relocate() does not error-out if next() returns null.",
      "revId": "0c68dc6eab3a08b60eceef1355457ff472c9352e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f78db4f3_60ced230",
        "filename": "linker/linker_reloc_iterators.h",
        "patchSetId": 4
      },
      "lineNbr": 83,
      "author": {
        "id": 1041673
      },
      "writtenOn": "2015-03-05T19:34:21Z",
      "side": 1,
      "message": "Done; added nullptr check to relocate",
      "parentUuid": "929c86d9_766fe629",
      "revId": "0c68dc6eab3a08b60eceef1355457ff472c9352e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "375f4c29_8a842ba1",
        "filename": "linker/linker_reloc_iterators.h",
        "patchSetId": 4
      },
      "lineNbr": 101,
      "author": {
        "id": 1037287
      },
      "writtenOn": "2015-03-05T18:16:43Z",
      "side": 1,
      "message": "DL_ERR also?  Seems like a significant issue.",
      "revId": "0c68dc6eab3a08b60eceef1355457ff472c9352e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f78db4f3_a0b5ba64",
        "filename": "linker/linker_reloc_iterators.h",
        "patchSetId": 4
      },
      "lineNbr": 101,
      "author": {
        "id": 1041673
      },
      "writtenOn": "2015-03-05T19:34:21Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "375f4c29_8a842ba1",
      "revId": "0c68dc6eab3a08b60eceef1355457ff472c9352e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "773384f5_2f43051f",
        "filename": "linker/linker_reloc_iterators.h",
        "patchSetId": 4
      },
      "lineNbr": 102,
      "author": {
        "id": 1037287
      },
      "writtenOn": "2015-03-05T18:16:43Z",
      "side": 1,
      "message": "relocate() does not error-out if next() returns null.",
      "revId": "0c68dc6eab3a08b60eceef1355457ff472c9352e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7220f282_a157295b",
        "filename": "linker/linker_reloc_iterators.h",
        "patchSetId": 4
      },
      "lineNbr": 102,
      "author": {
        "id": 1041673
      },
      "writtenOn": "2015-03-05T19:34:21Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "773384f5_2f43051f",
      "revId": "0c68dc6eab3a08b60eceef1355457ff472c9352e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "375f4c29_6a5337c2",
        "filename": "linker/linker_reloc_iterators.h",
        "patchSetId": 4
      },
      "lineNbr": 126,
      "author": {
        "id": 1037287
      },
      "writtenOn": "2015-03-05T18:16:43Z",
      "side": 1,
      "message": "DL_ERR?",
      "revId": "0c68dc6eab3a08b60eceef1355457ff472c9352e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}