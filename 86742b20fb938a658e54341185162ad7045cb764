{
  "comments": [
    {
      "key": {
        "uuid": "2d6e217b_d295953c",
        "filename": "libc/include/unistd.h",
        "patchSetId": 1
      },
      "lineNbr": 258,
      "author": {
        "id": 1052399
      },
      "writtenOn": "2015-05-20T22:08:42Z",
      "side": 1,
      "message": "Shouldn\u0027t getcwd be defined for clang to call __getcwd_chk,\nlike other fortified functions in string.h?",
      "range": {
        "startLine": 258,
        "startChar": 22,
        "endLine": 258,
        "endChar": 27
      },
      "revId": "86742b20fb938a658e54341185162ad7045cb764",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "adfdb1c1_bc37a78e",
        "filename": "libc/include/unistd.h",
        "patchSetId": 1
      },
      "lineNbr": 258,
      "author": {
        "id": 1069238
      },
      "writtenOn": "2015-05-20T22:14:14Z",
      "side": 1,
      "message": "The null issue is in addition to the usual ones. It will return 0 for some __builtin_object_size(null) expressions and then call __getcwd_chk(NULL, 5, 0) which will abort even though it should be valid.\n\nIt could be worked around by adding a branch checking for NULL in the inline code, but it will be really easy to fix it in LLVM and backport it so it doesn\u0027t seem worth adding any workarounds.\n\nhttps://llvm.org/bugs/show_bug.cgi?id\u003d23277",
      "parentUuid": "2d6e217b_d295953c",
      "range": {
        "startLine": 258,
        "startChar": 22,
        "endLine": 258,
        "endChar": 27
      },
      "revId": "86742b20fb938a658e54341185162ad7045cb764",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6d7ad934_edad5c9c",
        "filename": "libc/include/unistd.h",
        "patchSetId": 1
      },
      "lineNbr": 258,
      "author": {
        "id": 1069238
      },
      "writtenOn": "2015-05-20T22:16:46Z",
      "side": 1,
      "message": "It could also work around it in the _chk function, but adding a temporary workaround to the ABI forever would be even uglier.",
      "parentUuid": "adfdb1c1_bc37a78e",
      "range": {
        "startLine": 258,
        "startChar": 22,
        "endLine": 258,
        "endChar": 27
      },
      "revId": "86742b20fb938a658e54341185162ad7045cb764",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6d7ad934_8ab59e2f",
        "filename": "tests/fortify_test.cpp",
        "patchSetId": 1
      },
      "lineNbr": 626,
      "author": {
        "id": 1019050
      },
      "writtenOn": "2015-05-20T22:05:42Z",
      "side": 1,
      "message": "Please put this after the test definition. Due to restrictions in cts, you need to make sure that there are always the same set of tests in all ways that this can be compiled, even if some tests don\u0027t do anything.",
      "range": {
        "startLine": 626,
        "startChar": 0,
        "endLine": 626,
        "endChar": 17
      },
      "revId": "86742b20fb938a658e54341185162ad7045cb764",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}