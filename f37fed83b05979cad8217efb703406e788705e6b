{
  "comments": [
    {
      "key": {
        "uuid": "e4e7b292_02836a2f",
        "filename": "libc/arch-arm/bionic/_setjmp.S",
        "patchSetId": 1
      },
      "lineNbr": 80,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2014-12-05T20:21:11Z",
      "side": 1,
      "message": "(i\u0027m going to come back and fix arm [and mips and x86 and x86-64] in the same way, but this change is already big enough.)",
      "revId": "f37fed83b05979cad8217efb703406e788705e6b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e4e7b292_42dbb233",
        "filename": "libc/arch-arm64/bionic/setjmp.S",
        "patchSetId": 1
      },
      "lineNbr": 42,
      "author": {
        "id": 1019050
      },
      "writtenOn": "2014-12-05T22:13:28Z",
      "side": 1,
      "message": "Typo.",
      "range": {
        "startLine": 42,
        "startChar": 12,
        "endLine": 42,
        "endChar": 19
      },
      "revId": "f37fed83b05979cad8217efb703406e788705e6b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "041be66b_732a006d",
        "filename": "libc/arch-arm64/bionic/setjmp.S",
        "patchSetId": 1
      },
      "lineNbr": 86,
      "author": {
        "id": 1019050
      },
      "writtenOn": "2014-12-05T22:13:28Z",
      "side": 1,
      "message": "Instead of a load, you could do something like:\n\nmov w9, #0x53650000\nmov w1, #0x7200\nand w9, w9, w1",
      "range": {
        "startLine": 86,
        "startChar": 2,
        "endLine": 86,
        "endChar": 39
      },
      "revId": "f37fed83b05979cad8217efb703406e788705e6b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7f26ed9d_06a49a17",
        "filename": "libc/arch-arm64/bionic/setjmp.S",
        "patchSetId": 1
      },
      "lineNbr": 90,
      "author": {
        "id": 1019050
      },
      "writtenOn": "2014-12-05T22:13:28Z",
      "side": 1,
      "message": "No unwind directives?",
      "range": {
        "startLine": 90,
        "startChar": 2,
        "endLine": 90,
        "endChar": 25
      },
      "revId": "f37fed83b05979cad8217efb703406e788705e6b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bf2ce57b_68d7e3cc",
        "filename": "libc/arch-arm64/bionic/setjmp.S",
        "patchSetId": 1
      },
      "lineNbr": 99,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2014-12-05T20:21:11Z",
      "side": 1,
      "message": "is there a better way to do this \"w9 \u003d save ? mask_y : mask_n\" code?",
      "revId": "f37fed83b05979cad8217efb703406e788705e6b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "041be66b_d36f9465",
        "filename": "libc/arch-arm64/bionic/setjmp.S",
        "patchSetId": 1
      },
      "lineNbr": 99,
      "author": {
        "id": 1019050
      },
      "writtenOn": "2014-12-05T22:13:28Z",
      "side": 1,
      "message": "You could rewrite the function slightly and avoid any loads:\n\nmov w2, #0x7200\ncbz ...\n.\n.\n.\n\nstr w1, ...\n\nmov w2, #0x7201\n\n1:\n  mov w9, #0x5365000\n  and w9, w9, w2",
      "range": {
        "startLine": 99,
        "startChar": 2,
        "endLine": 99,
        "endChar": 39
      },
      "revId": "f37fed83b05979cad8217efb703406e788705e6b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c43aaec4_314010d3",
        "filename": "libc/arch-arm64/bionic/setjmp.S",
        "patchSetId": 1
      },
      "lineNbr": 129,
      "author": {
        "id": 1019050
      },
      "writtenOn": "2014-12-05T22:13:28Z",
      "side": 1,
      "message": "This can be replaced with 2 movs and and as above. I think that would be better than a memory load.",
      "range": {
        "startLine": 129,
        "startChar": 2,
        "endLine": 129,
        "endChar": 39
      },
      "revId": "f37fed83b05979cad8217efb703406e788705e6b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bf2ce57b_28cdeb3e",
        "filename": "libc/arch-arm64/bionic/setjmp.S",
        "patchSetId": 1
      },
      "lineNbr": 130,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2014-12-05T20:21:11Z",
      "side": 1,
      "message": "is this a legit use of w9?",
      "revId": "f37fed83b05979cad8217efb703406e788705e6b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c43aaec4_71ad782a",
        "filename": "libc/arch-arm64/bionic/setjmp.S",
        "patchSetId": 1
      },
      "lineNbr": 130,
      "author": {
        "id": 1019050
      },
      "writtenOn": "2014-12-05T22:13:28Z",
      "side": 1,
      "message": "Do you mean can w9 and w10 be compared properly? If so, yes the instruction works properly on 32 bit registers.\n\nAlthough given what you are doing below, you could do something like:\n\nsubs w9, w10, w9\nb.eq 1f\n\ncmp w9, #1\nb.ne longjmperror\n\nThis assumes the magic numbers don\u0027t change, but that seems unlikely to happen any time soon.",
      "parentUuid": "bf2ce57b_28cdeb3e",
      "revId": "f37fed83b05979cad8217efb703406e788705e6b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a43f7ab4_d313064e",
        "filename": "libc/arch-arm64/bionic/setjmp.S",
        "patchSetId": 1
      },
      "lineNbr": 137,
      "author": {
        "id": 1019050
      },
      "writtenOn": "2014-12-05T22:13:28Z",
      "side": 1,
      "message": "Unwind directives.",
      "range": {
        "startLine": 137,
        "startChar": 2,
        "endLine": 137,
        "endChar": 26
      },
      "revId": "f37fed83b05979cad8217efb703406e788705e6b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}