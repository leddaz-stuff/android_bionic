{
  "comments": [
    {
      "key": {
        "uuid": "798d1281_b97aba5e",
        "filename": "libc/bionic/bionic_elf_tls.cpp",
        "patchSetId": 3
      },
      "lineNbr": 350,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2020-07-15T16:08:22Z",
      "side": 1,
      "message": "yes, but you can still do that in pthread_exit. it doesn\u0027t really make sense for __free_dynamic_tls to also do this. (you can tell that from the awkward change to the comment \"It will also \u003cdo this unrelated thing that the name of the function doesn\u0027t imply\u003e\".)",
      "range": {
        "startLine": 349,
        "startChar": 5,
        "endLine": 350,
        "endChar": 55
      },
      "revId": "c4b9166970e39e5b7c44bc32b66337eb5ebf05a0",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2ffcf33d_bcef8fb1",
        "filename": "libc/bionic/bionic_elf_tls.cpp",
        "patchSetId": 3
      },
      "lineNbr": 350,
      "author": {
        "id": 1631819
      },
      "writtenOn": "2020-07-15T22:16:50Z",
      "side": 1,
      "message": "Makes sense. Moved to a separate function.",
      "parentUuid": "798d1281_b97aba5e",
      "range": {
        "startLine": 349,
        "startChar": 5,
        "endLine": 350,
        "endChar": 55
      },
      "revId": "c4b9166970e39e5b7c44bc32b66337eb5ebf05a0",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "779b54e9_91fda1e4",
        "filename": "libc/bionic/pthread_exit.cpp",
        "patchSetId": 3
      },
      "lineNbr": 116,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2020-07-15T16:08:22Z",
      "side": 1,
      "message": "notice also how this comment has gone from pretty much redundant (it just says what the function name already said) to \"actually, this is subtle, so pay attention\"...",
      "range": {
        "startLine": 115,
        "startChar": 5,
        "endLine": 116,
        "endChar": 69
      },
      "revId": "c4b9166970e39e5b7c44bc32b66337eb5ebf05a0",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f2b8ddb8_d126066d",
        "filename": "libc/bionic/pthread_exit.cpp",
        "patchSetId": 3
      },
      "lineNbr": 116,
      "author": {
        "id": 1631819
      },
      "writtenOn": "2020-07-15T22:16:50Z",
      "side": 1,
      "message": "Normally, one could argue making comments *less* redundant is a good thing. :-)",
      "parentUuid": "779b54e9_91fda1e4",
      "range": {
        "startLine": 115,
        "startChar": 5,
        "endLine": 116,
        "endChar": 69
      },
      "revId": "c4b9166970e39e5b7c44bc32b66337eb5ebf05a0",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "40c7b8f5_50762102",
        "filename": "libc/bionic/sys_thread_properties.cpp",
        "patchSetId": 3
      },
      "lineNbr": 58,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2020-07-15T22:53:26Z",
      "side": 1,
      "message": "why? there\u0027s no need now this is a linked list?",
      "revId": "c4b9166970e39e5b7c44bc32b66337eb5ebf05a0",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "151a6244_7a911c72",
        "filename": "libc/bionic/sys_thread_properties.cpp",
        "patchSetId": 3
      },
      "lineNbr": 63,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2020-07-15T16:08:22Z",
      "side": 1,
      "message": "always use C++ casts.",
      "range": {
        "startLine": 63,
        "startChar": 6,
        "endLine": 63,
        "endChar": 30
      },
      "revId": "c4b9166970e39e5b7c44bc32b66337eb5ebf05a0",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "cba02d40_de953c3a",
        "filename": "libc/bionic/sys_thread_properties.cpp",
        "patchSetId": 3
      },
      "lineNbr": 63,
      "author": {
        "id": 1631819
      },
      "writtenOn": "2020-07-15T22:16:50Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "151a6244_7a911c72",
      "range": {
        "startLine": 63,
        "startChar": 6,
        "endLine": 63,
        "endChar": 30
      },
      "revId": "c4b9166970e39e5b7c44bc32b66337eb5ebf05a0",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "959078b3_1dfe77e9",
        "filename": "libc/bionic/sys_thread_properties.cpp",
        "patchSetId": 3
      },
      "lineNbr": 114,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2020-07-15T16:08:22Z",
      "side": 1,
      "message": "why not?",
      "revId": "c4b9166970e39e5b7c44bc32b66337eb5ebf05a0",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8e87aec4_6ceee0c5",
        "filename": "libc/bionic/sys_thread_properties.cpp",
        "patchSetId": 3
      },
      "lineNbr": 114,
      "author": {
        "id": 1631819
      },
      "writtenOn": "2020-07-15T22:16:50Z",
      "side": 1,
      "message": "Because we can\u0027t identify where the dynamic DTV entries begin.\n\nIn the previous revision (in the other CL), I had assumed `dtv-\u003ecount \u003e modules.static_modules_count`\n\n@rprichard commented that it wasn\u0027t a correct assertion. Maybe I misunderstood the comment.",
      "parentUuid": "959078b3_1dfe77e9",
      "revId": "c4b9166970e39e5b7c44bc32b66337eb5ebf05a0",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "262b1d2b_0a18ed1c",
        "filename": "libc/bionic/sys_thread_properties.cpp",
        "patchSetId": 3
      },
      "lineNbr": 114,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2020-07-15T22:53:26Z",
      "side": 1,
      "message": "but what\u0027s to be done? the current TODO isn\u0027t actionable, so it needs to be replaced with something that is, or fixed, or explained so that whoever has to fix it in 2025 understands. (but rprichard should be along shortly with a concrete suggestion...)",
      "parentUuid": "8e87aec4_6ceee0c5",
      "revId": "c4b9166970e39e5b7c44bc32b66337eb5ebf05a0",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1ac79cec_7e5d06ed",
        "filename": "libc/include/sys/thread_properties.h",
        "patchSetId": 3
      },
      "lineNbr": 78,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2020-07-15T16:08:22Z",
      "side": 1,
      "message": "__ on these too",
      "range": {
        "startLine": 78,
        "startChar": 51,
        "endLine": 78,
        "endChar": 68
      },
      "revId": "c4b9166970e39e5b7c44bc32b66337eb5ebf05a0",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b7228b01_b99178db",
        "filename": "libc/include/sys/thread_properties.h",
        "patchSetId": 3
      },
      "lineNbr": 78,
      "author": {
        "id": 1631819
      },
      "writtenOn": "2020-07-15T22:16:50Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "1ac79cec_7e5d06ed",
      "range": {
        "startLine": 78,
        "startChar": 51,
        "endLine": 78,
        "endChar": 68
      },
      "revId": "c4b9166970e39e5b7c44bc32b66337eb5ebf05a0",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a9346dc6_7dd44556",
        "filename": "libc/include/sys/thread_properties.h",
        "patchSetId": 3
      },
      "lineNbr": 89,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2020-07-15T16:08:22Z",
      "side": 1,
      "message": "no space",
      "range": {
        "startLine": 89,
        "startChar": 49,
        "endLine": 89,
        "endChar": 50
      },
      "revId": "c4b9166970e39e5b7c44bc32b66337eb5ebf05a0",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "15f8e878_66b35b45",
        "filename": "libc/include/sys/thread_properties.h",
        "patchSetId": 3
      },
      "lineNbr": 89,
      "author": {
        "id": 1631819
      },
      "writtenOn": "2020-07-15T22:16:50Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "a9346dc6_7dd44556",
      "range": {
        "startLine": 89,
        "startChar": 49,
        "endLine": 89,
        "endChar": 50
      },
      "revId": "c4b9166970e39e5b7c44bc32b66337eb5ebf05a0",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e04804f3_f2517f98",
        "filename": "libc/private/bionic_elf_tls.h",
        "patchSetId": 3
      },
      "lineNbr": 147,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2020-07-15T16:08:22Z",
      "side": 1,
      "message": "unused",
      "revId": "c4b9166970e39e5b7c44bc32b66337eb5ebf05a0",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1e78f033_3e7be729",
        "filename": "libc/private/bionic_elf_tls.h",
        "patchSetId": 3
      },
      "lineNbr": 147,
      "author": {
        "id": 1631819
      },
      "writtenOn": "2020-07-15T22:16:50Z",
      "side": 1,
      "message": "True, it\u0027s unused *here*, but it is used in sys_thread_properties.cpp\nI\u0027ll move it there.",
      "parentUuid": "e04804f3_f2517f98",
      "revId": "c4b9166970e39e5b7c44bc32b66337eb5ebf05a0",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a0bb0824_2f42ad42",
        "filename": "libc/private/bionic_elf_tls.h",
        "patchSetId": 3
      },
      "lineNbr": 148,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2020-07-15T16:08:22Z",
      "side": 1,
      "message": "probably don\u0027t need, since the only interesting case is empty/non-empty, and that\u0027s just a null check?",
      "revId": "c4b9166970e39e5b7c44bc32b66337eb5ebf05a0",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "99ae1bf3_18d83568",
        "filename": "libc/private/bionic_elf_tls.h",
        "patchSetId": 3
      },
      "lineNbr": 148,
      "author": {
        "id": 1631819
      },
      "writtenOn": "2020-07-15T22:16:50Z",
      "side": 1,
      "message": "We need this to gate the number of callbacks registered.",
      "parentUuid": "a0bb0824_2f42ad42",
      "revId": "c4b9166970e39e5b7c44bc32b66337eb5ebf05a0",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2ba83933_6fb09f48",
        "filename": "libc/private/bionic_elf_tls.h",
        "patchSetId": 3
      },
      "lineNbr": 148,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2020-07-15T22:53:26Z",
      "side": 1,
      "message": "why?",
      "parentUuid": "99ae1bf3_18d83568",
      "revId": "c4b9166970e39e5b7c44bc32b66337eb5ebf05a0",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d5c9abff_a92538ff",
        "filename": "libc/private/bionic_elf_tls.h",
        "patchSetId": 3
      },
      "lineNbr": 149,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2020-07-15T16:08:22Z",
      "side": 1,
      "message": "i was assuming you\u0027d have the head of the list inline so that in the normal cases there\u0027s no allocation? though you could argue that the _normal_ case is zero callbacks, so this is fine.\n\nrprichard: what\u0027s your opinion?\n\nno need for `struct` --- this is C++.\n\nalso, thread_exit_callbacks or thread_exit_callback_list makes the plural explicit.",
      "revId": "c4b9166970e39e5b7c44bc32b66337eb5ebf05a0",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "fe666187_80da6ca1",
        "filename": "libc/private/bionic_elf_tls.h",
        "patchSetId": 3
      },
      "lineNbr": 149,
      "author": {
        "id": 1631819
      },
      "writtenOn": "2020-07-15T22:16:50Z",
      "side": 1,
      "message": "Made it a union instead. The impl gives us n-1 allocations (and +16 bytes for the TlsModule struct size)\n\nA simpler approach might be: https://godbolt.org/z/aEThx6\n(also n-1 allocations but +24 bytes for the TlsModule struct).\n\nLet me know which one you\u0027d prefer.",
      "parentUuid": "d5c9abff_a92538ff",
      "revId": "c4b9166970e39e5b7c44bc32b66337eb5ebf05a0",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b72f5fa2_e4edb588",
        "filename": "libc/private/bionic_elf_tls.h",
        "patchSetId": 3
      },
      "lineNbr": 149,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2020-07-15T22:53:26Z",
      "side": 1,
      "message": "(yeah, the simpler one was closer to what i\u0027d imagined. i was concerned about the number of allocations, but not particularly about the size of the struct [considering that we previously had a constant `8 * sizeof(void*)` overhead for the array].)",
      "parentUuid": "fe666187_80da6ca1",
      "revId": "c4b9166970e39e5b7c44bc32b66337eb5ebf05a0",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    }
  ]
}