{
  "comments": [
    {
      "key": {
        "uuid": "8c25ef59_f1a615eb",
        "filename": "libc/Android.bp",
        "patchSetId": 1
      },
      "lineNbr": 1618,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2018-12-13T09:50:44Z",
      "side": 1,
      "message": "Do we need a \"versions\" ? And why does 10000 mean? Could you add a comment?",
      "range": {
        "startLine": 1618,
        "startChar": 8,
        "endLine": 1618,
        "endChar": 27
      },
      "revId": "bfcf91f24127d72a7e09d3d7e4aa2c9bf2c09333",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "37b08bdc_4ac2cb97",
        "filename": "libc/Android.bp",
        "patchSetId": 1
      },
      "lineNbr": 1618,
      "author": {
        "id": 1132673
      },
      "writtenOn": "2018-12-13T09:56:23Z",
      "side": 1,
      "message": "Yes we need. 10000 means FUTURE_API_LEVEL (build/soong/cc/gen_stub_libs.py)\n\nBecause Q hasn\u0027t been finalized (\u003d hasn\u0027t been assigned an API level though we all expect that it \nwill be 29), the symbols that we\u0027ve added to XXXX_Q version are automatically associated with 10000\nfor now.",
      "parentUuid": "8c25ef59_f1a615eb",
      "range": {
        "startLine": 1618,
        "startChar": 8,
        "endLine": 1618,
        "endChar": 27
      },
      "revId": "bfcf91f24127d72a7e09d3d7e4aa2c9bf2c09333",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2ea57c36_1df22fa6",
        "filename": "libc/Android.bp",
        "patchSetId": 1
      },
      "lineNbr": 1618,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2018-12-13T10:12:09Z",
      "side": 1,
      "message": "(This discussion is primarily for my own education). Defining stubs like this is a new thing with APEX, right?\n\nNot to keen on having a bionic version. I would hope our apexes just need ndk methods, and we could re-use whatever we used before for linking with the ndk.",
      "parentUuid": "37b08bdc_4ac2cb97",
      "range": {
        "startLine": 1618,
        "startChar": 8,
        "endLine": 1618,
        "endChar": 27
      },
      "revId": "bfcf91f24127d72a7e09d3d7e4aa2c9bf2c09333",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1546a0b7_3e3e84ab",
        "filename": "libc/Android.bp",
        "patchSetId": 1
      },
      "lineNbr": 1618,
      "author": {
        "id": 1132673
      },
      "writtenOn": "2018-12-13T13:23:20Z",
      "side": 1,
      "message": "Yes, this is a new thing, but inside the build system, it is using many of the building blocks made for NDK.\n\nWe cannot just piggybacking on NDK because we definitely need more symbols than NDK.",
      "parentUuid": "2ea57c36_1df22fa6",
      "range": {
        "startLine": 1618,
        "startChar": 8,
        "endLine": 1618,
        "endChar": 27
      },
      "revId": "bfcf91f24127d72a7e09d3d7e4aa2c9bf2c09333",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8f3aa605_90f1a6e5",
        "filename": "libc/libc.arm.map",
        "patchSetId": 1
      },
      "lineNbr": 1426,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2018-12-13T09:50:44Z",
      "side": 1,
      "message": "Somehow it would be great to be able to annotate which apex uses those methods.",
      "range": {
        "startLine": 1426,
        "startChar": 30,
        "endLine": 1426,
        "endChar": 36
      },
      "revId": "bfcf91f24127d72a7e09d3d7e4aa2c9bf2c09333",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    }
  ]
}