{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "cff47549_bfed2648",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 12
      },
      "lineNbr": 0,
      "author": {
        "id": 1453063
      },
      "writtenOn": "2023-09-28T13:41:12Z",
      "side": 1,
      "message": "Looks scary (with number of files), most of them are just adding an `__attribute__((no_sanitize(\"memtag-globals\")))` to a global, I promise.",
      "revId": "6a7f7938f09f8c714429bc12227b62d7f50a7afa",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f1f464f1_a7c241b5",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 12
      },
      "lineNbr": 0,
      "author": {
        "id": 1005967
      },
      "writtenOn": "2023-09-28T21:16:28Z",
      "side": 1,
      "message": "Indeed this looks scary and a bit of maintenance issue. Will a missing annotation be detected in a non-MTE build? Likely not.\n\nYou probably put a lot of thought into it already, but just to make sure... What if we disabled mte-globals for linker? Alternatively, is it possible to move linker got setup earlier to limit the number of special globals?\n\nNote that these annotation disable global tagging both in linker and libc.so. Ex. both copies of stdin/stdout vars are unprotected.",
      "parentUuid": "cff47549_bfed2648",
      "revId": "6a7f7938f09f8c714429bc12227b62d7f50a7afa",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ac92ae93_75e3e0a6",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 12
      },
      "lineNbr": 0,
      "author": {
        "id": 1453063
      },
      "writtenOn": "2023-09-29T11:22:26Z",
      "side": 1,
      "message": "I actually meant \"scary\" in relation to the number of files in the diff, but yeah, it\u0027s hard to stay on top of the maintenance.\n\nIt *would* be detected in an MTE build that runs on a non-MTE device though! It\u0027s probably going to require a whole bunch of build system glue to run a simple main() binary with an MTE-globals instrumented libc/libdl/etc. Probably a bit more difficult to use the linker (rpath and such).\n\n\u003e What if we disabled mte-globals for linker\n\nThat\u0027s the current patch, but most of the attribute spam is for the linker itself. There\u0027s a few in libc for sure, but I reckon 85%+ are preemptive for the linker.\n\nDo you think I should remove all the non-linker-required ones (gonna take a bit to run through and filter them out)? Then maybe can work on the MTE-globals-on-non-MTE as a follow up (but don\u0027t want to block this patch on it).",
      "parentUuid": "f1f464f1_a7c241b5",
      "revId": "6a7f7938f09f8c714429bc12227b62d7f50a7afa",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "5cebebdc_071e411f",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 12
      },
      "lineNbr": 0,
      "author": {
        "id": 1453063
      },
      "writtenOn": "2023-10-02T13:52:48Z",
      "side": 1,
      "message": "Minimised the amount of annotations to what\u0027s just necessary for an instrumented libc, which is 6 globals with annotations (mostly for stuff shared between linker\u003c-\u003elibc).\n\nI think this is reasonable and maintainable for now, but I\u0027m still looking into that run-mte-globals-on-non-mte-aarch64-device for extra stability.",
      "parentUuid": "ac92ae93_75e3e0a6",
      "revId": "6a7f7938f09f8c714429bc12227b62d7f50a7afa",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "4137e275_78ce96e7",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 12
      },
      "lineNbr": 0,
      "author": {
        "id": 1005967
      },
      "writtenOn": "2023-10-02T21:34:56Z",
      "side": 1,
      "message": "MTE globals are ABI-compatible. I thought the plan was to always do the instrumentation, or do you see a non-trivial performance change?",
      "parentUuid": "5cebebdc_071e411f",
      "revId": "6a7f7938f09f8c714429bc12227b62d7f50a7afa",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}