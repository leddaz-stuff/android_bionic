{
  "comments": [
    {
      "key": {
        "uuid": "bfef85fe_908054d3",
        "filename": "libc/bionic/pthread_attr.cpp",
        "patchSetId": 1
      },
      "lineNbr": 48,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2014-12-02T23:19:45Z",
      "side": 1,
      "message": "no, you MUST build the implementation with these visible.",
      "revId": "ce15248df5943064823723728acd4a195059ce0f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ffe57d1c_9bcab728",
        "filename": "libc/bionic/pthread_attr.cpp",
        "patchSetId": 1
      },
      "lineNbr": 203,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2014-12-02T23:19:45Z",
      "side": 1,
      "message": "this isn\u0027t C.",
      "revId": "ce15248df5943064823723728acd4a195059ce0f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bfef85fe_f0e440be",
        "filename": "libc/bionic/pthread_attr.cpp",
        "patchSetId": 1
      },
      "lineNbr": 220,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2014-12-02T23:19:45Z",
      "side": 1,
      "message": "this leaks.",
      "revId": "ce15248df5943064823723728acd4a195059ce0f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5fd68940_ad165db3",
        "filename": "libc/bionic/pthread_attr.cpp",
        "patchSetId": 1
      },
      "lineNbr": 225,
      "author": {
        "id": 1056364
      },
      "writtenOn": "2014-12-03T06:33:28Z",
      "side": 1,
      "message": "Does it return the size or 0? http://linux.die.net/man/2/sched_setaffinity",
      "range": {
        "startLine": 225,
        "startChar": 4,
        "endLine": 225,
        "endChar": 27
      },
      "revId": "ce15248df5943064823723728acd4a195059ce0f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ffe57d1c_9bb8776c",
        "filename": "libc/bionic/pthread_attr.cpp",
        "patchSetId": 1
      },
      "lineNbr": 245,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2014-12-02T23:19:45Z",
      "side": 1,
      "message": "why does this need scope larger than the for loop?",
      "revId": "ce15248df5943064823723728acd4a195059ce0f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ffe57d1c_1b4c8707",
        "filename": "libc/bionic/pthread_attr.cpp",
        "patchSetId": 1
      },
      "lineNbr": 246,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2014-12-02T23:19:45Z",
      "side": 1,
      "message": "always use braces.",
      "revId": "ce15248df5943064823723728acd4a195059ce0f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5fd68940_8d028179",
        "filename": "libc/bionic/pthread_attr.cpp",
        "patchSetId": 1
      },
      "lineNbr": 252,
      "author": {
        "id": 1056364
      },
      "writtenOn": "2014-12-03T06:33:28Z",
      "side": 1,
      "message": "I prefer to include string.h when memcpy/memset are used. Only one memcpy is needed here.",
      "range": {
        "startLine": 252,
        "startChar": 6,
        "endLine": 252,
        "endChar": 12
      },
      "revId": "ce15248df5943064823723728acd4a195059ce0f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ffe57d1c_5b28cf22",
        "filename": "libc/bionic/pthread_attr.cpp",
        "patchSetId": 1
      },
      "lineNbr": 260,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2014-12-02T23:19:45Z",
      "side": 1,
      "message": "function(arg)",
      "revId": "ce15248df5943064823723728acd4a195059ce0f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1fcb3196_623ce804",
        "filename": "libc/bionic/pthread_attr.cpp",
        "patchSetId": 1
      },
      "lineNbr": 273,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2014-12-02T23:19:45Z",
      "side": 1,
      "message": "can\u0027t we just leave this until pthread_create and let the kernel decide?",
      "revId": "ce15248df5943064823723728acd4a195059ce0f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bf0865ac_88da7776",
        "filename": "libc/bionic/pthread_attr.cpp",
        "patchSetId": 1
      },
      "lineNbr": 282,
      "author": {
        "id": 1056364
      },
      "writtenOn": "2014-12-03T06:33:28Z",
      "side": 1,
      "message": "leak. I am afraid if we can remember to free it in pthread_exit. Maybe just static allocate it in pthread_attr_t is better.",
      "range": {
        "startLine": 282,
        "startChar": 8,
        "endLine": 282,
        "endChar": 22
      },
      "revId": "ce15248df5943064823723728acd4a195059ce0f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ffe57d1c_9b8077d3",
        "filename": "libc/include/machine/pthread_types.h",
        "patchSetId": 1
      },
      "lineNbr": 48,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2014-12-02T23:19:45Z",
      "side": 1,
      "message": "you can\u0027t change the size of this for LP32.",
      "revId": "ce15248df5943064823723728acd4a195059ce0f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1fcb3196_42120cc7",
        "filename": "libc/include/sched.h",
        "patchSetId": 1
      },
      "lineNbr": 72,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2014-12-02T23:19:45Z",
      "side": 1,
      "message": "why?",
      "revId": "ce15248df5943064823723728acd4a195059ce0f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bf0865ac_48dd9f6b",
        "filename": "tests/pthread_test.cpp",
        "patchSetId": 1
      },
      "lineNbr": 753,
      "author": {
        "id": 1056364
      },
      "writtenOn": "2014-12-03T06:33:28Z",
      "side": 1,
      "message": "17 is not extra room as you just setaffinity for 512 bits.",
      "range": {
        "startLine": 752,
        "startChar": 2,
        "endLine": 753,
        "endChar": 48
      },
      "revId": "ce15248df5943064823723728acd4a195059ce0f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}