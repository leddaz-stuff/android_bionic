{
  "comments": [
    {
      "key": {
        "uuid": "2154d15d_23190d9f",
        "filename": "libc/Android.bp",
        "patchSetId": 6
      },
      "lineNbr": 1810,
      "author": {
        "id": 1074628
      },
      "writtenOn": "2020-04-09T21:24:32Z",
      "side": 1,
      "message": "This is a potential regression for users that used to be using -I\n\nI\u0027m a bit surprised to see we support this property arbitrarily, we had intentionally limited the ability for modules to expose -isystem arguments to dependencies.",
      "revId": "960bc8237a640802f92fcc9fe97f24f18fbef626",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "eaf14afa_b9ec43e7",
        "filename": "libc/Android.bp",
        "patchSetId": 6
      },
      "lineNbr": 1810,
      "author": {
        "id": 1373864
      },
      "writtenOn": "2020-04-15T13:50:23Z",
      "side": 1,
      "message": "\u003e This is a potential regression for users that used to be using -I\n\nIt\u0027s necessary to keep the behaviour of bionicHeaders in global.go. gcc says:\n\n\"If a standard system include directory, or a directory specified with -isystem, is also specified with -I, the -I option is ignored.\"\n\nGiven that the -isystem paths were implicitly added in all(?) bionic configurations, the export_include_dirs here would only be significant if this library was depended on in some other configuration. Can that happen? If it does then these paths will be visited later, which isn\u0027t necessarily an issue. I think it\u0027s worth trying like this first and only add back the old non-system paths if it turns out to be a significant problem.\n\n\u003e I\u0027m a bit surprised to see we support this property arbitrarily, we had intentionally limited the ability for modules to expose -isystem arguments to dependencies.\n\nI\u0027d say this is a very legitimate use, so I\u0027m not sure the limitation isn\u0027t working. Maybe it changed with the work on b/138182343, where SDK snapshotting support for export_system_include_dirs was added.",
      "parentUuid": "2154d15d_23190d9f",
      "revId": "960bc8237a640802f92fcc9fe97f24f18fbef626",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "010a4766_2ca1542e",
        "filename": "libc/Android.bp",
        "patchSetId": 6
      },
      "lineNbr": 1810,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2020-04-15T15:40:32Z",
      "side": 1,
      "message": "dwillemsen explained to me via IM that *not* declaring these as system -- although that seems wrong -- is better in terms of what warnings you get. the assumption being that you can\u0027t [normally] change system headers, so there\u0027s no point giving you warnings for them.\n\nbut it sounds like you\u0027re saying we weren\u0027t getting that anyway? so even though we\u0027d tried to clean this up in the past, the build\u0027s probably broken now? it\u0027s worth a try, but i\u0027m happy to try that later if you\u0027re saying that currently that would be a change from the status quo anyway...",
      "parentUuid": "eaf14afa_b9ec43e7",
      "revId": "960bc8237a640802f92fcc9fe97f24f18fbef626",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "097ce494_1be82251",
        "filename": "libc/Android.bp",
        "patchSetId": 6
      },
      "lineNbr": 1856,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2020-04-09T21:54:53Z",
      "side": 1,
      "message": "these seem very different. arm-optimized-routines, jemalloc_new, and scudo are all *parts* of bionic, and so they legitimately live above this comment.\n\nart, boringssl, and minijail are just wrong. we should either fix the build system so that cc_object does the right thing, or fix those projects to not use cc_object (since it seems like you\u0027re saying that\u0027s possible).",
      "range": {
        "startLine": 1855,
        "startChar": 7,
        "endLine": 1856,
        "endChar": 44
      },
      "revId": "960bc8237a640802f92fcc9fe97f24f18fbef626",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "73b0ea5f_4bbc7f72",
        "filename": "libc/Android.bp",
        "patchSetId": 6
      },
      "lineNbr": 1856,
      "author": {
        "id": 1373864
      },
      "writtenOn": "2020-04-15T13:50:23Z",
      "side": 1,
      "message": "\u003e these seem very different. arm-optimized-routines, jemalloc_new, and scudo are all *parts* of bionic, and so they legitimately live above this comment.\n\nMoved those up.\n\n\u003e art, boringssl, and minijail are just wrong. we should either fix the build system so that cc_object does the right thing, or fix those projects to not use cc_object (since it seems like you\u0027re saying that\u0027s possible).\n\nI\u0027ve looked a bit closer at them, and I\u0027m not sure changing them to use something else is the right way. Let\u0027s continue that discussion on b/153662223.",
      "parentUuid": "097ce494_1be82251",
      "range": {
        "startLine": 1855,
        "startChar": 7,
        "endLine": 1856,
        "endChar": 44
      },
      "revId": "960bc8237a640802f92fcc9fe97f24f18fbef626",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}