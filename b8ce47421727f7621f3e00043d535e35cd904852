{
  "comments": [
    {
      "key": {
        "uuid": "e5ca5990_5341c42d",
        "filename": "libc/bionic/system_properties.cpp",
        "patchSetId": 6
      },
      "lineNbr": 96,
      "author": {
        "id": 1042828
      },
      "writtenOn": "2015-02-24T21:55:41Z",
      "side": 1,
      "message": "In the interest of full disclosure, it was pointed out to me by one of my standards committee colleagues that this is not guaranteed to be the same type as int32_t, even if both exist.  (They are required to have the same size in that case.) Since this would be stupid, would result in at worst a compiled error, and we control the implementation, I don\u0027t think it matters.",
      "range": {
        "startLine": 96,
        "startChar": 4,
        "endLine": 96,
        "endChar": 23
      },
      "revId": "b8ce47421727f7621f3e00043d535e35cd904852",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "25d63140_cdec091a",
        "filename": "libc/bionic/system_properties.cpp",
        "patchSetId": 6
      },
      "lineNbr": 344,
      "author": {
        "id": 1042828
      },
      "writtenOn": "2015-02-24T21:55:41Z",
      "side": 1,
      "message": "I would still make these memory_order_acquire.  Even if there were a compiler that handled memory_order_consume correctly and better than memory_order_acquire (and if we really knew what that meant), I think it still wouldn\u0027t help without the appropriate kill_dependency calls to limit dependency propagation to the client code.  As it stands, we\u0027re just misleading readers into believing that we know what we\u0027re doing, and possibly exposing ourselves to more compiler bugs.\n\nBut I can live with it either way.",
      "range": {
        "startLine": 344,
        "startChar": 51,
        "endLine": 344,
        "endChar": 71
      },
      "revId": "b8ce47421727f7621f3e00043d535e35cd904852",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}