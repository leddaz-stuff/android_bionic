{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "a29e0b1e_0e56011b",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2022-05-03T22:49:55Z",
      "side": 1,
      "message": "is it worth actually merging this? you only need this for a short while, right? (and it\u0027ll bitrot the minute you stop using it...)",
      "revId": "7f8c9dc9be97957437ceef3f0839992211da1622",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5d38879c_95be117f",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1067098
      },
      "writtenOn": "2022-05-03T23:11:46Z",
      "side": 1,
      "message": "I guess I could live with this not being merged and keep carrying it locally (for how long is uncertain). But given that this is the right thing to do (we don\u0027t control every host Linux environment that folks may want to use), and reverting it is basically a search and replace, it doesn\u0027t seem too bad of an idea to merge it.",
      "parentUuid": "a29e0b1e_0e56011b",
      "revId": "7f8c9dc9be97957437ceef3f0839992211da1622",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7b16c4f5_3919654e",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1067098
      },
      "writtenOn": "2022-05-03T23:11:46Z",
      "side": 1,
      "message": "Well, a short while could",
      "parentUuid": "a29e0b1e_0e56011b",
      "revId": "7f8c9dc9be97957437ceef3f0839992211da1622",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4f8b234e_c62c91ec",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2022-05-03T23:42:54Z",
      "side": 1,
      "message": "\u003e we don\u0027t control every host Linux environment that folks may want to use\n\nit\u0027s unclear to me how much we\u0027ll actually support anything that\u0027s \"not Android\" though... my working assumption is that device \u003d\u003e bionic but host \u003d\u003e musl. and nothing else works with non-4KiB pages. not ART, not even toybox... this is really only useful for someone testing bionic on not-Android --- which is \"you\" :-)",
      "parentUuid": "7b16c4f5_3919654e",
      "revId": "7f8c9dc9be97957437ceef3f0839992211da1622",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8d9197d8_520986de",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1067098
      },
      "writtenOn": "2022-05-04T00:07:18Z",
      "side": 1,
      "message": "We use host Bionic for Cuttlefish host binaries on arm64. That means that this patch is needed in order for any Linux kernel with \u003e4K pages to act as a Cuttlefish host. I don\u0027t really care about running Bionic on non-Android per se, just as a dependency for Cuttlefish.\n\nOr is there a plan to move arm64 host binaries to musl? I couldn\u0027t see any code to support that, only x86. I guess if that happens we can revert this patch.",
      "parentUuid": "4f8b234e_c62c91ec",
      "revId": "7f8c9dc9be97957437ceef3f0839992211da1622",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "77e95e9a_45cec072",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2022-05-04T00:12:40Z",
      "side": 1,
      "message": "\u003e We use host Bionic for Cuttlefish host binaries on arm64. That means that this patch is needed in order for any Linux kernel with \u003e4K pages to act as a Cuttlefish host. I don\u0027t really care about running Bionic on non-Android per se, just as a dependency for Cuttlefish.\n\nbut that cuttlefish host wouldn\u0027t then be able to run Android guests with 4KiB pages, right? so it would be basically useless to us?\n\n\u003e Or is there a plan to move arm64 host binaries to musl? I couldn\u0027t see any code to support that, only x86. I guess if that happens we can revert this patch.\n\narm64 host binaries are explicitly _not_ supported atm. that work\u0027s currently not funded at all. but, yeah, if/when that happens, well, that\u0027s one of the many reasons we want to have fully replaced our ancient glibc with current musl by then :-)",
      "parentUuid": "8d9197d8_520986de",
      "revId": "7f8c9dc9be97957437ceef3f0839992211da1622",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "552e28fb_1bb78351",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1067098
      },
      "writtenOn": "2022-05-04T00:24:38Z",
      "side": 1,
      "message": "\u003e but that cuttlefish host wouldn\u0027t then be able to run Android guests with 4KiB pages, right? so it would be basically useless to us?\n\nNo, this works. The architecture allows for guests to use a different page size than the host, and Linux supports this. I actually have a Cuttlefish guest (4K pages) booting to home screen on my M1 Mac Mini running Linux (16K pages) as the host kernel.\n\n\u003e arm64 host binaries are explicitly _not_ supported atm. that work\u0027s currently not funded at all. but, yeah, if/when that happens, well, that\u0027s one of the many reasons we want to have fully replaced our ancient glibc with current musl by then :-)\n\nI guess that means that Cuttlefish on arm64 depends on an unsupported libc configuration for its host binaries.",
      "parentUuid": "77e95e9a_45cec072",
      "revId": "7f8c9dc9be97957437ceef3f0839992211da1622",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1add610b_88766dda",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2022-05-04T00:38:51Z",
      "side": 1,
      "message": "\u003e The architecture allows for guests to use a different page size than the host, and Linux supports this.\n\ninteresting... (i\u0027m still struggling to imagine how we could ever move the ecosystem\u0027s hard-coded 4096es though :-( )\n\n\u003e I guess that means that Cuttlefish on arm64 depends on an unsupported libc configuration for its host binaries.\n\nyeah, but that\u0027s probably fine as long as their host is equivalent to a guest. like i said, hopefully we\u0027ll have switched to musl before this actually matters.",
      "parentUuid": "552e28fb_1bb78351",
      "revId": "7f8c9dc9be97957437ceef3f0839992211da1622",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6d3f6b28_f52655f3",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1293738
      },
      "writtenOn": "2022-08-10T20:20:48Z",
      "side": 1,
      "message": "I\u0027m working with engprod in b/241823164 to provide a limited trial of a distro that uses a 64KB page size to provide at least the possibility of continuous integration testing of non-4KB page size, but 16KB page size is indeed a harder sell because only M1+Asahi would run in this configuration as many pre-8.2 Cortex CPUs did not have 16KB page size support. Hopefully this trial is successful and will support the merging of this patch.",
      "parentUuid": "1add610b_88766dda",
      "revId": "7f8c9dc9be97957437ceef3f0839992211da1622",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "69aacd0d_552b43f7",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2022-08-10T21:09:01Z",
      "side": 1,
      "message": "(i\u0027ve commented on that bug, expressing skepticism that this is a good idea until/unless we have a plan for how we\u0027d ever ship this. without such a plan, we\u0027re just increasing everyone\u0027s maintenance load by having a non-shipping configuration in CI.)",
      "parentUuid": "6d3f6b28_f52655f3",
      "revId": "7f8c9dc9be97957437ceef3f0839992211da1622",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}